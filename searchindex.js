Search.setIndex({"docnames": ["api/benchmarking/benchmarking/index", "api/benchmarking/index", "api/benchmarking/profiling/index", "api/cmaes/index", "api/constants/index", "api/controllers/controller/index", "api/controllers/index", "api/controllers/sampling_base/index", "api/cross_entropy_method/index", "api/dynamics/action_trajectory/index", "api/dynamics/index", "api/dynamics/locomotion_plant/index", "api/dynamics/mujoco_dynamics/index", "api/dynamics/mujoco_utils/index", "api/dynamics/state_helpers/index", "api/environments/base/index", "api/environments/index", "api/environments/tire_state_cache_generator/index", "api/experts/expert/index", "api/experts/expert_sampler/index", "api/experts/index", "api/experts/network/index", "api/experts/primitive/index", "api/experts/primitives/index", "api/experts/primitives/spot_standing_box/index", "api/learning/index", "api/learning/learner/index", "api/learning/networks/index", "api/learning/normalizer/index", "api/learning/replay_buffer/index", "api/model/index", "api/mppi/index", "api/mujoco_dynamics/dynamics/index", "api/mujoco_dynamics/index", "api/mujoco_dynamics/kinematics/index", "api/mujoco_dynamics/utils/index", "api/particle_filter/index", "api/path_resolvers/index", "api/planner/action_processor/index", "api/planner/action_sampler/index", "api/planner/clipping_method/index", "api/planner/data_collection/index", "api/planner/graph/index", "api/planner/graph_visuals/index", "api/planner/graph_worker/index", "api/planner/index", "api/planner/linear_algebra/index", "api/planner/logger/index", "api/planner/parameter_container/index", "api/planner/planner/index", "api/planner/planner_helpers/index", "api/planner/types/index", "api/predictive_sampling/index", "api/scenes/index", "api/scenes/scene_composer/index", "api/scenes/scene_generator/index", "api/scenes/scene_registry/index", "api/spot_box/index", "api/spot_hand_navigation/index", "api/spot_navigation/index", "api/spot_tire/index", "api/tasks/acrobot/index", "api/tasks/cartpole/index", "api/tasks/cost_functions/index", "api/tasks/cylinder_push/index", "api/tasks/index", "api/tasks/mujoco_task/index", "api/tasks/spot_base/index", "api/tasks/spot_position_control/index", "api/tasks/task/index", "api/viser_app/app/index", "api/viser_app/gui/index", "api/viser_app/index", "api/viser_app/io/index", "api/viser_app/json_serializer/index", "api/viser_app/profiler/index", "api/visualization/index", "api/visuals/index", "api/visuals/meshcat_visualizer/index", "api/visuals/mujoco_visualizer/index", "api/visuals/quaternion_operations/index", "index"], "filenames": ["api/benchmarking/benchmarking/index.rst", "api/benchmarking/index.rst", "api/benchmarking/profiling/index.rst", "api/cmaes/index.rst", "api/constants/index.rst", "api/controllers/controller/index.rst", "api/controllers/index.rst", "api/controllers/sampling_base/index.rst", "api/cross_entropy_method/index.rst", "api/dynamics/action_trajectory/index.rst", "api/dynamics/index.rst", "api/dynamics/locomotion_plant/index.rst", "api/dynamics/mujoco_dynamics/index.rst", "api/dynamics/mujoco_utils/index.rst", "api/dynamics/state_helpers/index.rst", "api/environments/base/index.rst", "api/environments/index.rst", "api/environments/tire_state_cache_generator/index.rst", "api/experts/expert/index.rst", "api/experts/expert_sampler/index.rst", "api/experts/index.rst", "api/experts/network/index.rst", "api/experts/primitive/index.rst", "api/experts/primitives/index.rst", "api/experts/primitives/spot_standing_box/index.rst", "api/learning/index.rst", "api/learning/learner/index.rst", "api/learning/networks/index.rst", "api/learning/normalizer/index.rst", "api/learning/replay_buffer/index.rst", "api/model/index.rst", "api/mppi/index.rst", "api/mujoco_dynamics/dynamics/index.rst", "api/mujoco_dynamics/index.rst", "api/mujoco_dynamics/kinematics/index.rst", "api/mujoco_dynamics/utils/index.rst", "api/particle_filter/index.rst", "api/path_resolvers/index.rst", "api/planner/action_processor/index.rst", "api/planner/action_sampler/index.rst", "api/planner/clipping_method/index.rst", "api/planner/data_collection/index.rst", "api/planner/graph/index.rst", "api/planner/graph_visuals/index.rst", "api/planner/graph_worker/index.rst", "api/planner/index.rst", "api/planner/linear_algebra/index.rst", "api/planner/logger/index.rst", "api/planner/parameter_container/index.rst", "api/planner/planner/index.rst", "api/planner/planner_helpers/index.rst", "api/planner/types/index.rst", "api/predictive_sampling/index.rst", "api/scenes/index.rst", "api/scenes/scene_composer/index.rst", "api/scenes/scene_generator/index.rst", "api/scenes/scene_registry/index.rst", "api/spot_box/index.rst", "api/spot_hand_navigation/index.rst", "api/spot_navigation/index.rst", "api/spot_tire/index.rst", "api/tasks/acrobot/index.rst", "api/tasks/cartpole/index.rst", "api/tasks/cost_functions/index.rst", "api/tasks/cylinder_push/index.rst", "api/tasks/index.rst", "api/tasks/mujoco_task/index.rst", "api/tasks/spot_base/index.rst", "api/tasks/spot_position_control/index.rst", "api/tasks/task/index.rst", "api/viser_app/app/index.rst", "api/viser_app/gui/index.rst", "api/viser_app/index.rst", "api/viser_app/io/index.rst", "api/viser_app/json_serializer/index.rst", "api/viser_app/profiler/index.rst", "api/visualization/index.rst", "api/visuals/index.rst", "api/visuals/meshcat_visualizer/index.rst", "api/visuals/mujoco_visualizer/index.rst", "api/visuals/quaternion_operations/index.rst", "index.md"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">benchmarking.benchmarking</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">benchmarking</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">benchmarking.profiling</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cmaes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">constants</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">controllers.controller</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">controllers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">controllers.sampling_base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cross_entropy_method</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dynamics.action_trajectory</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dynamics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dynamics.locomotion_plant</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dynamics.mujoco_dynamics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dynamics.mujoco_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dynamics.state_helpers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">environments.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">environments</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">environments.tire_state_cache_generator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">experts.expert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">experts.expert_sampler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">experts</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">experts.network</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">experts.primitive</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">experts.primitives</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">experts.primitives.spot_standing_box</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">learning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">learning.learner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">learning.networks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">learning.normalizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">learning.replay_buffer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mppi</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mujoco_dynamics.dynamics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mujoco_dynamics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mujoco_dynamics.kinematics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mujoco_dynamics.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">particle_filter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">path_resolvers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.action_processor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.action_sampler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.clipping_method</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.data_collection</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.graph_visuals</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.graph_worker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.linear_algebra</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.parameter_container</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.planner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.planner_helpers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.types</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">predictive_sampling</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">scenes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">scenes.scene_composer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">scenes.scene_generator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">scenes.scene_registry</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spot_box</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spot_hand_navigation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spot_navigation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spot_tire</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tasks.acrobot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tasks.cartpole</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tasks.cost_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tasks.cylinder_push</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tasks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tasks.mujoco_task</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tasks.spot_base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tasks.spot_position_control</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tasks.task</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.app</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.gui</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.io</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.json_serializer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.profiler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">visualization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">visuals</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">visuals.meshcat_visualizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">visuals.mujoco_visualizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">visuals.quaternion_operations</span></code>", "jacta-manipulation"], "terms": {"allow": [0, 2, 7, 50], "user": [0, 2, 51, 78, 79], "planner": [0, 1, 2, 3, 8, 9, 11, 12, 15, 17, 18, 19, 21, 22, 24, 26, 29, 31, 36, 52, 79], "instanc": [0, 1, 2, 54, 70], "class": [0, 3, 4, 5, 7, 8, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 42, 44, 47, 48, 49, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 73, 74, 75, 76, 78, 79], "list": [0, 13, 15, 17, 22, 34, 35, 43, 48, 51, 54, 61, 62, 64, 66, 67, 68, 69, 71, 78, 79, 80], "jactamanipul": [0, 3, 6, 7, 8, 9, 11, 12, 15, 17, 18, 19, 21, 22, 24, 26, 27, 29, 31, 35, 36, 38, 39, 41, 42, 43, 44, 47, 49, 52, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 76, 79], "seed": [0, 48], "torch": [0, 9, 11, 12, 15, 17, 18, 19, 21, 22, 26, 27, 28, 35, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 79], "inttensor": [0, 12, 15, 18, 19, 21, 22, 38, 39, 42, 44, 46, 47], "none": [0, 2, 3, 5, 6, 7, 8, 11, 12, 15, 17, 22, 26, 27, 28, 29, 30, 31, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 78, 79, 80], "name": [0, 6, 13, 30, 35, 43, 48, 54, 56, 65, 78, 79], "verbos": [0, 26, 44, 49], "bool": [0, 2, 7, 17, 21, 26, 30, 34, 35, 41, 42, 43, 44, 48, 49, 50, 62, 66, 69, 70, 75, 78, 79], "fals": [0, 7, 17, 26, 42, 44, 49, 50, 70, 74, 75, 78, 79], "py": [0, 3, 4, 5, 7, 8, 11, 12, 14, 15, 17, 18, 19, 21, 22, 26, 27, 28, 29, 31, 34, 36, 38, 39, 42, 44, 47, 48, 49, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 74, 75, 76, 78], "method": [0, 5, 7, 8, 11, 12, 18, 19, 21, 22, 27, 28, 29, 36, 39, 44, 46, 47, 49, 56, 61, 62, 64, 66, 68, 69, 70, 74, 75, 76, 78, 79], "run_benchmark": 0, "iter": [0, 22, 44, 47, 71], "over": [0, 22, 61, 62, 64, 68], "run": [0, 2, 11, 26, 27, 48, 70], "them": [0, 22, 46, 79], "each": [0, 24, 39, 43, 46, 61, 62, 64, 67, 68, 79], "sequenti": 0, "paramet": [0, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 69, 70, 71, 73, 75, 76, 78, 79, 80], "option": [0, 12, 30, 38, 40, 42, 43, 44, 48, 51, 61, 62, 64, 67, 70, 71, 75, 78, 79, 80], "print_result": 0, "print": [0, 44, 70], "distanc": [0, 12, 26, 39, 42, 44, 47, 48, 50, 61, 62, 64, 68], "time": [0, 3, 5, 7, 8, 12, 26, 31, 35, 36, 46, 47, 49, 52, 61, 62, 64, 68], "pre": [0, 26], "prune": [0, 47], "node": [0, 22, 28, 39, 42, 43, 44, 47, 49, 51], "post": [0, 15], "trajectori": [0, 9, 11, 12, 13, 22, 24, 26, 35, 38, 39, 48, 49, 79], "length": [0, 5, 7, 9, 12, 30, 44, 78], "after": [0, 15, 34, 42, 44, 79], "call": [0, 12, 15, 38, 44, 67, 75, 79], "return": [0, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 22, 24, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 78, 79, 80], "type": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 22, 24, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 78, 79, 80], "visualize_result": 0, "planner_indic": 0, "meshcat": [0, 13, 35, 43, 78, 79], "visual": [0, 30, 35, 43, 66, 69, 70], "result": [0, 9, 12, 13, 35, 49, 70, 76, 80], "profil": [1, 70, 72], "run_exampl": 2, "example_typ": 2, "str": [2, 3, 5, 6, 7, 8, 12, 13, 15, 17, 21, 22, 24, 29, 30, 31, 32, 34, 35, 36, 37, 41, 42, 43, 47, 48, 51, 52, 54, 56, 65, 66, 67, 69, 70, 71, 75, 78, 79], "example_nam": 2, "test_mod": 2, "true": [2, 7, 17, 21, 26, 30, 34, 42, 43, 44, 50, 74, 78, 79], "ani": [2, 3, 5, 7, 8, 15, 27, 28, 30, 31, 34, 36, 48, 51, 52, 54, 56, 61, 62, 66, 67, 69, 71, 75, 78, 79], "perform": [2, 3, 8, 15, 26, 27, 31, 36, 40, 44, 52, 69, 70], "given": [2, 12, 13, 15, 17, 22, 24, 26, 27, 35, 38, 42, 46, 50, 78, 79, 80], "task": [2, 3, 7, 8, 15, 17, 26, 31, 34, 36, 52, 57, 58, 59, 60, 70, 76], "can": [2, 22, 30, 69, 70, 71, 79], "planner_single_go": 2, "planner_multi_go": 2, "planner_explor": 2, "floating_hand": 2, "proximity_optim": 2, "allegro_hand": 2, "test": 2, "mode": [2, 27, 51], "thi": [2, 12, 15, 42, 44, 46, 50, 54, 57, 58, 59, 60, 66, 67, 69, 70, 78, 79, 80], "i": [2, 5, 7, 15, 22, 24, 26, 27, 28, 30, 34, 39, 40, 42, 43, 46, 47, 50, 54, 61, 62, 64, 66, 67, 69, 70, 73, 75, 78, 79, 80], "much": [2, 27], "faster": 2, "won": 2, "t": [2, 7, 46, 78, 80], "fulli": [2, 42], "complet": [2, 22, 27, 54], "cmaesconfig": 3, "base": [3, 5, 7, 8, 11, 16, 17, 21, 22, 24, 27, 28, 29, 31, 36, 38, 39, 42, 44, 48, 50, 51, 52, 54, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 73, 74, 78, 79], "control": [3, 8, 27, 31, 36, 38, 44, 52, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 76], "sampling_bas": [3, 6, 8, 31, 36, 52], "samplingbaseconfig": [3, 7, 8, 31, 36, 52], "configur": [3, 8, 17, 24, 30, 31, 34, 36, 52, 61, 62, 64, 68, 69, 75, 79], "sampl": [3, 7, 12, 18, 21, 26, 27, 29, 31, 39, 42, 44, 52, 69], "attribut": [3, 4, 7, 8, 12, 14, 17, 26, 29, 31, 36, 38, 51, 52, 54, 57, 58, 59, 60, 61, 62, 64, 67, 68, 75, 78], "sigma_init": 3, "float": [3, 5, 7, 8, 12, 13, 17, 26, 27, 28, 30, 31, 34, 35, 36, 38, 42, 43, 44, 46, 47, 50, 51, 52, 57, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 78, 79], "valu": [3, 5, 7, 8, 14, 17, 22, 27, 31, 36, 46, 48, 51, 52, 54, 68, 71, 78, 79], "0": [3, 4, 7, 8, 11, 12, 17, 26, 27, 28, 30, 31, 34, 35, 36, 40, 42, 43, 47, 49, 50, 51, 52, 57, 60, 61, 62, 64, 67, 68, 71, 78, 79, 80], "05": [3, 27, 31, 52, 60, 71], "max_it": [3, 34], "int": [3, 5, 7, 8, 9, 12, 13, 14, 17, 22, 26, 27, 28, 30, 34, 35, 39, 42, 43, 44, 46, 47, 48, 49, 57, 58, 59, 60, 66, 67, 69, 71, 78, 79], "20": [3, 7, 34, 50], "config": [3, 5, 7, 8, 17, 31, 36, 52, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 75], "reward_config": [3, 7, 8, 31, 36, 52], "taskconfig": [3, 7, 8, 31, 36, 52, 61, 62, 64, 65, 66, 67, 68, 69, 70], "samplingbas": [3, 7, 8, 31, 36, 52], "object": [3, 7, 8, 12, 14, 18, 19, 21, 22, 26, 31, 32, 36, 39, 50, 51, 52, 54, 69, 73, 74, 78, 79], "hyperparamet": [3, 8, 31, 36, 52], "model": [3, 5, 7, 8, 12, 13, 26, 31, 32, 34, 35, 36, 41, 48, 52, 54, 61, 62, 64, 66, 67, 68, 69, 76, 78, 79], "mujoco": [3, 8, 11, 12, 13, 30, 31, 34, 35, 36, 52, 54, 56, 66, 67, 79], "system": [3, 8, 31, 35, 36, 44, 52, 67, 69], "being": [3, 7, 8, 31, 36, 52], "data": [3, 7, 8, 11, 12, 13, 26, 27, 28, 29, 30, 31, 32, 35, 36, 42, 48, 50, 51, 52, 69, 70, 78], "current": [3, 5, 7, 8, 15, 22, 26, 28, 31, 36, 38, 42, 44, 47, 52, 66, 70, 71, 76, 79], "reward_func": [3, 8, 31, 36, 52], "function": [3, 5, 7, 8, 12, 15, 22, 26, 30, 31, 36, 42, 50, 52, 54, 57, 58, 59, 60, 69, 70, 75, 79, 80], "map": [3, 8, 31, 36, 42, 52, 61, 62, 64, 68, 78, 80], "batch": [3, 7, 8, 29, 31, 36, 52, 61, 62, 64, 68, 80], "state": [3, 5, 7, 8, 11, 12, 14, 15, 17, 22, 26, 27, 28, 31, 35, 36, 38, 39, 42, 48, 49, 51, 52, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 76, 79], "reward": [3, 8, 15, 26, 30, 31, 36, 42, 43, 44, 47, 48, 52, 57, 58, 59, 60, 61, 62, 64, 68, 69], "update_act": [3, 5, 7, 8, 31, 36, 52], "curr_stat": [3, 5, 7, 8, 31, 36, 52], "numpi": [3, 5, 7, 8, 12, 13, 14, 17, 22, 24, 27, 30, 31, 34, 35, 36, 43, 46, 52, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 74, 78, 79, 80], "ndarrai": [3, 5, 7, 8, 13, 14, 17, 22, 24, 30, 31, 34, 35, 36, 43, 46, 52, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 78, 79, 80], "curr_tim": [3, 5, 7, 8, 31, 36, 52], "additional_info": [3, 5, 7, 8, 31, 36, 52, 66, 67, 69], "dict": [3, 5, 6, 7, 8, 11, 12, 14, 15, 22, 24, 27, 28, 31, 36, 44, 48, 52, 54, 65, 66, 67, 69, 75, 76, 78, 79], "rollout": [3, 5, 7, 8, 26, 30, 31, 36, 44, 52, 61, 62, 64, 66, 67, 68, 69], "comput": [3, 8, 12, 22, 27, 31, 36, 38, 46, 52, 80], "from": [3, 5, 7, 8, 11, 12, 13, 26, 27, 29, 30, 31, 35, 36, 38, 39, 41, 42, 44, 48, 49, 50, 52, 54, 61, 62, 64, 69, 71, 76, 78, 79, 80], "action": [3, 5, 7, 8, 9, 11, 12, 15, 18, 19, 21, 22, 24, 26, 27, 31, 36, 38, 39, 40, 42, 43, 44, 46, 47, 49, 51, 52, 80], "best": [3, 8, 31, 36, 42, 43, 44, 47, 52], "polici": [3, 8, 11, 26, 27, 31, 36, 38, 48, 52, 67], "legs_sitting_po": 4, "legs_standing_po": 4, "arm_stowed_po": 4, "arm_unstowed_po": 4, "sitting_stowed_po": 4, "sitting_unstowed_po": 4, "standing_stowed_po": 4, "standing_unstowed_po": 4, "standing_height": 4, "52": 4, "arm_link_nam": 4, "arm_link_sh0": 4, "arm_link_sh1": 4, "arm_link_el0": 4, "arm_link_el1": 4, "arm_link_wr0": 4, "arm_link_wr1": 4, "leg_link_nam": 4, "front_left_hip": 4, "front_left_upper_leg": 4, "front_left_lower_leg": 4, "front_right_hip": 4, "arm_joint_nam": 4, "arm_sh0": 4, "arm_sh1": 4, "arm_el0": 4, "arm_el1": 4, "arm_wr0": 4, "arm_wr1": 4, "arm_f1x": 4, "leg_joint_nam": 4, "joint_front_left_hip_x": 4, "joint_front_left_hip_i": 4, "joint_front_left_kne": 4, "spot_body_slic": 4, "slice": [4, 14, 38, 50], "spot_quat_slic": 4, "spot_legs_slic": 4, "spot_arms_slic": 4, "spot_body_vel_slic": 4, "spot_angs_vel_slic": 4, "spot_legs_vel_slic": 4, "spot_arms_vel_slic": 4, "spot_state_ind": 4, "spot": [4, 14, 17, 24, 38, 54, 57, 58, 59, 60, 67, 68], "": [4, 12, 27, 39, 50, 56], "indic": [4, 12, 15, 42, 43, 44], "where": [4, 30, 47, 62, 71, 79], "relev": 4, "bodi": [4, 12, 13, 54, 68, 79], "part": [4, 12, 24, 78, 79], "ar": [4, 14, 22, 26, 27, 30, 38, 39, 42, 44, 46, 62, 71, 79, 80], "body_slic": 4, "quat_slic": 4, "legs_slic": 4, "arms_slic": 4, "body_vel_slic": 4, "angs_vel_slic": 4, "legs_vel_slic": 4, "arms_vel_slic": 4, "controllerconfig": [5, 6, 7, 70], "spline": [5, 7, 30, 67, 79], "abstract": [5, 7, 67, 69], "all": [5, 7, 12, 15, 28, 30, 42, 44, 46, 56, 71, 73, 76, 78, 79], "implement": [5, 7, 27, 28, 44, 48, 61, 62, 64, 68, 69, 78], "properti": [5, 7, 15, 17, 34, 42, 48, 54, 57, 58, 59, 60, 66, 67, 69, 78, 79], "num_timestep": [5, 7], "abstractmethod": [5, 69], "helper": [5, 7, 30, 70], "recalcul": [5, 7], "number": [5, 7, 35, 42, 43, 44, 47, 51, 57, 58, 59, 60, 66, 79], "timestep": [5, 7, 28, 66, 67, 69], "simul": [5, 7, 12, 15, 39, 42, 66, 67, 69, 70], "rollout_tim": [5, 7], "calcul": [5, 7, 15, 39, 42, 46, 50, 80], "horizon": [5, 7, 8], "contain": [5, 7, 9, 12, 13, 22, 26, 27, 28, 32, 35, 38, 42, 48, 50, 66, 69, 70, 71, 73, 76, 78, 79], "signal": [5, 7], "appli": [5, 7, 12, 46, 51], "make_model": [5, 7, 66, 67, 69], "re": [5, 7, 39, 44, 46], "size": [5, 7, 12, 14, 28, 30, 42, 43, 44, 46, 78, 79], "vector": [5, 7, 9, 11, 12, 38, 40, 44, 46, 67, 69, 80], "num_rollout": [5, 7, 8], "updat": [5, 7, 12, 14, 15, 26, 27, 28, 30, 42, 44, 48, 69, 70, 71, 76, 79], "queri": [5, 7, 15, 21], "set_default_control": [5, 7], "set": [5, 7, 12, 14, 15, 17, 26, 27, 30, 34, 35, 39, 42, 43, 46, 48, 51, 54, 66, 69, 70, 71, 78, 79], "default": [5, 7, 14, 17, 19, 30, 38, 42, 43, 44, 50, 51, 61, 62, 64, 66, 67, 71, 74, 78, 79, 80], "zero": [5, 7, 9, 28, 38, 61, 62, 64, 66, 69], "reset": [5, 7, 12, 15, 22, 26, 29, 39, 42, 43, 44, 47, 48, 49, 57, 58, 59, 60, 61, 62, 64, 66, 68, 69, 70, 79], "get_registered_control": 6, "tupl": [6, 12, 13, 15, 17, 24, 26, 30, 35, 39, 42, 44, 47, 49, 65, 66, 67, 69, 79], "register_control": 6, "controller_typ": 6, "controller_config_typ": 6, "max_num_trac": 7, "5": [7, 8, 11, 35, 36, 42, 50, 51, 57, 64, 78, 80], "1": [7, 8, 11, 12, 17, 24, 27, 30, 31, 34, 36, 40, 42, 43, 46, 50, 51, 52, 57, 60, 61, 62, 64, 68, 71, 78, 79, 80], "num_nod": 7, "32": [7, 8], "spline_ord": 7, "liter": [7, 17], "slinear": 7, "cubic": 7, "control_freq": 7, "use_noise_ramp": 7, "spline_timestep": 7, "creat": [7, 9, 14, 26, 38, 47, 54, 69, 70, 71], "new": [7, 14, 22, 28, 42, 44, 56, 70, 79], "scipi": [7, 66, 67, 69], "interpol": [7, 9, 51, 66, 67, 69], "interp1d": [7, 66, 67, 69], "defin": [7, 30, 61, 62, 64, 66, 67, 68, 69, 78, 80], "update_splin": 7, "update_trac": 7, "trace": [7, 26, 30, 35, 70, 76], "extract": [7, 12, 79], "sensor": [7, 11, 14, 30, 35, 42, 50, 54, 57, 58, 59, 60, 61, 62, 64, 68, 69], "read": [7, 30, 69, 76], "we": [7, 12, 22, 30, 39, 44, 61, 62, 64, 71, 78, 80], "need": [7, 15, 30, 66, 69, 73], "have": [7, 24, 30, 46, 68], "num_spline_point": 7, "line": [7, 30, 43], "segment": [7, 30, 43], "initi": [7, 11, 12, 15, 22, 26, 30, 34, 39, 44, 54, 70, 79], "shape": [7, 28, 30, 62, 69, 80], "x": [7, 27, 28, 30, 46, 78, 79, 80], "num_physics_substep": 7, "nsensordata": [7, 12], "end": [7, 9, 12, 15, 24, 30, 38, 42, 43, 49, 51, 62], "up": [7, 15, 42, 68, 70, 79], "num_elit": [7, 8, 30], "num_trace_sensor": [7, 30], "singl": [7, 44, 80], "2": [7, 8, 11, 17, 24, 30, 43, 51, 67, 69, 78, 79, 80], "first": [7, 9, 12, 46], "last": [7, 12, 15, 39, 42, 44, 46, 51, 78], "point": [7, 30, 43, 51, 79], "3": [7, 11, 13, 17, 24, 27, 30, 35, 43, 46, 50, 51, 60, 78, 80], "3d": [7, 28, 30, 79], "po": [7, 30, 46, 78, 79, 80], "make_splin": 7, "arrai": [7, 9, 12, 14, 27, 28, 38, 46, 48, 69, 74, 79, 80], "knot": 7, "possibli": 7, "m": [7, 13, 30, 35, 46, 78], "order": [7, 9, 24, 38], "us": [7, 9, 12, 15, 26, 28, 38, 42, 54, 66, 67, 69, 71, 79, 80], "same": [7, 22, 39, 44, 46, 66, 71], "extrapol": 7, "whether": [7, 30, 42, 43, 44], "crossentropyconfig": 8, "cross": [8, 36], "entropi": [8, 36], "sigma_min": 8, "sigma_max": 8, "8": [8, 11, 17, 30], "noise_ramp": [8, 52], "crossentropymethod": 8, "The": [8, 9, 13, 17, 24, 27, 28, 30, 35, 36, 37, 38, 40, 42, 46, 50, 61, 62, 64, 66, 78, 79], "submodul": [9, 12, 18, 19, 21, 22], "create_action_trajectori": 9, "controltyp": [9, 51], "start_act": [9, 24, 38, 42], "floattensor": [9, 11, 12, 15, 18, 19, 21, 22, 26, 27, 28, 35, 38, 39, 40, 42, 43, 44, 46, 47, 49, 50, 79], "end_act": [9, 24, 38, 42], "trajectory_step": [9, 38], "hold": [9, 12, 42], "A": [9, 12, 22, 27, 28, 46, 50, 62, 69, 78, 79, 80], "na": [9, 12, 22, 38], "start": [9, 12, 15, 26, 30, 38, 42, 43, 44, 49, 51], "desir": [9, 12, 38, 57, 58, 59, 60, 71], "For": [9, 80], "onli": [9, 12, 15, 27, 30], "held": [9, 38], "entir": 9, "linear": [9, 39, 61, 62, 64, 80], "between": [9, 12, 44, 51, 61, 62, 64, 68, 71], "an": [9, 18, 22, 27, 28, 30, 38, 39, 43, 46, 50, 54, 67, 70, 78, 79, 80], "n": [9, 12, 13, 22, 30, 35, 38, 40, 46, 78], "modul": [10, 16], "action_trajectori": [10, 11, 12], "locomotion_pl": 10, "mujoco_dynam": [10, 11, 17, 18, 19, 21, 22, 24, 26, 39, 42, 44, 49, 79], "mujoco_util": 10, "state_help": 10, "isaac_to_mujoco_ix": 11, "4": [11, 27, 30, 43, 51, 57, 80], "9": [11, 50], "6": [11, 79, 80], "10": [11, 17, 60, 61, 62], "7": [11, 30, 43, 50], "11": 11, "mujoco_to_isaac_ix": 11, "isaac_to_mujoco": 11, "isaac": 11, "tensor": [11, 12, 15, 17, 26, 27, 28, 29, 41, 42, 43, 48, 50, 51, 80], "mujoco_to_isaac": 11, "locomotionpl": 11, "param": [11, 12, 15, 17, 18, 19, 21, 22, 26, 27, 29, 38, 39, 40, 42, 44, 47, 49, 71, 78], "parameter_contain": [11, 12, 15, 17, 18, 19, 21, 22, 26, 29, 39, 42, 44, 45, 47, 49], "parametercontain": [11, 12, 15, 17, 18, 19, 21, 22, 26, 29, 39, 42, 44, 47, 48, 49], "mujocopl": [11, 12, 15, 17, 18, 19, 21, 22, 24, 26, 32, 35, 39, 42, 44, 49, 79], "locomot": [11, 38, 67], "plant": [11, 12, 15, 17, 18, 19, 21, 22, 24, 26, 35, 38, 39, 42, 44, 49, 79], "load_polici": 11, "load": [11, 26, 27, 28, 41, 42, 48, 54, 79], "process_observ": 11, "ob": [11, 27, 28], "velocity_command": 11, "process": [11, 15, 27, 48, 70, 71, 75], "observ": [11, 15, 26, 27, 28], "veloc": [11, 12, 14, 17, 61, 62, 64, 66, 69], "command": [11, 14, 66, 67], "run_polici": 11, "base_command": 11, "leg": [11, 14, 38, 54, 68], "joint": [11, 12, 15, 17, 24, 79], "target": [11, 15, 17, 27, 30, 34, 70, 71], "process_output": 11, "raw_output": 11, "raw": 11, "output": [11, 12, 27, 46], "get_sensor": [11, 12], "get": [11, 12, 17, 27, 29, 37, 38, 42, 44, 47, 51, 54, 56, 57, 58, 59, 60, 66, 69, 78], "info": [11, 12, 15, 34, 44, 76], "histori": 11, "get_joint_dimens": 12, "joint_id": 12, "arraylik": [12, 80], "state_address": 12, "state_length": 12, "correspond": [12, 51, 80], "id": [12, 13, 35, 39, 42, 44, 47], "address": 12, "total": [12, 42], "nq": [12, 39, 79], "decompose_state_dimens": 12, "mjmodel": [12, 13, 30, 34, 35, 66, 79], "decompos": 12, "actuat": [12, 22, 38, 61, 62, 66, 69], "posit": [12, 17, 30, 35, 62, 68, 78, 79, 80], "unactu": 12, "scale_dist": 12, "delta_st": [12, 42], "scale": [12, 15, 26, 30, 40, 43, 44, 46, 48, 51], "cost": 12, "matrix": [12, 42, 46, 78, 80], "xml_model_path": [12, 32], "condit": [12, 15, 62, 69], "appropri": [12, 15], "singular": 12, "parallel": [12, 44], "nx": [12, 79], "num_env": 12, "num_step": [12, 44], "action_time_step": 12, "addit": [12, 26, 66, 69], "inform": [12, 15, 66, 69], "pass": [12, 27], "next": [12, 26], "intermedi": 12, "get_gradi": 12, "gradient": [12, 26, 39, 51], "state_gradients_st": 12, "state_gradients_control": 12, "nu": [12, 44, 57, 58, 59, 60, 66, 69], "sensor_gradients_st": 12, "sensor_gradients_control": 12, "set_stat": [12, 35], "get_stat": 12, "set_act": 12, "get_act": 12, "update_sensor": 12, "measur": 12, "NOT": 12, "accler": 12, "minim": [12, 39, 79], "mj_step1": 12, "see": 12, "link": [12, 43], "below": 12, "more": 12, "detail": 12, "http": [12, 28], "readthedoc": 12, "io": [12, 27, 28, 66, 69, 70, 72, 76], "en": 12, "latest": [12, 41], "program": 12, "html": [12, 79], "highlight": 12, "loop": [12, 15, 70], "final": [12, 68], "scaled_distances_to": 12, "target_st": 12, "state_differ": 12, "s1": 12, "s2": 12, "h": 12, "finit": 12, "differ": [12, 30, 42, 68], "two": [12, 30], "step": [12, 15, 27, 43, 44, 49, 66, 67, 69, 71], "d": [12, 42, 78, 80], "second": [12, 46], "state_addit": 12, "integr": 12, "forward": [12, 27, 67], "get_mass": 12, "retriev": [12, 13, 24, 35], "mass": 12, "get_quat_indic": 12, "store": [12, 15, 29, 41, 47, 70], "quaternion": [12, 17, 30, 78, 80], "field": [12, 70, 71, 75], "normalize_st": 12, "normal": [12, 25, 26, 27, 41, 42, 46], "randomli": [12, 26, 44], "portion": 12, "get_collision_fre": 12, "collis": [12, 42], "free": [12, 42, 51], "exist": 12, "render": [13, 30, 35, 43, 78, 79], "get_body_nam": 13, "bodyid": 13, "get_geom_nam": 13, "geomid": 13, "geom": [13, 30], "get_geometry_rgba": 13, "rgba": [13, 30, 43, 78, 79], "color": [13, 30, 43, 78, 79], "get_mesh_data": [13, 35], "meshid": [13, 35], "vertic": [13, 30, 35, 43, 61, 62, 78], "face": [13, 30, 35, 78], "specifi": [13, 30, 35, 50, 51, 78, 79], "mesh": [13, 30, 35, 78], "index": [13, 26, 30, 35, 42, 43, 50, 62], "np": [13, 17, 35, 43, 50, 78, 79, 80], "slice_union": 14, "union": [14, 41, 42], "multipl": [14, 22, 54, 71, 79, 80], "ensur": [14, 40, 42, 54], "thei": [14, 22, 42, 46], "contigu": 14, "statearrai": 14, "threadedlocomotionpl": 14, "base_po": 14, "base_quat": 14, "fl_leg": 14, "fr_leg": 14, "hl_leg": 14, "hr_leg": 14, "arm": [14, 17, 24, 38, 54, 68, 79], "object_po": 14, "object_quat": 14, "base_lin_vel": 14, "base_ang_vel": 14, "fl_leg_vel": 14, "fr_leg_vel": 14, "hl_leg_vel": 14, "hr_leg_vel": 14, "arm_vel": 14, "object_lin_vel": 14, "object_ang_vel": 14, "legs_vel": 14, "64": 14, "commandarrai": 14, "longitudinal_vel": 14, "lateral_vel": 14, "yaw_vel": 14, "base_rol": 14, "base_pitch": 14, "base_height": 14, "25": [14, 64, 67], "non_veloc": 14, "classmethod": [14, 54], "num_system": 14, "set_default": 14, "kwarg": [14, 24, 44, 75, 78], "as_dict": 14, "convert": [14, 38, 42, 48, 75, 78, 80], "dictionari": [14, 15, 54, 79], "sensorarrai": 14, "body_object": 14, "object_y_axi": 14, "fngr_object": 14, "trace_bodi": 14, "trace_gripp": 14, "dexterityenv": 15, "dexter": [15, 16, 47, 61, 62, 64, 68, 70, 79], "observation_spac": 15, "simplenamespac": 15, "space": [15, 46, 49, 79, 80], "action_spac": 15, "metrics_kei": 15, "kei": [15, 29, 48, 54, 78, 79], "metric": 15, "__post_init__": [15, 17, 26, 29, 34, 56], "setup_pl": 15, "setup_action_processor": 15, "actionprocessor": [15, 38], "setup_buff": [15, 29], "buffer": [15, 26, 29, 70, 76], "tracker": 15, "scale_act": 15, "rang": [15, 44, 46, 51], "uniform_random_act": 15, "gener": [15, 17, 19, 39, 42, 54, 56, 66, 69, 75, 79], "uniform": 15, "random": [15, 19, 27, 39, 42, 51, 61, 62, 64, 68], "get_metr": 15, "onc": [15, 79], "begin": 15, "train": [15, 26, 27], "otherwis": [15, 50], "automat": 15, "when": [15, 24, 42, 70, 71], "individu": [15, 22, 43, 46], "episod": [15, 26, 28], "reset_ix": 15, "ix": 15, "specif": [15, 24, 43, 44, 56, 66, 69, 79], "identifi": 15, "update_joint_target": 15, "step_sim": 15, "dynam": [15, 17, 18, 19, 21, 22, 24, 26, 33, 35, 39, 42, 44, 47, 49, 79], "post_physics_step": 15, "physic": [15, 66, 67, 70], "check_success": 15, "check": [15, 28, 42], "meet": 15, "success": [15, 26], "criteria": 15, "check_failur": 15, "failur": 15, "update_termin": 15, "termin": [15, 24, 26, 42, 62, 66, 69, 70], "task_reward": 15, "update_reward": 15, "process_reset": 15, "update_ob": 15, "preserve_reset_ob": 15, "preserv": [15, 79], "q": [15, 78, 80], "non": [15, 42], "update_info": 15, "reset_st": 15, "env_ix": 15, "set_previous_end_act": 15, "start_stat": [15, 26, 42], "previou": [15, 38, 51], "set_current_st": 15, "set_goal_st": [15, 42], "goal": [15, 26, 27, 28, 39, 42, 43, 44, 49, 51, 57, 58, 59, 60, 64, 68, 78, 79], "set_start_st": [15, 42], "close": [15, 24, 50, 51], "necessari": [15, 22], "cleanup": 15, "tire_state_cache_gener": 16, "tiregeneratorconfig": 17, "cach": [17, 42, 48], "spot_tir": 17, "spot_floating_tir": 17, "cache_s": 17, "10000": 17, "enable_rend": 17, "radius_rang": 17, "distance_rang": 17, "object_z": 17, "linear_velocity_rang": 17, "angular_velocity_rang": 17, "randomize_veloc": 17, "spotarmik": 17, "invers": [17, 34, 80], "kinemat": [17, 33], "actuated_po": [17, 38], "max_iter": 17, "200": 17, "integration_dt": 17, "damp": [17, 34], "0001": 17, "enable_orientation_control": 17, "position_toler": 17, "01": [17, 28, 34, 43, 61, 62, 71, 79], "orientation_toler": 17, "progress_threshold": 17, "max_no_progress_step": 17, "solv": [17, 26, 34], "target_xpo": 17, "target_xquat": 17, "problem": 17, "orient": [17, 30, 50, 68, 78, 79], "angl": [17, 50, 61, 62, 68], "tirestatecachegener": 17, "tire": [17, 60], "default_arm_pos": 17, "pose": [17, 24, 34, 35, 79], "default_base_pos": 17, "default_veloc": 17, "task_nam": 17, "generate_cach": 17, "set_floating_spot_cach": 17, "graph": [18, 19, 21, 22, 26, 39, 43, 44, 45, 47, 48, 49], "expert_act": 18, "node_id": [18, 19, 21, 22, 26, 39, 44, 47], "select": [18, 27, 39, 44, 47, 51, 70], "expertsampl": [18, 19, 21, 22], "accord": [18, 44], "distribtuion": 18, "sampler": [19, 29, 39, 44, 47], "callback": [19, 21, 22, 44, 70, 71], "primit": 20, "spot_standing_box": [20, 23], "expert_sampl": [20, 21, 22], "network": [20, 25, 26, 41], "networksampl": 21, "is_loc": [21, 26, 41], "path": [21, 26, 37, 41, 42, 43, 44, 47, 48, 49, 54, 56, 70, 74, 78], "model_nam": 21, "actor": [21, 26, 27, 41], "pt": 21, "state_norm_nam": 21, "state_norm": [21, 27, 28], "neural": 21, "net": [21, 27], "primitivesampl": 22, "actions_func": 22, "actions_func_kwarg": 22, "higher": 22, "level": 22, "entail": 22, "low": 22, "reach": [22, 34, 44, 50], "some": 22, "subgoal": 22, "It": [22, 42, 79], "meant": 22, "repres": [22, 24, 50, 54, 62, 80], "manipul": [22, 57, 58, 59, 60], "grasp": [22, 24], "push": [22, 64], "etc": 22, "proper": 22, "sequenc": [22, 79], "note": 22, "duplic": 22, "should": [22, 67, 79], "sinc": [22, 61, 62, 64], "stage": 22, "execut": [22, 54, 70], "compute_low_level_act": 22, "todo": [22, 30], "action_tim": [22, 24], "ignor": 22, "whatev": 22, "action_sampl": [22, 44, 45, 49], "overwrit": [22, 78], "here": [22, 71], "clear": 22, "action_seq": 22, "origin": [22, 30, 62, 79], "ongo": 22, "stand": [24, 68], "box": [24, 30, 40, 57, 58, 59, 60, 78], "e": [24, 79], "g": [24, 79], "spot_ik_mujoco": 24, "dx": 24, "ee_bodi": 24, "arm_link_fngr": 24, "ik": 24, "effector": 24, "compute_grasp_pose_for_handle_top": 24, "chang": [24, 42, 70], "handl": [24, 30, 38, 54, 71, 74, 76], "hard": 24, "code": 24, "domain": [24, 51], "compute_grasp_act": 24, "move": [24, 57, 60], "gripper": 24, "ha": [24, 61, 62, 64, 68], "three": 24, "open": 24, "learner": 25, "replay_buff": [25, 26], "encapsul": [26, 27], "deep": [26, 27], "determinist": [26, 27], "ddpg": [26, 27], "algorithm": 26, "critic": [26, 27, 41], "take": [26, 79], "care": [26, 30], "checkpoint": [26, 27, 28], "dure": 26, "well": [26, 27], "replaybuff": [26, 29], "save_loc": 26, "save_cloud": 26, "load_loc": 26, "load_cloud": 26, "construct": [26, 80], "actor_act": 26, "goal_stat": [26, 42, 79], "replai": 26, "relative_distances_to": 26, "current_st": [26, 38], "reward_funct": 26, "update_norm": 26, "plai": [26, 79], "experi": 26, "instead": 26, "everi": 26, "distribut": [26, 28, 42, 44, 46], "equal": 26, "what": 26, "encout": 26, "policy_rollout": [26, 67], "tensordict": [26, 29], "add": [26, 30, 42, 56, 71, 78, 79], "graph_rollout": 26, "set_demonstration_inject": 26, "demonstr": 26, "inject": 26, "num_epoch": 26, "50": 26, "environ": [26, 79], "preprocess_sampl": 26, "preprocess": [26, 28], "train_actor_crit": 26, "discount_factor": 26, "98": 26, "agent": [26, 27], "eval_ag": 26, "evalu": [26, 27, 42, 67], "learner_ev": 26, "averag": [26, 27], "rate": [26, 70], "save_model": [26, 41], "save": [26, 27, 28, 41, 42, 79], "locat": [26, 57, 58, 59, 60], "under": 26, "model_filenam": 26, "load_model": [26, 41, 79], "pathlib": [26, 41, 48, 54, 56, 70], "act": 27, "wrapper": [27, 30, 54, 75], "around": [27, 44], "actual": [27, 44], "provid": [27, 42, 54, 66, 69], "util": [27, 33, 79], "ddp": 27, "vanilla": 27, "soft_upd": 27, "nn": 27, "tau": 27, "soft": 27, "weight": 27, "shift": 27, "factor": 27, "direct": [27, 39, 46], "which": [27, 38, 42, 67, 71, 79, 80], "copi": 27, "how": [27, 30], "valid": [27, 42], "size_": 27, "size_a": 27, "nlayer": 27, "layer_width": 27, "256": 27, "lr": 27, "001": [27, 34, 42], "ep": [27, 28], "action_clip": 27, "select_act": 27, "input": [27, 28, 46, 63, 66, 79, 80], "If": [27, 42, 46, 70, 71, 80], "nois": 27, "choos": [27, 44], "probabl": 27, "self": [27, 28, 30, 48, 51, 69], "clip": [27, 38, 51], "maximum": [27, 46, 50, 71], "__call__": [27, 28, 38, 39], "directli": [27, 42], "backward_step": 27, "loss": 27, "backward": 27, "optim": [27, 39, 51], "without": 27, "eval": 27, "noisi": 27, "update_target": 27, "transfer": 27, "fraction": 27, "f": [27, 28, 54, 80], "bufferedwrit": [27, 28], "continu": [27, 51, 79], "choic": 27, "criticnetwork": 27, "enabl": [28, 44, 50, 70], "keep": 28, "consist": 28, "across": [28, 46], "github": 28, "com": 28, "openai": 28, "baselin": 28, "maintain": 28, "estim": 28, "mean": [28, 78], "varianc": 28, "unit": [28, 80], "alia": 28, "expect": 28, "dimens": [28, 46, 69], "rais": [28, 46], "assertionerror": 28, "fail": 28, "normalize_ob": 28, "fuse": 28, "storage_class": 29, "torchrl": 29, "storag": 29, "sampler_class": 29, "setup_storag": 29, "setup": [29, 70], "setup_sampl": 29, "extend": [29, 39, 44], "__getitem__": [29, 54, 56], "item": 29, "overload": 29, "trajectoryreplaybuff": 29, "default_grid_section_color": 30, "02": [30, 79], "14": 30, "44": 30, "default_grid_cell_color": 30, "27": [30, 50], "55": 30, "default_sphere_subdivis": 30, "default_spline_color": 30, "default_best_spline_color": 30, "96": 30, "visermjmodel": 30, "viser": [30, 66, 69, 70, 71, 73, 75, 76], "viserserv": [30, 66, 69, 70, 71, 76], "clienthandl": 30, "show_ground_plan": 30, "mjcf": 30, "mjdata": [30, 35, 66], "add_geom": 30, "geom_nam": 30, "ad": [30, 42, 71], "scene": [30, 61, 62, 64, 68], "tree": [30, 37], "add_trac": 30, "num_trac": 30, "all_traces_rollout_s": 30, "trace_nam": 30, "collect": [30, 44], "done": 30, "one": [30, 46, 75], "go": [30, 46, 68], "avoid": 30, "too": [30, 50], "mani": 30, "thing": 30, "about": [30, 40], "elit": 30, "regular": 30, "ones": 30, "due": 30, "work": [30, 44], "per": 30, "remove_trac": 30, "remov": [30, 44, 47, 70, 71, 76], "set_data": 30, "write": [30, 54, 70], "viewer": 30, "set_trac": 30, "single_rollout": 30, "group": 30, "geometri": [30, 76, 78], "add_plan": [30, 78], "quat": [30, 78, 79, 80], "scenenodehandl": 30, "plane": [30, 78], "materi": [30, 78], "add_spher": [30, 78], "radiu": [30, 50, 78, 79], "sphere": [30, 78], "add_cylind": [30, 78], "height": [30, 78], "cylind": [30, 64, 78], "align": [30, 78], "z": [30, 78, 80], "axi": [30, 50, 78], "add_box": [30, 78], "add_capsul": [30, 78], "capsul": [30, 78], "add_ellipsoid": [30, 78], "ellipsoid": [30, 78], "add_mesh": [30, 78], "triangular": [30, 78], "add_splin": 30, "ellipsi": 30, "rgb": [30, 43, 78], "line_width": [30, 43], "visibl": 30, "splinecatmullromhandl": 30, "add_seg": 30, "linesegmentshandl": 30, "bhung": 30, "potenti": [30, 39], "support": [30, 80], "kind": 30, "attach": [30, 54], "v": [30, 40, 46, 80], "coord": 30, "respect": 30, "ident": [30, 42], "broadcast": 30, "width": [30, 43, 78], "pixel": [30, 43], "rgba_float_to_int": 30, "rgba_float": 30, "rgba_int_to_float": 30, "rgba_int": 30, "set_mesh_color": 30, "trimesh": 30, "set_spline_posit": 30, "waypoint": 30, "set_segment_point": 30, "mppiconfig": 31, "predict": [31, 52], "sigma": [31, 36, 52], "temperatur": [31, 36], "simpl": [32, 47, 68], "conveni": 32, "iksolv": 34, "simplist": 34, "solver": 34, "posture_task": 34, "postur": 34, "configuration_limit": 34, "limit": [34, 66, 69], "frame_nam": 34, "frame_typ": 34, "site": 34, "quadprog": 34, "position_cost": 34, "orientation_cost": 34, "posture_cost": 34, "pos_threshold": 34, "ori_threshold": 34, "dt": [34, 66, 67, 69], "002": 34, "frame_tasks_damp": 34, "dataclass": [34, 69, 71], "set_target_pos": 34, "target_pos": 34, "frame": [34, 38, 54, 79], "q_ref": 34, "use_configuration_limit": 34, "logging_level": 34, "log": [34, 47, 70], "get_sensor_nam": 35, "sensorid": 35, "is_trace_sensor": 35, "count_trace_sensor": 35, "count": 35, "get_trace_sensor": 35, "set_mocap_pos": 35, "mocap_id": 35, "mocap": 35, "element": [35, 46, 54, 70, 71], "visualize_st": 35, "time_step": [35, 79], "display_tim": 35, "amount": 35, "visualize_trajectori": 35, "undergo": 35, "particlefilterconfig": 36, "particlefilt": 36, "get_package_path": 37, "sourc": 37, "benedict": [38, 40], "get_start_act": 38, "current_actuated_st": 38, "previous_end_act": 38, "depend": [38, 43], "action_start_mod": 38, "get_end_act": 38, "relative_act": [38, 42, 44], "action_typ": [38, 44], "actiontyp": [38, 39, 44, 47, 51], "absolut": 38, "rel": [38, 42, 44], "action_end_mod": 38, "get_action_trajectori": 38, "get_actuated_st": 38, "make": [38, 66], "callabl": [38, 44, 54, 71, 75], "On": 38, "descript": [38, 42], "spotfloatingactionprocessor": 38, "base_action_ix": 38, "arm_action_ix": 38, "polar": 38, "coordin": [38, 79, 80], "motion": [38, 51], "base_action_to_egocentr": 38, "robot": [38, 50, 54, 79], "world": 38, "egocentr": 38, "clip_base_act": 38, "base_act": 38, "spotwholebodyactionprocessor": 38, "arm_state_ix": 38, "processor": 38, "wholebodi": 38, "vx": 38, "vy": 38, "vtheta": 38, "power": 38, "separ": [38, 74], "while": 38, "parameter": 38, "actionsampl": [39, 44, 49], "intern": 39, "random_direct": 39, "proximity_direct": 39, "proxim": [39, 42, 51], "continuation_direct": 39, "edg": [39, 43], "goal_direct": 39, "formul": 39, "quadrat": 39, "directions_act": 39, "look": [39, 75], "k": [39, 46], "expand": 39, "combin": [39, 80], "project": [39, 46, 47, 80], "eigenspac": [39, 46, 48], "clip_act": 40, "box_scal": 40, "v_min": 40, "v_max": 40, "v_mid": 40, "down": 40, "belong": 40, "version": [40, 78], "v_bar": 40, "centerpoint": 40, "alpha": 40, "save_tensor": 41, "dest_path": 41, "gcp": 41, "bucket": 41, "load_tensor": 41, "src_path": 41, "learn": 41, "either": [41, 44, 67, 79], "local": 41, "find_latest_model_path": 41, "base_path": 41, "find": [41, 44], "directori": [41, 48], "sample_related_sub_goal_st": 42, "relat": 42, "sub": 42, "bound": [42, 57, 58, 59, 60], "num_parallel_search": 42, "state_dimens": 42, "new_goal_st": 42, "assum": [42, 44, 46, 80], "diagon": [42, 78], "covari": [42, 78], "reli": 42, "fact": 42, "entri": 42, "independ": [42, 46], "sample_feasible_st": 42, "bound_low": 42, "bound_upp": 42, "num_attempt": 42, "feasibl": 42, "within": [42, 46], "lower": [42, 78], "upper": 42, "attempt": 42, "feasible_st": 42, "possibl": 42, "ignore_sampled_state_collis": 42, "found": 42, "sample_random_st": 42, "sample_random_start_st": 42, "paramt": 42, "sample_random_goal_st": 42, "sample_random_sub_goal_st": 42, "node_id_to_search_index_map": 42, "search": [42, 43, 44, 47, 49], "root": [42, 49], "calculate_distance_reward": 42, "calculate_proximity_reward": 42, "calculate_reachability_reward": 42, "minimum_dist": 42, "reachabl": 42, "matric": [42, 46, 80], "delta": 42, "minimum": [42, 71], "add_total_reward": 42, "sum": [42, 61, 62, 64, 68], "check_for_early_termin": 42, "sensordata": [42, 50], "earli": 42, "reachability_cach": 42, "b": [42, 46], "reachability_matric": 42, "add_nod": 42, "root_id": 42, "parent_id": 42, "is_terminal_nod": 42, "is_main_nod": 42, "its": [42, 46, 50, 70, 71], "term": [42, 61, 62, 64, 68], "connect": 42, "determin": [42, 50], "main": [42, 54, 68, 70], "reset_sub_goal_st": 42, "change_sub_goal_st": 42, "sub_goal_st": 42, "deactivate_nod": 42, "deactiv": 42, "requir": 42, "activate_all_nod": 42, "activ": 42, "inact": 42, "sorted_progress_id": 42, "reward_bas": 42, "search_index": [42, 43, 47, 49], "non_termin": 42, "sort": 42, "get_best_id": 42, "search_indic": [42, 44], "is_worse_than": 42, "comparison_id": 42, "wors": 42, "than": 42, "comparison": 42, "is_better_than": 42, "better": 42, "number_of_nod": 42, "get_active_main_id": 42, "get_root_id": 42, "shortest_path_to": 42, "idx": 42, "start_id": [42, 49], "shortest": [42, 49], "filenam": [42, 78, 79], "file": [42, 48, 54, 56, 75, 78, 79], "add_child_ids_to_nod": 42, "child": [42, 54, 66], "destroi": 42, "gpu": 42, "memori": 42, "rgba_palett": 43, "transpar": [43, 78], "predefin": 43, "color_gradi": 43, "display_point_cloud": 43, "point_siz": 43, "displai": 43, "cloud": 43, "num_point": 43, "display_seg": 43, "display_colormap_point_cloud": 43, "is_termin": [43, 62, 66, 69], "colormap_point": 43, "num_color_bin": 43, "12": 43, "colormap": 43, "bin": 43, "display_segments_by_categori": 43, "categori": 43, "string": [43, 54, 74], "display_3d_graph": 43, "logger": [43, 44, 45, 49], "vis_scal": 43, "vis_indic": 43, "node_s": 43, "start_goal_s": 43, "06": 43, "edge_s": 43, "best_path_edge_s": 43, "segment_color": 43, "best_path_color": 43, "node_transpar": 43, "display_best_path": 43, "display_reward_colormap": 43, "reset_visu": 43, "vertex": 43, "In": 43, "pareto_distribut": 44, "expon": [44, 46], "pareto": [44, 46, 51], "graphwork": [44, 49], "callback_period": 44, "simulationpl": 44, "node_select": 44, "rank": 44, "Then": 44, "node_extens": 44, "num_action_step": 44, "sof": 44, "must": [44, 67, 71], "extens": [44, 47], "node_prun": 44, "paths_id": 44, "path_id": 44, "node_replac": 44, "best_indic": 44, "tri": 44, "replac": 44, "predecessor_nod": 44, "direct_nod": 44, "percentage_rang": 44, "stop": 44, "percentag": 44, "get_progress_info": 44, "print_percentag": 44, "progress": [44, 47], "callback_and_progress_check": 44, "change_go": 44, "booltensor": [44, 50], "singlegoalwork": 44, "singlego": 44, "parallelgoalswork": 44, "arg": [44, 75], "parallelgo": 44, "try_to_reallocate_work": 44, "worker_reset_mask": 44, "try": [44, 70], "realloc": 44, "worker": 44, "mask": 44, "update_extension_length": 44, "search_reset_mask": 44, "reset_finished_work": 44, "finish": 44, "update_pareto_paramet": 44, "new_node_id": 44, "commongoalworkerinterfac": 44, "commongoalwork": 44, "relatedgoalwork": 44, "explorerwork": 44, "explorework": 44, "rolloutwork": 44, "alwai": 44, "inspect_action_typ": 44, "100": [44, 60, 68], "inspect": 44, "tool": 44, "action_processor": 45, "clipping_method": 45, "data_collect": 45, "graph_visu": 45, "graph_work": [45, 49], "linear_algebra": 45, "planner_help": 45, "transformation_matrix": 46, "rot": 46, "4x4": [46, 80], "transform": [46, 78, 80], "rotat": [46, 80], "translat": [46, 80], "like": [46, 78], "3x3": [46, 80], "truncpareto_cdf": 46, "upper_bound": 46, "truncat": 46, "max_scal": 46, "action_rang": 46, "so": 46, "fit": 46, "num_direct": 46, "action_dim": 46, "typic": 46, "dimension": 46, "normalize_multipl": 46, "along": 46, "project_v_on_u": 46, "u": 46, "valueerror": 46, "gram_schmidt": 46, "basis_vector": 46, "orthonorm": 46, "basi": 46, "span": 46, "linearli": 46, "aren": 46, "you": 46, "bad": 46, "column": 46, "project_vectors_on_eigenspac": 46, "orthonormal_basi": 46, "einsum_ij_ij_i": 46, "transpos": [46, 80], "pair": 46, "multipli": 46, "j": 46, "scalar": 46, "einsum_ij_kj_ki": 46, "einsum_ijk_ik_ij": 46, "einsum_ikj_ik_ij": 46, "einsum_jk_ikl_ijl": 46, "l": [46, 80], "einsum_ijk_ikl_ijl": 46, "einsum_ikj_ikl_ijl": 46, "einsum_ijk_ilk_ijl": 46, "log_path": 47, "workspac": 47, "bdai": 47, "log_fil": 47, "get_log_nam": 47, "log_param": 47, "log_search": 47, "iteration_numb": 47, "log_node_select": 47, "strategi": 47, "selectiontyp": [47, 51], "log_action_sampl": 47, "log_node_extens": 47, "best_id": 47, "dynamics_tim": 47, "log_node_prun": 47, "num_removed_nod": 47, "create_distance_log": 47, "create_reward_log": 47, "simple_progress_statist": 47, "statist": [47, 75], "simple_path_statist": 47, "selection_strategi": 47, "action_strategi": 47, "yaml_path": 48, "base_yaml_path": 48, "yml": 48, "model_fold": 48, "folder": 48, "examples_directori": 48, "exampl": [48, 78, 79, 80], "xml_folder": 48, "xml": [48, 54, 56, 61, 62, 64, 68], "data_fold": 48, "cache_fold": 48, "state_cache_fold": 48, "graph_cache_fold": 48, "trajectory_cache_fold": 48, "policy_filepath": [48, 67], "filepath": 48, "devic": [48, 51], "__str__": [48, 51], "__getattr__": [48, 54], "__setattr__": [48, 54], "__name": 48, "__valu": 48, "setattr": 48, "__delattr__": 48, "delattr": 48, "__contains__": 48, "load_bas": 48, "yaml": 48, "autofil": 48, "run_autofill_rul": 48, "rule_kei": 48, "rule": 48, "list_of_yaml_arrays_to_tensor": 48, "concat_list_of_arrai": 48, "keypath": 48, "concat": 48, "process_sc": 48, "load_eigenspac": 48, "reset_se": 48, "set_se": 48, "reward_distance_scaling_sqrt": 48, "sqrt": [48, 78], "parse_hardware_paramet": 48, "file_path": 48, "pars": [48, 79], "hardwar": [48, 70], "through": [49, 71], "path_data": 49, "end_id": 49, "shortest_path_data": 49, "closest": 49, "path_trajectori": 49, "shortest_path_trajectori": 49, "plot_search_result": 49, "plot": 49, "is_object_tilt": 50, "tilt_toler": 50, "pi": 50, "y_axis_index": 50, "24": 50, "tilt": 50, "beyond": 50, "toler": 50, "y": [50, 78, 80], "compar": 50, "consid": 50, "frameyaxi": 50, "radian": 50, "\u03c0": 50, "degre": 50, "is_object_out_of_reach": 50, "reach_toler": 50, "dist_index": 50, "21": 50, "out": [50, 70], "framepo": 50, "meter": 50, "torso_too_close_to_object": 50, "torso_contact_index": 50, "torso": 50, "clippingtyp": 51, "enum": 51, "interest": 51, "expert": 51, "exploit": 51, "knowledg": 51, "non_expert": 51, "action_type_directional_map": 51, "actionmod": 51, "relative_to_current_st": 51, "relative_to_previous_end_act": 51, "absolute_act": 51, "zero_order_hold": 51, "first_order_hold": 51, "set_default_device_and_dtyp": 51, "dtype": [51, 71], "float32": 51, "convert_dtyp": 51, "attr": 51, "int_dtyp": 51, "int64": 51, "cast": 51, "integ": [51, 78], "predictivesamplingconfig": 52, "predictivesampl": 52, "scene_compos": 53, "scene_gener": 53, "scene_registri": 53, "spot_sensor": 53, "overrid": [54, 66, 74], "mjbodywrapp": 54, "simplifi": 54, "access": [54, 71], "mjsbodi": 54, "child_bodi": 54, "deleg": 54, "wrap": 54, "except": [54, 70], "modelel": 54, "includ": [54, 78], "manag": [54, 71, 73], "xml_content": 54, "worldbodi": 54, "header_includ": 54, "from_fil": 54, "xml_path": 54, "from_str": 54, "static": [54, 79], "autoload": 54, "decor": [54, 71], "spec": 54, "befor": 54, "to_xml_str": 54, "mjspec": 54, "to_xml_fil": 54, "spotrobot": 54, "compon": 54, "xml_dir": [54, 56], "compos": 54, "contact": 54, "make_default_header_includ": 54, "asset_dir": [54, 56], "components_dir": 56, "output_dir": 56, "sceneregistri": 56, "registri": 56, "scene_kwarg": 56, "regist": 56, "generate_al": 56, "reset_object_pos": [57, 60], "z_axi": [57, 60], "spotboxconfig": 57, "spot_bas": [57, 58, 59, 60, 65], "spotbaseconfig": [57, 58, 59, 60, 67], "default_command": [57, 58, 59, 60, 61, 62, 64, 67, 68], "goal_posit": [57, 58, 59, 60, 67], "w_orient": 57, "w_torso_proxim": [57, 60], "w_gripper_proxim": [57, 60], "orientation_threshold": 57, "spotbox": 57, "spotbas": [57, 58, 59, 60, 67], "actuator_ctrlrang": [57, 58, 59, 60, 66, 69], "spothandnavigationconfig": 58, "spothandnavig": 58, "navig": [58, 59], "spotnavigationconfig": 59, "spotnavig": 59, "tire_height": 60, "515": 60, "tire_go": 60, "spottireconfig": 60, "goal_tire_po": 60, "fall_penalti": [60, 67], "5000": 60, "tire_fallen_threshold": 60, "torso_goal_offset": 60, "gripper_goal_offset": 60, "15": [60, 61, 62, 64], "gripper_goal_altitud": 60, "w_tire_linear_veloc": 60, "w_tire_angular_veloc": 60, "w_leg_proxim": 60, "spottir": 60, "model_path": [61, 62, 64, 66, 68], "legaci": [61, 62, 64, 68], "acrobotconfig": 61, "w_vertic": [61, 62], "w_veloc": [61, 62], "w_control": [61, 62], "p_vertic": [61, 62], "cutoff_tim": [61, 62, 64, 67], "mujoco_task": [61, 62, 64, 65, 67, 68], "mujocotask": [61, 62, 64, 66, 67, 68], "balanc": [61, 62, 64], "mjpc": [61, 62, 64], "four": [61, 62, 64, 68], "vertical_rew": [61, 62], "penal": [61, 62, 64, 68], "pole": [61, 62], "velocity_rew": [61, 62], "squar": [61, 62, 64], "angular": [61, 62], "control_rew": [61, 62], "penalti": [61, 62, 64], "neg": [61, 62, 64], "max": [61, 62, 64, 71], "cartpoleconfig": 62, "w_center": 62, "p_center": 62, "centered_rew": 62, "cart": [62, 64], "batch_siz": 62, "traj": 62, "small": 62, "enough": 62, "smooth_l1_norm": 63, "p": 63, "quadratic_norm": 63, "cylinderpushconfig": 64, "w_pusher_proxim": 64, "w_pusher_veloc": 64, "w_cart_posit": 64, "pusher_goal_offset": 64, "cart_goal_posit": 64, "cylinderpush": 64, "pusher_reward": 64, "pusher": 64, "velocity_reward": 64, "goal_reward": 64, "acrobot": 65, "cartpol": [65, 70], "cost_funct": 65, "cylinder_push": 65, "spot_position_control": 65, "get_registered_task": 65, "register_task": 65, "task_typ": 65, "task_config_typ": 65, "configt": [66, 67, 69], "additional_task_info": [66, 69], "might": [66, 69], "default_idle_command": [66, 67], "idl": [66, 67], "create_visu": [66, 69], "server": [66, 69, 70, 71, 76], "context": [66, 69, 70, 76], "viser_app": [66, 69, 76], "iocontext": [66, 69, 70, 73, 76], "text_handl": [66, 69], "sim_step": [66, 67, 69], "thread": [66, 67, 69, 70, 71], "num_model": [66, 67, 69], "behavior": [66, 69], "default_spot_rollout_cutoff_tim": 67, "2500": 67, "spot_fallen_threshold": 67, "35": 67, "w_goal": 67, "60": [67, 76], "w_proxim": 67, "w_vel": 67, "model_filepath": [67, 79], "instanti": 67, "effect": 67, "physics_substep": 67, "mujoco_extens": 67, "rl": 67, "alloc": 67, "spotpositioncontrolconfig": 68, "w_stand": 68, "w_forward": 68, "w_leg": 68, "w_arm": 68, "spotpositioncontrol": 68, "position_rew": 68, "orientation_rew": 68, "leg_rew": 68, "arm_rew": 68, "slightli": 68, "modelt": 69, "mpc": 69, "lower_lim": 69, "upper_lim": 69, "jacta_manipulation_path": 70, "simulationprocess": 70, "simulationiocontext": [70, 73], "multiprocess": [70, 71, 73], "simulation_loop": 70, "write_st": 70, "sim": 70, "controlprocess": 70, "viserprofil": [70, 75], "fix": 70, "flow": 70, "controllerprocess": 70, "encount": 70, "queue": 70, "gui": [70, 72, 76], "clean": 70, "control_loop": 70, "outer": 70, "frequenc": 70, "set_profiler_record": 70, "record": [70, 75, 79], "turn": 70, "off": 70, "inner": 70, "write_control": 70, "write_trac": 70, "viserapp": 70, "init_control": 70, "predictive_sampl": 70, "init_task": 70, "benchmark_dir": 70, "flip_profile_button_label": 70, "flip": 70, "button": 70, "label": 70, "disabl": 70, "setup_task": 70, "spawn": 70, "setup_visu": [70, 78], "stack": 70, "setup_context": 70, "overwritten": 70, "deploy": 70, "setup_phys": 70, "setup_control": 70, "control_config": 70, "task_config": 70, "control_cycle_callback": 70, "_": 70, "guievent": 70, "logic": 70, "via": [70, 71], "simulation_cycle_callback": 70, "simulation_reset_callback": 70, "control_selection_callback": 70, "event": [70, 71], "doe": 70, "vi": 70, "task_selection_callback": 70, "enable_profiling_callback": 70, "config_download_callback": 70, "download": 70, "default_slider_step_float": 71, "default_slider_step_int": 71, "goal_radiu": 71, "slider": 71, "parameter_nam": 71, "min": 71, "metadata": 71, "annot": 71, "match": 71, "other": 71, "variabl": 71, "constant": 71, "create_gui_el": 71, "config_dict": 71, "dictproxi": 71, "config_updated_ev": 71, "synchron": 71, "config_lock": 71, "lock": 71, "guiinputhandl": 71, "recurs": 71, "want": 71, "share": 71, "flag": 71, "prevent": 71, "guihandl": 71, "destruct": 71, "app": [72, 73], "json_seri": 72, "syncmanag": 73, "o": 73, "hardwareiocontext": 73, "configencod": 74, "skipkei": 74, "ensure_ascii": 74, "check_circular": 74, "allow_nan": 74, "sort_kei": 74, "indent": 74, "json": 74, "jsonencod": 74, "custom": 74, "encod": 74, "obj": [74, 78], "decode_config": 74, "decod": 74, "viserprofilerconfig": 75, "track": 75, "tracked_field": 75, "logfil": 75, "speed": 75, "benchmark_funct": 75, "input_funct": 75, "benchmark": 75, "benchmark_wrapp": 75, "visualization_freq": 76, "mjvisual": 76, "update_visu": 76, "fk": 76, "meshcat_visu": 77, "mujoco_visu": 77, "quaternion_oper": 77, "rgb_int_to_hex": 78, "hexadecim": 78, "rgb_float_to_hex": 78, "rgba_overwrit": 78, "model_rgba": 78, "user_rgba": 78, "meshphysicalmateri": 78, "16777215": 78, "reflect": 78, "side": 78, "opac": [78, 79], "linewidth": 78, "wirefram": 78, "wireframelinewidth": 78, "vertexcolor": 78, "genericmateri": 78, "high": 78, "meshtoonmateri": 78, "poster": 78, "setpropertycapit": 78, "capit": 78, "letter": 78, "bypass": 78, "bug": 78, "__slots__": 78, "set_property_capit": 78, "close_window": 78, "widthseg": 78, "heightseg": 78, "releas": 78, "pypi": 78, "object_data": 78, "set_color": 78, "axes_vis": 78, "grid_vis": 78, "zoom": 78, "camera_po": 78, "top_color": 78, "bottom_color": 78, "negative_shadow": 78, "positive_shadow": 78, "camera": 78, "background": 78, "shadow": 78, "add_object": 78, "add_ground": 78, "ground": 78, "confidence_interval_mod": 78, "orthogon": [78, 80], "eigenvector": 78, "sqrt_d": 78, "eigenvalu": 78, "diag": 78, "With": 78, "add_mesh_by_nam": 78, "set_object": 78, "default_color": 79, "typealia": 79, "mujocorender": 79, "collision_geometry_opac": 79, "mujocomeshcatrender": 79, "anim": 79, "state_trajectori": 79, "show_goal": 79, "OR": 79, "framer": 79, "trajectory_nam": 79, "force_reload": 79, "trajectorynam": 79, "alreadi": 79, "set_model": 79, "joint_posit": 79, "delet": 79, "initialize_mark": 79, "marker_info": 79, "marker": 79, "update_mark": 79, "marker_pos": 79, "add_mark": 79, "set_mark": 79, "animate_mark": 79, "frame_index": 79, "init_point": 79, "n_point": 79, "update_point": 79, "initialize_candidate_trajectori": 79, "n_candid": 79, "n_eval": 79, "candid": 79, "update_candidate_trajectori": 79, "init_ee_posit": 79, "update_ee_posit": 79, "show_trajectori": 79, "goal_nam": 79, "show": 79, "extract_joint_posit": 79, "show_box_go": 79, "alongsid": 79, "num_fram": 79, "wait_for_input": 79, "messag": 79, "press": 79, "enter": 79, "wait": 79, "get_html": 79, "represent": 79, "meshcat_record": 79, "quaternion_invers": 80, "w": 80, "quaternion_to_transformation_matrix": 80, "pose_to_transformation_matrix": 80, "skew_symmetr": 80, "r": 80, "skew": 80, "symmetr": 80, "nx3": 80, "nx3x3": 80, "array_lik": 80, "qo": 80, "left_act": 80, "left": 80, "oper": 80, "q_2": 80, "q_1": 80, "nx4": 80, "nx4x4": 80, "q1": 80, "q2": 80, "dot": 80, "right_act": 80, "right": 80, "action_invers": 80, "effici": 80, "vector_project": 80, "imaginari": 80, "project_act": 80, "onto": 80, "rotation_matrix": 80, "quaternion_to_quaternion_map_jacobian": 80, "argument_quaternion": 80, "map_jacobian": 80, "result_quaternion": 80, "jacobian": 80, "tangent": 80, "canon": 80, "df": 80, "dq": 80}, "objects": {"": [[1, 0, 0, "-", "benchmarking"], [3, 0, 0, "-", "cmaes"], [4, 0, 0, "-", "constants"], [6, 0, 0, "-", "controllers"], [8, 0, 0, "-", "cross_entropy_method"], [10, 0, 0, "-", "dynamics"], [16, 0, 0, "-", "environments"], [20, 0, 0, "-", "experts"], [25, 0, 0, "-", "learning"], [30, 0, 0, "-", "model"], [31, 0, 0, "-", "mppi"], [33, 0, 0, "-", "mujoco_dynamics"], [36, 0, 0, "-", "particle_filter"], [37, 0, 0, "-", "path_resolvers"], [45, 0, 0, "-", "planner"], [52, 0, 0, "-", "predictive_sampling"], [53, 0, 0, "-", "scenes"], [57, 0, 0, "-", "spot_box"], [58, 0, 0, "-", "spot_hand_navigation"], [59, 0, 0, "-", "spot_navigation"], [60, 0, 0, "-", "spot_tire"], [65, 0, 0, "-", "tasks"], [72, 0, 0, "-", "viser_app"], [76, 0, 0, "-", "visualization"], [77, 0, 0, "-", "visuals"]], "benchmarking": [[0, 0, 0, "-", "benchmarking"], [2, 0, 0, "-", "profiling"]], "benchmarking.benchmarking": [[0, 1, 1, "", "Benchmark"]], "benchmarking.benchmarking.Benchmark": [[0, 2, 1, "", "print_results"], [0, 2, 1, "", "visualize_results"]], "benchmarking.profiling": [[2, 3, 1, "", "run_example"]], "cmaes": [[3, 1, 1, "", "CMAES"], [3, 1, 1, "", "CMAESConfig"]], "cmaes.CMAES": [[3, 2, 1, "", "action"], [3, 2, 1, "", "update_action"]], "cmaes.CMAESConfig": [[3, 4, 1, "", "max_iter"]], "constants": [[4, 5, 1, "", "ARM_JOINT_NAMES"], [4, 5, 1, "", "ARM_LINK_NAMES"], [4, 5, 1, "", "ARM_STOWED_POS"], [4, 5, 1, "", "ARM_UNSTOWED_POS"], [4, 5, 1, "", "LEGS_SITTING_POS"], [4, 5, 1, "", "LEGS_STANDING_POS"], [4, 5, 1, "", "LEG_JOINT_NAMES"], [4, 5, 1, "", "LEG_LINK_NAMES"], [4, 5, 1, "", "SITTING_STOWED_POS"], [4, 5, 1, "", "SITTING_UNSTOWED_POS"], [4, 5, 1, "", "SPOT_ANGS_VEL_SLICE"], [4, 5, 1, "", "SPOT_ARMS_SLICE"], [4, 5, 1, "", "SPOT_ARMS_VEL_SLICE"], [4, 5, 1, "", "SPOT_BODY_SLICE"], [4, 5, 1, "", "SPOT_BODY_VEL_SLICE"], [4, 5, 1, "", "SPOT_LEGS_SLICE"], [4, 5, 1, "", "SPOT_LEGS_VEL_SLICE"], [4, 5, 1, "", "SPOT_QUAT_SLICE"], [4, 1, 1, "", "SPOT_STATE_INDS"], [4, 5, 1, "", "STANDING_HEIGHT"], [4, 5, 1, "", "STANDING_STOWED_POS"], [4, 5, 1, "", "STANDING_UNSTOWED_POS"]], "constants.SPOT_STATE_INDS": [[4, 4, 1, "", "angs_vel_slice"], [4, 4, 1, "", "arms_slice"], [4, 4, 1, "", "arms_vel_slice"], [4, 4, 1, "", "body_vel_slice"], [4, 4, 1, "", "legs_slice"], [4, 4, 1, "", "legs_vel_slice"], [4, 4, 1, "", "quat_slice"]], "controllers": [[5, 0, 0, "-", "controller"], [6, 3, 1, "", "get_registered_controllers"], [6, 3, 1, "", "register_controller"], [7, 0, 0, "-", "sampling_base"]], "controllers.controller": [[5, 1, 1, "", "Controller"], [5, 1, 1, "", "ControllerConfig"]], "controllers.controller.Controller": [[5, 2, 1, "", "action"], [5, 6, 1, "", "controls"], [5, 2, 1, "", "make_models"], [5, 2, 1, "", "reset"], [5, 6, 1, "", "rollout_times"], [5, 2, 1, "", "set_default_controls"], [5, 2, 1, "", "update_action"]], "controllers.sampling_base": [[7, 5, 1, "", "MAX_NUM_TRACES"], [7, 1, 1, "", "SamplingBase"], [7, 1, 1, "", "SamplingBaseConfig"], [7, 3, 1, "", "make_spline"]], "controllers.sampling_base.SamplingBase": [[7, 2, 1, "", "action"], [7, 6, 1, "", "controls"], [7, 2, 1, "", "make_models"], [7, 2, 1, "", "reset"], [7, 6, 1, "", "rollout_times"], [7, 2, 1, "", "set_default_controls"], [7, 6, 1, "", "spline"], [7, 6, 1, "", "spline_timesteps"], [7, 2, 1, "", "update_action"], [7, 2, 1, "", "update_spline"], [7, 2, 1, "", "update_traces"]], "controllers.sampling_base.SamplingBaseConfig": [[7, 4, 1, "", "control_freq"], [7, 4, 1, "", "num_nodes"], [7, 4, 1, "", "num_rollouts"], [7, 4, 1, "", "spline_order"], [7, 4, 1, "", "use_noise_ramp"]], "cross_entropy_method": [[8, 1, 1, "", "CrossEntropyConfig"], [8, 1, 1, "", "CrossEntropyMethod"]], "cross_entropy_method.CrossEntropyConfig": [[8, 4, 1, "", "horizon"], [8, 4, 1, "", "noise_ramp"], [8, 4, 1, "", "num_elites"], [8, 4, 1, "", "num_rollouts"], [8, 4, 1, "", "sigma_max"]], "cross_entropy_method.CrossEntropyMethod": [[8, 2, 1, "", "action"], [8, 2, 1, "", "update_action"]], "dynamics": [[9, 0, 0, "-", "action_trajectory"], [11, 0, 0, "-", "locomotion_plant"], [12, 0, 0, "-", "mujoco_dynamics"], [13, 0, 0, "-", "mujoco_utils"], [14, 0, 0, "-", "state_helpers"]], "dynamics.action_trajectory": [[9, 3, 1, "", "create_action_trajectories"], [9, 3, 1, "", "create_action_trajectory"]], "dynamics.locomotion_plant": [[11, 1, 1, "", "LocomotionPlant"], [11, 3, 1, "", "isaac_to_mujoco"], [11, 5, 1, "", "isaac_to_mujoco_ixs"], [11, 3, 1, "", "mujoco_to_isaac"], [11, 5, 1, "", "mujoco_to_isaac_ixs"]], "dynamics.locomotion_plant.LocomotionPlant": [[11, 2, 1, "", "dynamics"], [11, 2, 1, "", "get_sensor"], [11, 2, 1, "", "load_policy"], [11, 2, 1, "", "process_observations"], [11, 2, 1, "", "process_output"], [11, 2, 1, "", "run_policy"]], "dynamics.mujoco_dynamics": [[12, 1, 1, "", "MujocoPlant"], [12, 3, 1, "", "decompose_state_dimensions"], [12, 3, 1, "", "get_joint_dimensions"], [12, 3, 1, "", "scale_distances"]], "dynamics.mujoco_dynamics.MujocoPlant": [[12, 2, 1, "", "dynamics"], [12, 2, 1, "", "get_action"], [12, 2, 1, "", "get_collision_free"], [12, 2, 1, "", "get_gradients"], [12, 2, 1, "", "get_mass"], [12, 2, 1, "", "get_quat_indices"], [12, 2, 1, "", "get_sensor"], [12, 2, 1, "", "get_state"], [12, 2, 1, "", "initialize"], [12, 2, 1, "", "normalize_state"], [12, 2, 1, "", "scaled_distances_to"], [12, 2, 1, "", "set_action"], [12, 2, 1, "", "set_state"], [12, 2, 1, "", "state_addition"], [12, 2, 1, "", "state_difference"], [12, 2, 1, "", "update_sensor"]], "dynamics.mujoco_utils": [[13, 3, 1, "", "get_body_name"], [13, 3, 1, "", "get_geom_name"], [13, 3, 1, "", "get_geometry_rgba"], [13, 3, 1, "", "get_mesh_data"]], "dynamics.state_helpers": [[14, 1, 1, "", "CommandArray"], [14, 1, 1, "", "SensorArray"], [14, 1, 1, "", "StateArray"], [14, 3, 1, "", "slice_union"]], "dynamics.state_helpers.CommandArray": [[14, 4, 1, "", "arm"], [14, 2, 1, "", "as_dict"], [14, 4, 1, "", "base_height"], [14, 4, 1, "", "base_pitch"], [14, 4, 1, "", "base_roll"], [14, 2, 1, "", "create"], [14, 4, 1, "", "fl_leg"], [14, 4, 1, "", "fr_leg"], [14, 4, 1, "", "hl_leg"], [14, 4, 1, "", "hr_leg"], [14, 4, 1, "", "lateral_vel"], [14, 4, 1, "", "legs"], [14, 4, 1, "", "non_velocities"], [14, 2, 1, "", "set_defaults"], [14, 4, 1, "", "size"], [14, 2, 1, "", "update"], [14, 4, 1, "", "velocities"], [14, 4, 1, "", "yaw_vel"]], "dynamics.state_helpers.SensorArray": [[14, 4, 1, "", "fngr_object"], [14, 4, 1, "", "object_y_axis"], [14, 4, 1, "", "trace_body"], [14, 4, 1, "", "trace_gripper"]], "dynamics.state_helpers.StateArray": [[14, 4, 1, "", "arm"], [14, 4, 1, "", "arm_vel"], [14, 4, 1, "", "base_ang_vel"], [14, 4, 1, "", "base_lin_vel"], [14, 4, 1, "", "base_quat"], [14, 4, 1, "", "fl_leg"], [14, 4, 1, "", "fl_leg_vel"], [14, 4, 1, "", "fr_leg"], [14, 4, 1, "", "fr_leg_vel"], [14, 4, 1, "", "hl_leg"], [14, 4, 1, "", "hl_leg_vel"], [14, 4, 1, "", "hr_leg"], [14, 4, 1, "", "hr_leg_vel"], [14, 4, 1, "", "legs"], [14, 4, 1, "", "legs_vel"], [14, 4, 1, "", "object_ang_vel"], [14, 4, 1, "", "object_lin_vel"], [14, 4, 1, "", "object_pos"], [14, 4, 1, "", "object_quat"], [14, 4, 1, "", "size"]], "environments": [[15, 0, 0, "-", "base"], [17, 0, 0, "-", "tire_state_cache_generator"]], "environments.base": [[15, 1, 1, "", "DexterityEnv"]], "environments.base.DexterityEnv": [[15, 2, 1, "", "__post_init__"], [15, 6, 1, "", "action_space"], [15, 2, 1, "", "check_failure"], [15, 2, 1, "", "check_success"], [15, 2, 1, "", "close"], [15, 2, 1, "", "get_metrics"], [15, 6, 1, "", "metrics_keys"], [15, 4, 1, "", "params"], [15, 2, 1, "", "post_physics_step"], [15, 2, 1, "", "preserve_reset_obs"], [15, 2, 1, "", "process_resets"], [15, 2, 1, "", "reset"], [15, 2, 1, "", "reset_ixs"], [15, 2, 1, "", "reset_states"], [15, 2, 1, "", "scale_actions"], [15, 2, 1, "", "set_current_states"], [15, 2, 1, "", "set_goal_states"], [15, 2, 1, "", "set_previous_end_actions"], [15, 2, 1, "", "set_start_states"], [15, 2, 1, "", "setup_action_processor"], [15, 2, 1, "", "setup_buffers"], [15, 2, 1, "", "setup_plant"], [15, 2, 1, "", "step"], [15, 2, 1, "", "step_sim"], [15, 2, 1, "", "task_rewards"], [15, 2, 1, "", "uniform_random_action"], [15, 2, 1, "", "update_info"], [15, 2, 1, "", "update_joint_targets"], [15, 2, 1, "", "update_obs"], [15, 2, 1, "", "update_rewards"], [15, 2, 1, "", "update_terminations"]], "environments.tire_state_cache_generator": [[17, 1, 1, "", "SpotArmIK"], [17, 1, 1, "", "TireGeneratorConfig"], [17, 1, 1, "", "TireStateCacheGenerator"]], "environments.tire_state_cache_generator.SpotArmIK": [[17, 2, 1, "", "__post_init__"], [17, 4, 1, "", "actuated_pos"], [17, 4, 1, "", "damping"], [17, 4, 1, "", "enable_orientation_control"], [17, 4, 1, "", "integration_dt"], [17, 4, 1, "", "max_iterations"], [17, 4, 1, "", "max_no_progress_steps"], [17, 4, 1, "", "orientation_tolerance"], [17, 4, 1, "", "params"], [17, 4, 1, "", "position_tolerance"], [17, 4, 1, "", "progress_threshold"], [17, 2, 1, "", "solve"]], "environments.tire_state_cache_generator.TireGeneratorConfig": [[17, 4, 1, "", "angular_velocity_range"], [17, 4, 1, "", "cache_size"], [17, 4, 1, "", "distance_range"], [17, 4, 1, "", "enable_rendering"], [17, 4, 1, "", "linear_velocity_range"], [17, 4, 1, "", "object_z"], [17, 4, 1, "", "radius_range"], [17, 4, 1, "", "randomize_velocity"]], "environments.tire_state_cache_generator.TireStateCacheGenerator": [[17, 2, 1, "", "__post_init__"], [17, 4, 1, "", "config"], [17, 6, 1, "", "default_base_pose"], [17, 6, 1, "", "default_velocities"], [17, 2, 1, "", "generate_cache"], [17, 2, 1, "", "set_floating_spot_cache"], [17, 4, 1, "", "task_name"]], "experts": [[18, 0, 0, "-", "expert"], [19, 0, 0, "-", "expert_sampler"], [21, 0, 0, "-", "network"], [22, 0, 0, "-", "primitive"], [23, 0, 0, "-", "primitives"]], "experts.expert": [[18, 1, 1, "", "Expert"]], "experts.expert_sampler": [[19, 1, 1, "", "ExpertSampler"]], "experts.network": [[21, 1, 1, "", "NetworkSampler"]], "experts.primitive": [[22, 1, 1, "", "PrimitiveSampler"]], "experts.primitive.PrimitiveSampler": [[22, 2, 1, "", "compute_low_level_actions"], [22, 2, 1, "", "reset"]], "experts.primitives": [[24, 0, 0, "-", "spot_standing_box"]], "experts.primitives.spot_standing_box": [[24, 3, 1, "", "compute_grasp_actions"], [24, 3, 1, "", "compute_grasp_pose_for_handle_top"], [24, 3, 1, "", "spot_ik_mujoco"]], "learning": [[26, 0, 0, "-", "learner"], [27, 0, 0, "-", "networks"], [28, 0, 0, "-", "normalizer"], [29, 0, 0, "-", "replay_buffer"]], "learning.learner": [[26, 1, 1, "", "Learner"]], "learning.learner.Learner": [[26, 2, 1, "", "__post_init__"], [26, 2, 1, "", "actor_actions"], [26, 2, 1, "", "eval_agent"], [26, 4, 1, "", "graph"], [26, 2, 1, "", "graph_rollout"], [26, 4, 1, "", "load_cloud"], [26, 4, 1, "", "load_local"], [26, 2, 1, "", "load_models"], [26, 4, 1, "", "params"], [26, 2, 1, "", "policy_rollout"], [26, 2, 1, "", "preprocess_sample"], [26, 2, 1, "", "relative_distances_to"], [26, 4, 1, "", "replay_buffer"], [26, 2, 1, "", "reset"], [26, 2, 1, "", "reward_function"], [26, 4, 1, "", "save_cloud"], [26, 4, 1, "", "save_local"], [26, 2, 1, "", "save_models"], [26, 2, 1, "", "set_demonstration_injection"], [26, 2, 1, "", "train"], [26, 2, 1, "", "train_actor_critic"], [26, 2, 1, "", "update_norm"], [26, 4, 1, "", "verbose"]], "learning.networks": [[27, 1, 1, "", "Actor"], [27, 1, 1, "", "Critic"], [27, 1, 1, "", "CriticNetwork"], [27, 1, 1, "", "DDP"], [27, 3, 1, "", "soft_update"]], "learning.networks.Actor": [[27, 2, 1, "", "__call__"], [27, 2, 1, "", "backward_step"], [27, 2, 1, "", "eval"], [27, 2, 1, "", "load"], [27, 2, 1, "", "save"], [27, 2, 1, "", "target"], [27, 2, 1, "", "train"], [27, 2, 1, "", "update_target"]], "learning.networks.Critic": [[27, 2, 1, "", "backward_step"], [27, 2, 1, "", "load"], [27, 2, 1, "", "save"], [27, 2, 1, "", "target"], [27, 2, 1, "", "update_target"]], "learning.normalizer": [[28, 1, 1, "", "Normalizer"]], "learning.normalizer.Normalizer": [[28, 2, 1, "", "load"], [28, 2, 1, "", "normalize"], [28, 2, 1, "", "normalize_obs"], [28, 2, 1, "", "save"], [28, 2, 1, "", "update"]], "learning.replay_buffer": [[29, 1, 1, "", "ReplayBuffer"], [29, 1, 1, "", "TrajectoryReplayBuffer"]], "learning.replay_buffer.ReplayBuffer": [[29, 2, 1, "", "__getitem__"], [29, 2, 1, "", "__post_init__"], [29, 2, 1, "", "extend"], [29, 2, 1, "", "reset"], [29, 2, 1, "", "sample"], [29, 4, 1, "", "sampler_class"], [29, 2, 1, "", "setup_buffer"], [29, 2, 1, "", "setup_sampler"], [29, 2, 1, "", "setup_storage"], [29, 4, 1, "", "storage_class"]], "learning.replay_buffer.TrajectoryReplayBuffer": [[29, 2, 1, "", "sample"], [29, 2, 1, "", "setup_buffer"]], "model": [[30, 5, 1, "", "DEFAULT_BEST_SPLINE_COLOR"], [30, 5, 1, "", "DEFAULT_GRID_CELL_COLOR"], [30, 5, 1, "", "DEFAULT_GRID_SECTION_COLOR"], [30, 5, 1, "", "DEFAULT_SPHERE_SUBDIVISIONS"], [30, 5, 1, "", "DEFAULT_SPLINE_COLOR"], [30, 1, 1, "", "ViserMjModel"], [30, 3, 1, "", "add_box"], [30, 3, 1, "", "add_capsule"], [30, 3, 1, "", "add_cylinder"], [30, 3, 1, "", "add_ellipsoid"], [30, 3, 1, "", "add_mesh"], [30, 3, 1, "", "add_plane"], [30, 3, 1, "", "add_segments"], [30, 3, 1, "", "add_sphere"], [30, 3, 1, "", "add_spline"], [30, 3, 1, "", "rgba_float_to_int"], [30, 3, 1, "", "rgba_int_to_float"], [30, 3, 1, "", "set_mesh_color"], [30, 3, 1, "", "set_segment_points"], [30, 3, 1, "", "set_spline_positions"]], "model.ViserMjModel": [[30, 2, 1, "", "add_geom"], [30, 2, 1, "", "add_traces"], [30, 2, 1, "", "remove"], [30, 2, 1, "", "remove_traces"], [30, 2, 1, "", "set_data"], [30, 2, 1, "", "set_traces"]], "mppi": [[31, 1, 1, "", "MPPI"], [31, 1, 1, "", "MPPIConfig"]], "mppi.MPPI": [[31, 2, 1, "", "action"], [31, 2, 1, "", "update_action"]], "mppi.MPPIConfig": [[31, 4, 1, "", "temperature"]], "mujoco_dynamics": [[32, 0, 0, "-", "dynamics"], [34, 0, 0, "-", "kinematics"], [35, 0, 0, "-", "utils"]], "mujoco_dynamics.dynamics": [[32, 1, 1, "", "MujocoPlant"]], "mujoco_dynamics.kinematics": [[34, 1, 1, "", "IkSolver"]], "mujoco_dynamics.kinematics.IkSolver": [[34, 2, 1, "", "__post_init__"], [34, 6, 1, "", "configuration"], [34, 6, 1, "", "configuration_limit"], [34, 4, 1, "", "damping"], [34, 4, 1, "", "dt"], [34, 4, 1, "", "frame_names"], [34, 4, 1, "", "frame_tasks_damping"], [34, 4, 1, "", "frame_type"], [34, 4, 1, "", "max_iters"], [34, 4, 1, "", "model"], [34, 4, 1, "", "ori_threshold"], [34, 4, 1, "", "orientation_cost"], [34, 4, 1, "", "pos_threshold"], [34, 4, 1, "", "position_cost"], [34, 4, 1, "", "posture_cost"], [34, 2, 1, "", "set_target_pose"], [34, 2, 1, "", "solve"], [34, 4, 1, "", "solver"]], "mujoco_dynamics.utils": [[35, 3, 1, "", "count_trace_sensors"], [35, 3, 1, "", "get_mesh_data"], [35, 3, 1, "", "get_sensor_name"], [35, 3, 1, "", "get_trace_sensors"], [35, 3, 1, "", "is_trace_sensor"], [35, 3, 1, "", "set_mocap_pose"], [35, 3, 1, "", "set_mocap_poses"], [35, 3, 1, "", "set_state"], [35, 3, 1, "", "visualize_state"], [35, 3, 1, "", "visualize_trajectory"]], "particle_filter": [[36, 1, 1, "", "ParticleFilter"], [36, 1, 1, "", "ParticleFilterConfig"]], "particle_filter.ParticleFilter": [[36, 2, 1, "", "action"], [36, 2, 1, "", "update_action"]], "particle_filter.ParticleFilterConfig": [[36, 4, 1, "", "temperature"]], "path_resolvers": [[37, 3, 1, "", "get_package_path"]], "planner": [[38, 0, 0, "-", "action_processor"], [39, 0, 0, "-", "action_sampler"], [40, 0, 0, "-", "clipping_method"], [41, 0, 0, "-", "data_collection"], [42, 0, 0, "-", "graph"], [43, 0, 0, "-", "graph_visuals"], [44, 0, 0, "-", "graph_worker"], [46, 0, 0, "-", "linear_algebra"], [47, 0, 0, "-", "logger"], [48, 0, 0, "-", "parameter_container"], [49, 0, 0, "-", "planner"], [50, 0, 0, "-", "planner_helpers"], [51, 0, 0, "-", "types"]], "planner.action_processor": [[38, 1, 1, "", "ActionProcessor"], [38, 1, 1, "", "SpotFloatingActionProcessor"], [38, 1, 1, "", "SpotWholebodyActionProcessor"]], "planner.action_processor.ActionProcessor": [[38, 2, 1, "", "__call__"], [38, 4, 1, "", "actuated_pos"], [38, 2, 1, "", "get_action_trajectories"], [38, 2, 1, "", "get_actuated_states"], [38, 2, 1, "", "get_end_actions"], [38, 2, 1, "", "get_start_actions"]], "planner.action_processor.SpotFloatingActionProcessor": [[38, 4, 1, "", "arm_action_ixs"], [38, 2, 1, "", "base_action_to_egocentric"], [38, 2, 1, "", "clip_base_actions"], [38, 2, 1, "", "get_end_actions"]], "planner.action_processor.SpotWholebodyActionProcessor": [[38, 4, 1, "", "arm_action_ixs"], [38, 4, 1, "", "arm_state_ixs"], [38, 2, 1, "", "get_action_trajectories"], [38, 2, 1, "", "get_actuated_states"], [38, 2, 1, "", "get_start_actions"]], "planner.action_sampler": [[39, 1, 1, "", "ActionSampler"]], "planner.action_sampler.ActionSampler": [[39, 2, 1, "", "__call__"], [39, 2, 1, "", "continuation_directions"], [39, 2, 1, "", "directions_actions"], [39, 2, 1, "", "goal_directions"], [39, 2, 1, "", "initialize"], [39, 2, 1, "", "proximity_directions"], [39, 2, 1, "", "random_directions"]], "planner.clipping_method": [[40, 3, 1, "", "box_scaling"], [40, 3, 1, "", "clip_actions"]], "planner.data_collection": [[41, 3, 1, "", "find_latest_model_path"], [41, 3, 1, "", "load_model"], [41, 3, 1, "", "load_tensor"], [41, 3, 1, "", "save_model"], [41, 3, 1, "", "save_tensor"]], "planner.graph": [[42, 1, 1, "", "Graph"], [42, 3, 1, "", "sample_feasible_states"], [42, 3, 1, "", "sample_random_goal_states"], [42, 3, 1, "", "sample_random_start_states"], [42, 3, 1, "", "sample_random_states"], [42, 3, 1, "", "sample_random_sub_goal_states"], [42, 3, 1, "", "sample_related_sub_goal_states"]], "planner.graph.Graph": [[42, 2, 1, "", "activate_all_nodes"], [42, 2, 1, "", "add_child_ids_to_node"], [42, 2, 1, "", "add_nodes"], [42, 2, 1, "", "add_total_rewards"], [42, 2, 1, "", "calculate_distance_rewards"], [42, 2, 1, "", "calculate_proximity_rewards"], [42, 2, 1, "", "calculate_reachability_rewards"], [42, 2, 1, "", "change_sub_goal_states"], [42, 2, 1, "", "check_for_early_termination"], [42, 2, 1, "", "deactivate_nodes"], [42, 2, 1, "", "destroy"], [42, 2, 1, "", "get_active_main_ids"], [42, 2, 1, "", "get_best_id"], [42, 2, 1, "", "get_root_ids"], [42, 2, 1, "", "is_better_than"], [42, 2, 1, "", "is_worse_than"], [42, 2, 1, "", "load"], [42, 2, 1, "", "number_of_nodes"], [42, 2, 1, "", "reachability_cache"], [42, 2, 1, "", "reset"], [42, 2, 1, "", "reset_sub_goal_states"], [42, 2, 1, "", "save"], [42, 2, 1, "", "set_goal_state"], [42, 2, 1, "", "set_start_states"], [42, 2, 1, "", "shortest_path_to"], [42, 2, 1, "", "sorted_progress_ids"]], "planner.graph_visuals": [[43, 3, 1, "", "color_gradient"], [43, 3, 1, "", "display_3d_graph"], [43, 3, 1, "", "display_colormap_point_cloud"], [43, 3, 1, "", "display_point_cloud"], [43, 3, 1, "", "display_segments"], [43, 3, 1, "", "display_segments_by_category"], [43, 3, 1, "", "rgba_palette"]], "planner.graph_worker": [[44, 1, 1, "", "CommonGoalWorkerInterface"], [44, 1, 1, "", "ExplorerWorker"], [44, 1, 1, "", "GraphWorker"], [44, 1, 1, "", "ParallelGoalsWorker"], [44, 1, 1, "", "RelatedGoalWorker"], [44, 1, 1, "", "RolloutWorker"], [44, 1, 1, "", "SingleGoalWorker"], [44, 3, 1, "", "inspect_action_type"], [44, 3, 1, "", "pareto_distribution"]], "planner.graph_worker.GraphWorker": [[44, 2, 1, "", "callback_and_progress_check"], [44, 2, 1, "", "get_progress_info"], [44, 2, 1, "", "node_extension"], [44, 2, 1, "", "node_pruning"], [44, 2, 1, "", "node_replacement"], [44, 2, 1, "", "node_selection"], [44, 2, 1, "", "percentage_range"]], "planner.graph_worker.ParallelGoalsWorker": [[44, 2, 1, "", "reset_finished_workers"], [44, 2, 1, "", "update_extension_lengths"], [44, 2, 1, "", "update_pareto_parameters"], [44, 2, 1, "", "work"]], "planner.linear_algebra": [[46, 3, 1, "", "einsum_ij_ij_i"], [46, 3, 1, "", "einsum_ij_kj_ki"], [46, 3, 1, "", "einsum_ijk_ik_ij"], [46, 3, 1, "", "einsum_ijk_ikl_ijl"], [46, 3, 1, "", "einsum_ijk_ilk_ijl"], [46, 3, 1, "", "einsum_ikj_ik_ij"], [46, 3, 1, "", "einsum_ikj_ikl_ijl"], [46, 3, 1, "", "einsum_jk_ikl_ijl"], [46, 3, 1, "", "gram_schmidt"], [46, 3, 1, "", "max_scaling"], [46, 3, 1, "", "normalize"], [46, 3, 1, "", "normalize_multiple"], [46, 3, 1, "", "project_v_on_u"], [46, 3, 1, "", "project_vectors_on_eigenspace"], [46, 3, 1, "", "transformation_matrix"], [46, 3, 1, "", "truncpareto_cdf"]], "planner.logger": [[47, 1, 1, "", "Logger"]], "planner.logger.Logger": [[47, 2, 1, "", "create_distance_log"], [47, 2, 1, "", "create_reward_log"], [47, 2, 1, "", "get_log_name"], [47, 2, 1, "", "log_action_sampler"], [47, 2, 1, "", "log_node_extension"], [47, 2, 1, "", "log_node_pruning"], [47, 2, 1, "", "log_node_selection"], [47, 2, 1, "", "log_params"], [47, 2, 1, "", "log_search"], [47, 2, 1, "", "simple_path_statistics"], [47, 2, 1, "", "simple_progress_statistics"]], "planner.parameter_container": [[48, 1, 1, "", "ParameterContainer"], [48, 3, 1, "", "parse_hardware_parameters"]], "planner.parameter_container.ParameterContainer": [[48, 2, 1, "", "__contains__"], [48, 2, 1, "", "__delattr__"], [48, 2, 1, "", "__getattr__"], [48, 2, 1, "", "__setattr__"], [48, 2, 1, "", "__str__"], [48, 2, 1, "", "autofill"], [48, 6, 1, "", "cache_folder"], [48, 2, 1, "", "concat_list_of_arrays"], [48, 6, 1, "", "data_folder"], [48, 6, 1, "", "device"], [48, 6, 1, "", "examples_directory"], [48, 6, 1, "", "graph_cache_folder"], [48, 2, 1, "", "list_of_yaml_arrays_to_tensor"], [48, 2, 1, "", "load_base"], [48, 2, 1, "", "load_eigenspaces"], [48, 6, 1, "", "policy_filepath"], [48, 2, 1, "", "process_scaling"], [48, 2, 1, "", "reset_seed"], [48, 2, 1, "", "reward_distance_scaling_sqrt"], [48, 2, 1, "", "run_autofill_rule"], [48, 2, 1, "", "set_seed"], [48, 6, 1, "", "state_cache_folder"], [48, 6, 1, "", "trajectory_cache_folder"], [48, 2, 1, "", "update"], [48, 6, 1, "", "xml_folder"]], "planner.planner": [[49, 1, 1, "", "Planner"]], "planner.planner.Planner": [[49, 2, 1, "", "path_data"], [49, 2, 1, "", "path_trajectory"], [49, 2, 1, "", "plot_search_results"], [49, 2, 1, "", "search"], [49, 2, 1, "", "shortest_path_data"], [49, 2, 1, "", "shortest_path_trajectory"]], "planner.planner_helpers": [[50, 3, 1, "", "is_object_out_of_reach"], [50, 3, 1, "", "is_object_tilted"], [50, 3, 1, "", "torso_too_close_to_object"]], "planner.types": [[51, 5, 1, "", "ACTION_TYPE_DIRECTIONAL_MAP"], [51, 1, 1, "", "ActionMode"], [51, 1, 1, "", "ActionType"], [51, 1, 1, "", "ClippingType"], [51, 1, 1, "", "ControlType"], [51, 1, 1, "", "SelectionType"], [51, 3, 1, "", "convert_dtype"], [51, 3, 1, "", "set_default_device_and_dtype"]], "planner.types.ActionMode": [[51, 4, 1, "", "ABSOLUTE_ACTION"], [51, 4, 1, "", "RELATIVE_TO_PREVIOUS_END_ACTION"], [51, 2, 1, "", "__str__"]], "planner.types.ActionType": [[51, 4, 1, "", "CONTINUATION"], [51, 4, 1, "", "EXPERT"], [51, 4, 1, "", "GOAL"], [51, 4, 1, "", "NON_EXPERT"], [51, 4, 1, "", "PROXIMITY"], [51, 4, 1, "", "RANGED"], [51, 2, 1, "", "__str__"]], "planner.types.ClippingType": [[51, 4, 1, "", "SCALE"], [51, 2, 1, "", "__str__"]], "planner.types.ControlType": [[51, 4, 1, "", "FIRST_ORDER_HOLD"], [51, 2, 1, "", "__str__"]], "planner.types.SelectionType": [[51, 4, 1, "", "LAST"], [51, 2, 1, "", "__str__"]], "predictive_sampling": [[52, 1, 1, "", "PredictiveSampling"], [52, 1, 1, "", "PredictiveSamplingConfig"]], "predictive_sampling.PredictiveSampling": [[52, 2, 1, "", "action"], [52, 2, 1, "", "update_action"]], "predictive_sampling.PredictiveSamplingConfig": [[52, 4, 1, "", "noise_ramp"]], "scenes": [[54, 0, 0, "-", "scene_composer"], [55, 0, 0, "-", "scene_generator"], [56, 0, 0, "-", "scene_registry"], [53, 5, 1, "", "spot_sensors"]], "scenes.scene_composer": [[54, 1, 1, "", "ModelElement"], [54, 1, 1, "", "Scene"], [54, 1, 1, "", "SpotRobot"], [54, 3, 1, "", "make_default_header_includes"], [54, 1, 1, "", "mjBodyWrapper"], [54, 3, 1, "", "override"]], "scenes.scene_composer.ModelElement": [[54, 2, 1, "", "__getitem__"], [54, 2, 1, "", "autoload"], [54, 2, 1, "", "from_file"], [54, 2, 1, "", "from_string"], [54, 4, 1, "", "header_includes"], [54, 2, 1, "", "load"], [54, 4, 1, "", "name"], [54, 2, 1, "", "to_xml_file"], [54, 2, 1, "", "to_xml_string"], [54, 4, 1, "", "xml_content"]], "scenes.scene_composer.Scene": [[54, 4, 1, "", "contacts"], [54, 4, 1, "", "elements"], [54, 2, 1, "", "load"], [54, 4, 1, "", "sensors"], [54, 4, 1, "", "xml_dir"]], "scenes.scene_composer.SpotRobot": [[54, 2, 1, "", "load"], [54, 4, 1, "", "name"], [54, 4, 1, "", "xml_dir"]], "scenes.scene_composer.mjBodyWrapper": [[54, 2, 1, "", "__getattr__"], [54, 2, 1, "", "__setattr__"], [54, 2, 1, "", "attach"]], "scenes.scene_registry": [[56, 5, 1, "", "ASSET_DIR"], [56, 5, 1, "", "COMPONENTS_DIR"], [56, 5, 1, "", "OUTPUT_DIR"], [56, 1, 1, "", "SceneRegistry"], [56, 5, 1, "", "XML_DIR"], [56, 5, 1, "", "scene_registry"]], "scenes.scene_registry.SceneRegistry": [[56, 2, 1, "", "__getitem__"], [56, 2, 1, "", "add"], [56, 2, 1, "", "generate"], [56, 2, 1, "", "generate_all"]], "spot_box": [[57, 5, 1, "", "RESET_OBJECT_POSE"], [57, 1, 1, "", "SpotBox"], [57, 1, 1, "", "SpotBoxConfig"], [57, 5, 1, "", "Z_AXIS"]], "spot_box.SpotBox": [[57, 6, 1, "", "actuator_ctrlrange"], [57, 2, 1, "", "reset"], [57, 2, 1, "", "reward"]], "spot_box.SpotBoxConfig": [[57, 4, 1, "", "goal_position"], [57, 4, 1, "", "orientation_threshold"], [57, 4, 1, "", "w_gripper_proximity"], [57, 4, 1, "", "w_orientation"], [57, 4, 1, "", "w_torso_proximity"]], "spot_hand_navigation": [[58, 1, 1, "", "SpotHandNavigation"], [58, 1, 1, "", "SpotHandNavigationConfig"]], "spot_hand_navigation.SpotHandNavigation": [[58, 6, 1, "", "actuator_ctrlrange"], [58, 2, 1, "", "reset"], [58, 2, 1, "", "reward"]], "spot_hand_navigation.SpotHandNavigationConfig": [[58, 4, 1, "", "goal_position"]], "spot_navigation": [[59, 1, 1, "", "SpotNavigation"], [59, 1, 1, "", "SpotNavigationConfig"]], "spot_navigation.SpotNavigation": [[59, 6, 1, "", "actuator_ctrlrange"], [59, 2, 1, "", "reset"], [59, 2, 1, "", "reward"]], "spot_navigation.SpotNavigationConfig": [[59, 4, 1, "", "goal_position"]], "spot_tire": [[60, 5, 1, "", "RESET_OBJECT_POSE"], [60, 1, 1, "", "SpotTire"], [60, 1, 1, "", "SpotTireConfig"], [60, 5, 1, "", "TIRE_GOAL"], [60, 5, 1, "", "TIRE_HEIGHT"], [60, 5, 1, "", "Z_AXIS"]], "spot_tire.SpotTire": [[60, 6, 1, "", "actuator_ctrlrange"], [60, 2, 1, "", "reset"], [60, 2, 1, "", "reward"]], "spot_tire.SpotTireConfig": [[60, 4, 1, "", "fall_penalty"], [60, 4, 1, "", "goal_position"], [60, 4, 1, "", "goal_tire_pos"], [60, 4, 1, "", "gripper_goal_altitude"], [60, 4, 1, "", "gripper_goal_offset"], [60, 4, 1, "", "tire_fallen_threshold"], [60, 4, 1, "", "torso_goal_offset"], [60, 4, 1, "", "w_gripper_proximity"], [60, 4, 1, "", "w_leg_proximity"], [60, 4, 1, "", "w_tire_angular_velocity"], [60, 4, 1, "", "w_tire_linear_velocity"], [60, 4, 1, "", "w_torso_proximity"]], "tasks": [[61, 0, 0, "-", "acrobot"], [62, 0, 0, "-", "cartpole"], [63, 0, 0, "-", "cost_functions"], [64, 0, 0, "-", "cylinder_push"], [65, 3, 1, "", "get_registered_tasks"], [66, 0, 0, "-", "mujoco_task"], [65, 3, 1, "", "register_task"], [67, 0, 0, "-", "spot_base"], [68, 0, 0, "-", "spot_position_control"], [69, 0, 0, "-", "task"]], "tasks.acrobot": [[61, 1, 1, "", "Acrobot"], [61, 1, 1, "", "AcrobotConfig"], [61, 5, 1, "", "MODEL_PATH"]], "tasks.acrobot.Acrobot": [[61, 2, 1, "", "reset"]], "tasks.acrobot.AcrobotConfig": [[61, 4, 1, "", "cutoff_time"], [61, 4, 1, "", "p_vertical"], [61, 4, 1, "", "w_control"], [61, 4, 1, "", "w_velocity"], [61, 4, 1, "", "w_vertical"]], "tasks.cartpole": [[62, 1, 1, "", "Cartpole"], [62, 1, 1, "", "CartpoleConfig"], [62, 5, 1, "", "MODEL_PATH"]], "tasks.cartpole.Cartpole": [[62, 2, 1, "", "is_terminated"], [62, 2, 1, "", "reset"]], "tasks.cartpole.CartpoleConfig": [[62, 4, 1, "", "cutoff_time"], [62, 4, 1, "", "p_centered"], [62, 4, 1, "", "p_vertical"], [62, 4, 1, "", "w_centered"], [62, 4, 1, "", "w_control"], [62, 4, 1, "", "w_velocity"], [62, 4, 1, "", "w_vertical"]], "tasks.cost_functions": [[63, 3, 1, "", "quadratic_norm"], [63, 3, 1, "", "smooth_l1_norm"]], "tasks.cylinder_push": [[64, 1, 1, "", "CylinderPush"], [64, 1, 1, "", "CylinderPushConfig"], [64, 5, 1, "", "MODEL_PATH"]], "tasks.cylinder_push.CylinderPush": [[64, 2, 1, "", "reset"]], "tasks.cylinder_push.CylinderPushConfig": [[64, 4, 1, "", "cart_goal_position"], [64, 4, 1, "", "cutoff_time"], [64, 4, 1, "", "pusher_goal_offset"], [64, 4, 1, "", "w_cart_position"], [64, 4, 1, "", "w_pusher_proximity"], [64, 4, 1, "", "w_pusher_velocity"]], "tasks.mujoco_task": [[66, 1, 1, "", "MujocoTask"]], "tasks.mujoco_task.MujocoTask": [[66, 6, 1, "", "actuator_ctrlrange"], [66, 2, 1, "", "create_visualization"], [66, 6, 1, "", "default_idle_command"], [66, 6, 1, "", "dt"], [66, 2, 1, "", "is_terminated"], [66, 2, 1, "", "make_models"], [66, 6, 1, "", "nu"], [66, 2, 1, "", "reset"], [66, 2, 1, "", "rollout"], [66, 2, 1, "", "sim_step"]], "tasks.spot_base": [[67, 5, 1, "", "ConfigT"], [67, 5, 1, "", "DEFAULT_SPOT_ROLLOUT_CUTOFF_TIME"], [67, 5, 1, "", "GOAL_POSITIONS"], [67, 1, 1, "", "SpotBase"], [67, 1, 1, "", "SpotBaseConfig"]], "tasks.spot_base.SpotBase": [[67, 6, 1, "", "default_idle_command"], [67, 2, 1, "", "make_models"], [67, 2, 1, "", "rollout"], [67, 2, 1, "", "sim_step"]], "tasks.spot_base.SpotBaseConfig": [[67, 4, 1, "", "cutoff_time"], [67, 4, 1, "", "fall_penalty"], [67, 4, 1, "", "spot_fallen_threshold"], [67, 4, 1, "", "w_goal"], [67, 4, 1, "", "w_proximity"], [67, 4, 1, "", "w_vel"]], "tasks.spot_position_control": [[68, 5, 1, "", "MODEL_PATH"], [68, 1, 1, "", "SpotPositionControl"], [68, 1, 1, "", "SpotPositionControlConfig"]], "tasks.spot_position_control.SpotPositionControl": [[68, 2, 1, "", "reset"]], "tasks.spot_position_control.SpotPositionControlConfig": [[68, 4, 1, "", "default_command"], [68, 4, 1, "", "w_arms"], [68, 4, 1, "", "w_forward"], [68, 4, 1, "", "w_legs"]], "tasks.task": [[69, 5, 1, "", "ConfigT"], [69, 5, 1, "", "ModelT"], [69, 1, 1, "", "Task"], [69, 1, 1, "", "TaskConfig"]], "tasks.task.Task": [[69, 6, 1, "", "actuator_ctrlrange"], [69, 6, 1, "", "additional_task_info"], [69, 2, 1, "", "create_visualization"], [69, 6, 1, "", "dt"], [69, 2, 1, "", "is_terminated"], [69, 2, 1, "", "make_models"], [69, 2, 1, "", "reset"], [69, 2, 1, "", "reward"], [69, 2, 1, "", "rollout"], [69, 2, 1, "", "sim_step"]], "viser_app": [[70, 0, 0, "-", "app"], [71, 0, 0, "-", "gui"], [73, 0, 0, "-", "io"], [74, 0, 0, "-", "json_serializer"], [75, 0, 0, "-", "profiler"]], "viser_app.app": [[70, 1, 1, "", "ControlProcess"], [70, 5, 1, "", "JACTA_MANIPULATION_PATH"], [70, 1, 1, "", "SimulationProcess"], [70, 1, 1, "", "ViserApp"]], "viser_app.app.ControlProcess": [[70, 2, 1, "", "control_loop"], [70, 2, 1, "", "remove"], [70, 2, 1, "", "set_profiler_recording"], [70, 2, 1, "", "terminate"], [70, 2, 1, "", "write_controls"], [70, 2, 1, "", "write_traces"]], "viser_app.app.SimulationProcess": [[70, 2, 1, "", "reset"], [70, 2, 1, "", "write_states"]], "viser_app.app.ViserApp": [[70, 2, 1, "", "config_download_callback"], [70, 2, 1, "", "control_cycle_callback"], [70, 2, 1, "", "control_selection_callback"], [70, 2, 1, "", "enable_profiling_callback"], [70, 2, 1, "", "setup_context"], [70, 2, 1, "", "setup_controller"], [70, 2, 1, "", "setup_physics"], [70, 2, 1, "", "setup_task"], [70, 2, 1, "", "setup_visualization"], [70, 2, 1, "", "simulation_cycle_callback"], [70, 2, 1, "", "simulation_reset_callback"], [70, 2, 1, "", "task_selection_callback"]], "viser_app.gui": [[71, 5, 1, "", "DEFAULT_SLIDER_STEP_FLOAT"], [71, 5, 1, "", "DEFAULT_SLIDER_STEP_INT"], [71, 5, 1, "", "GOAL_RADIUS"], [71, 3, 1, "", "create_gui_elements"], [71, 3, 1, "", "slider"]], "viser_app.io": [[73, 1, 1, "", "HardwareIOContext"], [73, 1, 1, "", "IOContext"], [73, 1, 1, "", "SimulationIOContext"]], "viser_app.json_serializer": [[74, 1, 1, "", "ConfigEncoder"], [74, 3, 1, "", "decode_config"]], "viser_app.profiler": [[75, 1, 1, "", "ViserProfiler"], [75, 1, 1, "", "ViserProfilerConfig"]], "viser_app.profiler.ViserProfiler": [[75, 2, 1, "", "benchmark_wrapper"]], "visualization": [[76, 1, 1, "", "MjVisualization"], [76, 5, 1, "", "VISUALIZATION_FREQ"]], "visualization.MjVisualization": [[76, 2, 1, "", "remove"]], "visuals": [[78, 0, 0, "-", "meshcat_visualizer"], [79, 0, 0, "-", "mujoco_visualizer"], [80, 0, 0, "-", "quaternion_operations"]], "visuals.meshcat_visualizer": [[78, 1, 1, "", "MeshPhysicalMaterial"], [78, 1, 1, "", "MeshToonMaterial"], [78, 1, 1, "", "Plane"], [78, 1, 1, "", "SetPropertyCapital"], [78, 3, 1, "", "add_box"], [78, 3, 1, "", "add_capsule"], [78, 3, 1, "", "add_cylinder"], [78, 3, 1, "", "add_ellipsoid"], [78, 3, 1, "", "add_ground"], [78, 3, 1, "", "add_mesh"], [78, 3, 1, "", "add_mesh_by_name"], [78, 3, 1, "", "add_object"], [78, 3, 1, "", "add_plane"], [78, 3, 1, "", "add_sphere"], [78, 3, 1, "", "close_window"], [78, 3, 1, "", "rgb_float_to_hex"], [78, 3, 1, "", "rgb_int_to_hex"], [78, 3, 1, "", "rgba_overwrite"], [78, 3, 1, "", "set_color"], [78, 3, 1, "", "set_object"], [78, 3, 1, "", "set_property_capital"], [78, 3, 1, "", "setup_visualizer"]], "visuals.meshcat_visualizer.SetPropertyCapital": [[78, 2, 1, "", "lower"]], "visuals.mujoco_visualizer": [[79, 5, 1, "", "DEFAULT_COLORS"], [79, 1, 1, "", "MujocoRenderer"], [79, 5, 1, "", "RGBA"], [79, 5, 1, "", "Trajectory"]], "visuals.mujoco_visualizer.MujocoRenderer": [[79, 2, 1, "", "add_marker"], [79, 2, 1, "", "animate_marker"], [79, 2, 1, "", "extract_joint_positions"], [79, 6, 1, "", "framerate"], [79, 2, 1, "", "get_html"], [79, 2, 1, "", "init_ee_position"], [79, 2, 1, "", "init_points"], [79, 2, 1, "", "initialize_candidate_trajectories"], [79, 2, 1, "", "initialize_markers"], [79, 2, 1, "", "load_model"], [79, 2, 1, "", "play"], [79, 2, 1, "", "render"], [79, 2, 1, "", "reset"], [79, 2, 1, "", "save"], [79, 2, 1, "", "set_marker"], [79, 2, 1, "", "set_model"], [79, 2, 1, "", "show"], [79, 2, 1, "", "show_box_goal"], [79, 2, 1, "", "show_goal"], [79, 2, 1, "", "show_trajectory"], [79, 2, 1, "", "update_candidate_trajectories"], [79, 2, 1, "", "update_ee_position"], [79, 2, 1, "", "update_markers"], [79, 2, 1, "", "update_points"], [79, 2, 1, "", "wait_for_input"]], "visuals.quaternion_operations": [[80, 3, 1, "", "action_inverse"], [80, 3, 1, "", "left_action"], [80, 3, 1, "", "pose_to_transformation_matrix"], [80, 3, 1, "", "project_action"], [80, 3, 1, "", "quaternion_inverse"], [80, 3, 1, "", "quaternion_to_quaternion_map_jacobian"], [80, 3, 1, "", "quaternion_to_transformation_matrix"], [80, 3, 1, "", "right_action"], [80, 3, 1, "", "rotation_matrix"], [80, 3, 1, "", "skew_symmetric"], [80, 3, 1, "", "vector_projection"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:data", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "titleterms": {"benchmark": [0, 1, 2], "modul": [0, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80], "content": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80], "submodul": [1, 6, 10, 16, 20, 23, 25, 33, 45, 53, 65, 72, 77], "profil": [2, 75], "cmae": 3, "constant": 4, "control": [5, 6, 7], "packag": [6, 53, 65], "sampling_bas": 7, "cross_entropy_method": 8, "dynam": [9, 10, 11, 12, 13, 14, 32], "action_trajectori": 9, "locomotion_pl": 11, "mujoco_dynam": [12, 32, 33, 34, 35], "todo": 12, "slecleach": 12, "add": 12, "support": 12, "acceler": 12, "base": [12, 15], "sensor": 12, "mujoco_util": 13, "state_help": 14, "environ": [15, 16, 17], "tire_state_cache_gener": 17, "expert": [18, 19, 20, 21, 22, 23, 24], "expert_sampl": 19, "subpackag": 20, "network": [21, 27], "primit": [22, 23, 24], "spot_standing_box": 24, "learn": [25, 26, 27, 28, 29], "learner": 26, "normal": 28, "replay_buff": 29, "model": 30, "mppi": 31, "kinemat": 34, "util": 35, "particle_filt": 36, "path_resolv": 37, "planner": [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "action_processor": 38, "action_sampl": 39, "clipping_method": 40, "data_collect": 41, "graph": 42, "graph_visu": 43, "graph_work": 44, "linear_algebra": 46, "logger": 47, "parameter_contain": 48, "planner_help": 50, "type": 51, "predictive_sampl": 52, "scene": [53, 54, 55, 56], "scene_compos": 54, "scene_gener": 55, "scene_registri": 56, "spot_box": 57, "spot_hand_navig": 58, "spot_navig": 59, "spot_tir": 60, "task": [61, 62, 63, 64, 65, 66, 67, 68, 69], "acrobot": 61, "cartpol": 62, "cost_funct": 63, "cylinder_push": 64, "mujoco_task": 66, "spot_bas": 67, "spot_position_control": 68, "viser_app": [70, 71, 72, 73, 74, 75], "app": 70, "gui": 71, "io": 73, "json_seri": 74, "visual": [76, 77, 78, 79, 80], "meshcat_visu": 78, "mujoco_visu": 79, "quaternion_oper": 80, "jacta": 81, "manipul": 81}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"benchmarking.benchmarking": [[0, "module-benchmarking.benchmarking"]], "Module Contents": [[0, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [21, "module-contents"], [22, "module-contents"], [24, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [44, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [54, "module-contents"], [56, "module-contents"], [57, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"], [62, "module-contents"], [63, "module-contents"], [64, "module-contents"], [66, "module-contents"], [67, "module-contents"], [68, "module-contents"], [69, "module-contents"], [70, "module-contents"], [71, "module-contents"], [73, "module-contents"], [74, "module-contents"], [75, "module-contents"], [76, "module-contents"], [78, "module-contents"], [79, "module-contents"], [80, "module-contents"]], "benchmarking": [[1, "module-benchmarking"]], "Submodules": [[1, "submodules"], [6, "submodules"], [10, "submodules"], [16, "submodules"], [20, "submodules"], [23, "submodules"], [25, "submodules"], [33, "submodules"], [45, "submodules"], [53, "submodules"], [65, "submodules"], [72, "submodules"], [77, "submodules"]], "benchmarking.profiling": [[2, "module-benchmarking.profiling"]], "cmaes": [[3, "module-cmaes"]], "constants": [[4, "module-constants"]], "controllers.controller": [[5, "module-controllers.controller"]], "controllers": [[6, "module-controllers"]], "Package Contents": [[6, "package-contents"], [53, "package-contents"], [65, "package-contents"]], "controllers.sampling_base": [[7, "module-controllers.sampling_base"]], "cross_entropy_method": [[8, "module-cross_entropy_method"]], "dynamics.action_trajectory": [[9, "module-dynamics.action_trajectory"]], "dynamics": [[10, "module-dynamics"]], "dynamics.locomotion_plant": [[11, "module-dynamics.locomotion_plant"]], "dynamics.mujoco_dynamics": [[12, "module-dynamics.mujoco_dynamics"]], "TODO: slecleach add support for acceleration-based sensors": [[12, "todo-slecleach-add-support-for-acceleration-based-sensors"]], "dynamics.mujoco_utils": [[13, "module-dynamics.mujoco_utils"]], "dynamics.state_helpers": [[14, "module-dynamics.state_helpers"]], "environments.base": [[15, "module-environments.base"]], "environments": [[16, "module-environments"]], "environments.tire_state_cache_generator": [[17, "module-environments.tire_state_cache_generator"]], "experts.expert": [[18, "module-experts.expert"]], "experts.expert_sampler": [[19, "module-experts.expert_sampler"]], "experts": [[20, "module-experts"]], "Subpackages": [[20, "subpackages"]], "experts.network": [[21, "module-experts.network"]], "experts.primitive": [[22, "module-experts.primitive"]], "experts.primitives": [[23, "module-experts.primitives"]], "experts.primitives.spot_standing_box": [[24, "module-experts.primitives.spot_standing_box"]], "learning": [[25, "module-learning"]], "learning.learner": [[26, "module-learning.learner"]], "learning.networks": [[27, "module-learning.networks"]], "learning.normalizer": [[28, "module-learning.normalizer"]], "learning.replay_buffer": [[29, "module-learning.replay_buffer"]], "model": [[30, "module-model"]], "mppi": [[31, "module-mppi"]], "mujoco_dynamics.dynamics": [[32, "module-mujoco_dynamics.dynamics"]], "mujoco_dynamics": [[33, "module-mujoco_dynamics"]], "mujoco_dynamics.kinematics": [[34, "module-mujoco_dynamics.kinematics"]], "mujoco_dynamics.utils": [[35, "module-mujoco_dynamics.utils"]], "particle_filter": [[36, "module-particle_filter"]], "path_resolvers": [[37, "module-path_resolvers"]], "planner.action_processor": [[38, "module-planner.action_processor"]], "planner.action_sampler": [[39, "module-planner.action_sampler"]], "planner.clipping_method": [[40, "module-planner.clipping_method"]], "planner.data_collection": [[41, "module-planner.data_collection"]], "planner.graph": [[42, "module-planner.graph"]], "planner.graph_visuals": [[43, "module-planner.graph_visuals"]], "planner.graph_worker": [[44, "module-planner.graph_worker"]], "planner": [[45, "module-planner"]], "planner.linear_algebra": [[46, "module-planner.linear_algebra"]], "planner.logger": [[47, "module-planner.logger"]], "planner.parameter_container": [[48, "module-planner.parameter_container"]], "planner.planner": [[49, "module-planner.planner"]], "planner.planner_helpers": [[50, "module-planner.planner_helpers"]], "planner.types": [[51, "module-planner.types"]], "predictive_sampling": [[52, "module-predictive_sampling"]], "scenes": [[53, "module-scenes"]], "scenes.scene_composer": [[54, "module-scenes.scene_composer"]], "scenes.scene_generator": [[55, "module-scenes.scene_generator"]], "scenes.scene_registry": [[56, "module-scenes.scene_registry"]], "spot_box": [[57, "module-spot_box"]], "spot_hand_navigation": [[58, "module-spot_hand_navigation"]], "spot_navigation": [[59, "module-spot_navigation"]], "spot_tire": [[60, "module-spot_tire"]], "tasks.acrobot": [[61, "module-tasks.acrobot"]], "tasks.cartpole": [[62, "module-tasks.cartpole"]], "tasks.cost_functions": [[63, "module-tasks.cost_functions"]], "tasks.cylinder_push": [[64, "module-tasks.cylinder_push"]], "tasks": [[65, "module-tasks"]], "tasks.mujoco_task": [[66, "module-tasks.mujoco_task"]], "tasks.spot_base": [[67, "module-tasks.spot_base"]], "tasks.spot_position_control": [[68, "module-tasks.spot_position_control"]], "tasks.task": [[69, "module-tasks.task"]], "viser_app.app": [[70, "module-viser_app.app"]], "viser_app.gui": [[71, "module-viser_app.gui"]], "viser_app": [[72, "module-viser_app"]], "viser_app.io": [[73, "module-viser_app.io"]], "viser_app.json_serializer": [[74, "module-viser_app.json_serializer"]], "viser_app.profiler": [[75, "module-viser_app.profiler"]], "visualization": [[76, "module-visualization"]], "visuals": [[77, "module-visuals"]], "visuals.meshcat_visualizer": [[78, "module-visuals.meshcat_visualizer"]], "visuals.mujoco_visualizer": [[79, "module-visuals.mujoco_visualizer"]], "visuals.quaternion_operations": [[80, "module-visuals.quaternion_operations"]], "jacta-manipulation": [[81, "jacta-manipulation"]]}, "indexentries": {"benchmark (class in benchmarking.benchmarking)": [[0, "benchmarking.benchmarking.Benchmark"]], "benchmarking.benchmarking": [[0, "module-benchmarking.benchmarking"]], "module": [[0, "module-benchmarking.benchmarking"], [1, "module-benchmarking"], [2, "module-benchmarking.profiling"], [3, "module-cmaes"], [4, "module-constants"], [5, "module-controllers.controller"], [6, "module-controllers"], [7, "module-controllers.sampling_base"], [8, "module-cross_entropy_method"], [9, "module-dynamics.action_trajectory"], [10, "module-dynamics"], [11, "module-dynamics.locomotion_plant"], [12, "module-dynamics.mujoco_dynamics"], [13, "module-dynamics.mujoco_utils"], [14, "module-dynamics.state_helpers"], [15, "module-environments.base"], [16, "module-environments"], [17, "module-environments.tire_state_cache_generator"], [18, "module-experts.expert"], [19, "module-experts.expert_sampler"], [20, "module-experts"], [21, "module-experts.network"], [22, "module-experts.primitive"], [23, "module-experts.primitives"], [24, "module-experts.primitives.spot_standing_box"], [25, "module-learning"], [26, "module-learning.learner"], [27, "module-learning.networks"], [28, "module-learning.normalizer"], [29, "module-learning.replay_buffer"], [30, "module-model"], [31, "module-mppi"], [32, "module-mujoco_dynamics.dynamics"], [33, "module-mujoco_dynamics"], [34, "module-mujoco_dynamics.kinematics"], [35, "module-mujoco_dynamics.utils"], [36, "module-particle_filter"], [37, "module-path_resolvers"], [38, "module-planner.action_processor"], [39, "module-planner.action_sampler"], [40, "module-planner.clipping_method"], [41, "module-planner.data_collection"], [42, "module-planner.graph"], [43, "module-planner.graph_visuals"], [44, "module-planner.graph_worker"], [45, "module-planner"], [46, "module-planner.linear_algebra"], [47, "module-planner.logger"], [48, "module-planner.parameter_container"], [49, "module-planner.planner"], [50, "module-planner.planner_helpers"], [51, "module-planner.types"], [52, "module-predictive_sampling"], [53, "module-scenes"], [54, "module-scenes.scene_composer"], [55, "module-scenes.scene_generator"], [56, "module-scenes.scene_registry"], [57, "module-spot_box"], [58, "module-spot_hand_navigation"], [59, "module-spot_navigation"], [60, "module-spot_tire"], [61, "module-tasks.acrobot"], [62, "module-tasks.cartpole"], [63, "module-tasks.cost_functions"], [64, "module-tasks.cylinder_push"], [65, "module-tasks"], [66, "module-tasks.mujoco_task"], [67, "module-tasks.spot_base"], [68, "module-tasks.spot_position_control"], [69, "module-tasks.task"], [70, "module-viser_app.app"], [71, "module-viser_app.gui"], [72, "module-viser_app"], [73, "module-viser_app.io"], [74, "module-viser_app.json_serializer"], [75, "module-viser_app.profiler"], [76, "module-visualization"], [77, "module-visuals"], [78, "module-visuals.meshcat_visualizer"], [79, "module-visuals.mujoco_visualizer"], [80, "module-visuals.quaternion_operations"]], "print_results() (benchmarking.benchmarking.benchmark method)": [[0, "benchmarking.benchmarking.Benchmark.print_results"]], "visualize_results() (benchmarking.benchmarking.benchmark method)": [[0, "benchmarking.benchmarking.Benchmark.visualize_results"]], "benchmarking": [[1, "module-benchmarking"]], "benchmarking.profiling": [[2, "module-benchmarking.profiling"]], "run_example() (in module benchmarking.profiling)": [[2, "benchmarking.profiling.run_example"]], "cmaes (class in cmaes)": [[3, "cmaes.CMAES"]], "cmaesconfig (class in cmaes)": [[3, "cmaes.CMAESConfig"]], "action() (cmaes.cmaes method)": [[3, "cmaes.CMAES.action"]], "cmaes": [[3, "module-cmaes"]], "max_iter (cmaes.cmaesconfig attribute)": [[3, "cmaes.CMAESConfig.max_iter"]], "update_action() (cmaes.cmaes method)": [[3, "cmaes.CMAES.update_action"]], "arm_joint_names (in module constants)": [[4, "constants.ARM_JOINT_NAMES"]], "arm_link_names (in module constants)": [[4, "constants.ARM_LINK_NAMES"]], "arm_stowed_pos (in module constants)": [[4, "constants.ARM_STOWED_POS"]], "arm_unstowed_pos (in module constants)": [[4, "constants.ARM_UNSTOWED_POS"]], "legs_sitting_pos (in module constants)": [[4, "constants.LEGS_SITTING_POS"]], "legs_standing_pos (in module constants)": [[4, "constants.LEGS_STANDING_POS"]], "leg_joint_names (in module constants)": [[4, "constants.LEG_JOINT_NAMES"]], "leg_link_names (in module constants)": [[4, "constants.LEG_LINK_NAMES"]], "sitting_stowed_pos (in module constants)": [[4, "constants.SITTING_STOWED_POS"]], "sitting_unstowed_pos (in module constants)": [[4, "constants.SITTING_UNSTOWED_POS"]], "spot_angs_vel_slice (in module constants)": [[4, "constants.SPOT_ANGS_VEL_SLICE"]], "spot_arms_slice (in module constants)": [[4, "constants.SPOT_ARMS_SLICE"]], "spot_arms_vel_slice (in module constants)": [[4, "constants.SPOT_ARMS_VEL_SLICE"]], "spot_body_slice (in module constants)": [[4, "constants.SPOT_BODY_SLICE"]], "spot_body_vel_slice (in module constants)": [[4, "constants.SPOT_BODY_VEL_SLICE"]], "spot_legs_slice (in module constants)": [[4, "constants.SPOT_LEGS_SLICE"]], "spot_legs_vel_slice (in module constants)": [[4, "constants.SPOT_LEGS_VEL_SLICE"]], "spot_quat_slice (in module constants)": [[4, "constants.SPOT_QUAT_SLICE"]], "spot_state_inds (class in constants)": [[4, "constants.SPOT_STATE_INDS"]], "standing_height (in module constants)": [[4, "constants.STANDING_HEIGHT"]], "standing_stowed_pos (in module constants)": [[4, "constants.STANDING_STOWED_POS"]], "standing_unstowed_pos (in module constants)": [[4, "constants.STANDING_UNSTOWED_POS"]], "angs_vel_slice (constants.spot_state_inds attribute)": [[4, "constants.SPOT_STATE_INDS.angs_vel_slice"]], "arms_slice (constants.spot_state_inds attribute)": [[4, "constants.SPOT_STATE_INDS.arms_slice"]], "arms_vel_slice (constants.spot_state_inds attribute)": [[4, "constants.SPOT_STATE_INDS.arms_vel_slice"]], "body_vel_slice (constants.spot_state_inds attribute)": [[4, "constants.SPOT_STATE_INDS.body_vel_slice"]], "constants": [[4, "module-constants"]], "legs_slice (constants.spot_state_inds attribute)": [[4, "constants.SPOT_STATE_INDS.legs_slice"]], "legs_vel_slice (constants.spot_state_inds attribute)": [[4, "constants.SPOT_STATE_INDS.legs_vel_slice"]], "quat_slice (constants.spot_state_inds attribute)": [[4, "constants.SPOT_STATE_INDS.quat_slice"]], "controller (class in controllers.controller)": [[5, "controllers.controller.Controller"]], "controllerconfig (class in controllers.controller)": [[5, "controllers.controller.ControllerConfig"]], "action() (controllers.controller.controller method)": [[5, "controllers.controller.Controller.action"]], "controllers.controller": [[5, "module-controllers.controller"]], "controls (controllers.controller.controller property)": [[5, "controllers.controller.Controller.controls"]], "make_models() (controllers.controller.controller method)": [[5, "controllers.controller.Controller.make_models"]], "reset() (controllers.controller.controller method)": [[5, "controllers.controller.Controller.reset"]], "rollout_times (controllers.controller.controller property)": [[5, "controllers.controller.Controller.rollout_times"]], "set_default_controls() (controllers.controller.controller method)": [[5, "controllers.controller.Controller.set_default_controls"]], "update_action() (controllers.controller.controller method)": [[5, "controllers.controller.Controller.update_action"]], "controllers": [[6, "module-controllers"]], "get_registered_controllers() (in module controllers)": [[6, "controllers.get_registered_controllers"]], "register_controller() (in module controllers)": [[6, "controllers.register_controller"]], "max_num_traces (in module controllers.sampling_base)": [[7, "controllers.sampling_base.MAX_NUM_TRACES"]], "samplingbase (class in controllers.sampling_base)": [[7, "controllers.sampling_base.SamplingBase"]], "samplingbaseconfig (class in controllers.sampling_base)": [[7, "controllers.sampling_base.SamplingBaseConfig"]], "action() (controllers.sampling_base.samplingbase method)": [[7, "controllers.sampling_base.SamplingBase.action"]], "control_freq (controllers.sampling_base.samplingbaseconfig attribute)": [[7, "controllers.sampling_base.SamplingBaseConfig.control_freq"]], "controllers.sampling_base": [[7, "module-controllers.sampling_base"]], "controls (controllers.sampling_base.samplingbase property)": [[7, "controllers.sampling_base.SamplingBase.controls"]], "make_models() (controllers.sampling_base.samplingbase method)": [[7, "controllers.sampling_base.SamplingBase.make_models"]], "make_spline() (in module controllers.sampling_base)": [[7, "controllers.sampling_base.make_spline"]], "num_nodes (controllers.sampling_base.samplingbaseconfig attribute)": [[7, "controllers.sampling_base.SamplingBaseConfig.num_nodes"]], "num_rollouts (controllers.sampling_base.samplingbaseconfig attribute)": [[7, "controllers.sampling_base.SamplingBaseConfig.num_rollouts"]], "reset() (controllers.sampling_base.samplingbase method)": [[7, "controllers.sampling_base.SamplingBase.reset"]], "rollout_times (controllers.sampling_base.samplingbase property)": [[7, "controllers.sampling_base.SamplingBase.rollout_times"]], "set_default_controls() (controllers.sampling_base.samplingbase method)": [[7, "controllers.sampling_base.SamplingBase.set_default_controls"]], "spline (controllers.sampling_base.samplingbase property)": [[7, "controllers.sampling_base.SamplingBase.spline"]], "spline_order (controllers.sampling_base.samplingbaseconfig attribute)": [[7, "controllers.sampling_base.SamplingBaseConfig.spline_order"]], "spline_timesteps (controllers.sampling_base.samplingbase property)": [[7, "controllers.sampling_base.SamplingBase.spline_timesteps"]], "update_action() (controllers.sampling_base.samplingbase method)": [[7, "controllers.sampling_base.SamplingBase.update_action"]], "update_spline() (controllers.sampling_base.samplingbase method)": [[7, "controllers.sampling_base.SamplingBase.update_spline"]], "update_traces() (controllers.sampling_base.samplingbase method)": [[7, "controllers.sampling_base.SamplingBase.update_traces"]], "use_noise_ramp (controllers.sampling_base.samplingbaseconfig attribute)": [[7, "controllers.sampling_base.SamplingBaseConfig.use_noise_ramp"]], "crossentropyconfig (class in cross_entropy_method)": [[8, "cross_entropy_method.CrossEntropyConfig"]], "crossentropymethod (class in cross_entropy_method)": [[8, "cross_entropy_method.CrossEntropyMethod"]], "action() (cross_entropy_method.crossentropymethod method)": [[8, "cross_entropy_method.CrossEntropyMethod.action"]], "cross_entropy_method": [[8, "module-cross_entropy_method"]], "horizon (cross_entropy_method.crossentropyconfig attribute)": [[8, "cross_entropy_method.CrossEntropyConfig.horizon"]], "noise_ramp (cross_entropy_method.crossentropyconfig attribute)": [[8, "cross_entropy_method.CrossEntropyConfig.noise_ramp"]], "num_elites (cross_entropy_method.crossentropyconfig attribute)": [[8, "cross_entropy_method.CrossEntropyConfig.num_elites"]], "num_rollouts (cross_entropy_method.crossentropyconfig attribute)": [[8, "cross_entropy_method.CrossEntropyConfig.num_rollouts"]], "sigma_max (cross_entropy_method.crossentropyconfig attribute)": [[8, "cross_entropy_method.CrossEntropyConfig.sigma_max"]], "update_action() (cross_entropy_method.crossentropymethod method)": [[8, "cross_entropy_method.CrossEntropyMethod.update_action"]], "create_action_trajectories() (in module dynamics.action_trajectory)": [[9, "dynamics.action_trajectory.create_action_trajectories"]], "create_action_trajectory() (in module dynamics.action_trajectory)": [[9, "dynamics.action_trajectory.create_action_trajectory"]], "dynamics.action_trajectory": [[9, "module-dynamics.action_trajectory"]], "dynamics": [[10, "module-dynamics"]], "locomotionplant (class in dynamics.locomotion_plant)": [[11, "dynamics.locomotion_plant.LocomotionPlant"]], "dynamics() (dynamics.locomotion_plant.locomotionplant method)": [[11, "dynamics.locomotion_plant.LocomotionPlant.dynamics"]], "dynamics.locomotion_plant": [[11, "module-dynamics.locomotion_plant"]], "get_sensor() (dynamics.locomotion_plant.locomotionplant method)": [[11, "dynamics.locomotion_plant.LocomotionPlant.get_sensor"]], "isaac_to_mujoco() (in module dynamics.locomotion_plant)": [[11, "dynamics.locomotion_plant.isaac_to_mujoco"]], "isaac_to_mujoco_ixs (in module dynamics.locomotion_plant)": [[11, "dynamics.locomotion_plant.isaac_to_mujoco_ixs"]], "load_policy() (dynamics.locomotion_plant.locomotionplant method)": [[11, "dynamics.locomotion_plant.LocomotionPlant.load_policy"]], "mujoco_to_isaac() (in module dynamics.locomotion_plant)": [[11, "dynamics.locomotion_plant.mujoco_to_isaac"]], "mujoco_to_isaac_ixs (in module dynamics.locomotion_plant)": [[11, "dynamics.locomotion_plant.mujoco_to_isaac_ixs"]], "process_observations() (dynamics.locomotion_plant.locomotionplant method)": [[11, "dynamics.locomotion_plant.LocomotionPlant.process_observations"]], "process_output() (dynamics.locomotion_plant.locomotionplant method)": [[11, "dynamics.locomotion_plant.LocomotionPlant.process_output"]], "run_policy() (dynamics.locomotion_plant.locomotionplant method)": [[11, "dynamics.locomotion_plant.LocomotionPlant.run_policy"]], "mujocoplant (class in dynamics.mujoco_dynamics)": [[12, "dynamics.mujoco_dynamics.MujocoPlant"]], "decompose_state_dimensions() (in module dynamics.mujoco_dynamics)": [[12, "dynamics.mujoco_dynamics.decompose_state_dimensions"]], "dynamics() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.dynamics"]], "dynamics.mujoco_dynamics": [[12, "module-dynamics.mujoco_dynamics"]], "get_action() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.get_action"]], "get_collision_free() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.get_collision_free"]], "get_gradients() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.get_gradients"]], "get_joint_dimensions() (in module dynamics.mujoco_dynamics)": [[12, "dynamics.mujoco_dynamics.get_joint_dimensions"]], "get_mass() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.get_mass"]], "get_quat_indices() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.get_quat_indices"]], "get_sensor() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.get_sensor"]], "get_state() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.get_state"]], "initialize() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.initialize"]], "normalize_state() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.normalize_state"]], "scale_distances() (in module dynamics.mujoco_dynamics)": [[12, "dynamics.mujoco_dynamics.scale_distances"]], "scaled_distances_to() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.scaled_distances_to"]], "set_action() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.set_action"]], "set_state() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.set_state"]], "state_addition() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.state_addition"]], "state_difference() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.state_difference"]], "update_sensor() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.update_sensor"]], "dynamics.mujoco_utils": [[13, "module-dynamics.mujoco_utils"]], "get_body_name() (in module dynamics.mujoco_utils)": [[13, "dynamics.mujoco_utils.get_body_name"]], "get_geom_name() (in module dynamics.mujoco_utils)": [[13, "dynamics.mujoco_utils.get_geom_name"]], "get_geometry_rgba() (in module dynamics.mujoco_utils)": [[13, "dynamics.mujoco_utils.get_geometry_rgba"]], "get_mesh_data() (in module dynamics.mujoco_utils)": [[13, "dynamics.mujoco_utils.get_mesh_data"]], "commandarray (class in dynamics.state_helpers)": [[14, "dynamics.state_helpers.CommandArray"]], "sensorarray (class in dynamics.state_helpers)": [[14, "dynamics.state_helpers.SensorArray"]], "statearray (class in dynamics.state_helpers)": [[14, "dynamics.state_helpers.StateArray"]], "arm (dynamics.state_helpers.commandarray attribute)": [[14, "dynamics.state_helpers.CommandArray.arm"]], "arm (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.arm"]], "arm_vel (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.arm_vel"]], "as_dict() (dynamics.state_helpers.commandarray class method)": [[14, "dynamics.state_helpers.CommandArray.as_dict"]], "base_ang_vel (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.base_ang_vel"]], "base_height (dynamics.state_helpers.commandarray attribute)": [[14, "dynamics.state_helpers.CommandArray.base_height"]], "base_lin_vel (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.base_lin_vel"]], "base_pitch (dynamics.state_helpers.commandarray attribute)": [[14, "dynamics.state_helpers.CommandArray.base_pitch"]], "base_quat (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.base_quat"]], "base_roll (dynamics.state_helpers.commandarray attribute)": [[14, "dynamics.state_helpers.CommandArray.base_roll"]], "create() (dynamics.state_helpers.commandarray class method)": [[14, "dynamics.state_helpers.CommandArray.create"]], "dynamics.state_helpers": [[14, "module-dynamics.state_helpers"]], "fl_leg (dynamics.state_helpers.commandarray attribute)": [[14, "dynamics.state_helpers.CommandArray.fl_leg"]], "fl_leg (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.fl_leg"]], "fl_leg_vel (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.fl_leg_vel"]], "fngr_object (dynamics.state_helpers.sensorarray attribute)": [[14, "dynamics.state_helpers.SensorArray.fngr_object"]], "fr_leg (dynamics.state_helpers.commandarray attribute)": [[14, "dynamics.state_helpers.CommandArray.fr_leg"]], "fr_leg (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.fr_leg"]], "fr_leg_vel (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.fr_leg_vel"]], "hl_leg (dynamics.state_helpers.commandarray attribute)": [[14, "dynamics.state_helpers.CommandArray.hl_leg"]], "hl_leg (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.hl_leg"]], "hl_leg_vel (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.hl_leg_vel"]], "hr_leg (dynamics.state_helpers.commandarray attribute)": [[14, "dynamics.state_helpers.CommandArray.hr_leg"]], "hr_leg (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.hr_leg"]], "hr_leg_vel (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.hr_leg_vel"]], "lateral_vel (dynamics.state_helpers.commandarray attribute)": [[14, "dynamics.state_helpers.CommandArray.lateral_vel"]], "legs (dynamics.state_helpers.commandarray attribute)": [[14, "dynamics.state_helpers.CommandArray.legs"]], "legs (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.legs"]], "legs_vel (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.legs_vel"]], "non_velocities (dynamics.state_helpers.commandarray attribute)": [[14, "dynamics.state_helpers.CommandArray.non_velocities"]], "object_ang_vel (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.object_ang_vel"]], "object_lin_vel (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.object_lin_vel"]], "object_pos (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.object_pos"]], "object_quat (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.object_quat"]], "object_y_axis (dynamics.state_helpers.sensorarray attribute)": [[14, "dynamics.state_helpers.SensorArray.object_y_axis"]], "set_defaults() (dynamics.state_helpers.commandarray class method)": [[14, "dynamics.state_helpers.CommandArray.set_defaults"]], "size (dynamics.state_helpers.commandarray attribute)": [[14, "dynamics.state_helpers.CommandArray.size"]], "size (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.size"]], "slice_union() (in module dynamics.state_helpers)": [[14, "dynamics.state_helpers.slice_union"]], "trace_body (dynamics.state_helpers.sensorarray attribute)": [[14, "dynamics.state_helpers.SensorArray.trace_body"]], "trace_gripper (dynamics.state_helpers.sensorarray attribute)": [[14, "dynamics.state_helpers.SensorArray.trace_gripper"]], "update() (dynamics.state_helpers.commandarray class method)": [[14, "dynamics.state_helpers.CommandArray.update"]], "velocities (dynamics.state_helpers.commandarray attribute)": [[14, "dynamics.state_helpers.CommandArray.velocities"]], "yaw_vel (dynamics.state_helpers.commandarray attribute)": [[14, "dynamics.state_helpers.CommandArray.yaw_vel"]], "dexterityenv (class in environments.base)": [[15, "environments.base.DexterityEnv"]], "__post_init__() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.__post_init__"]], "action_space (environments.base.dexterityenv property)": [[15, "environments.base.DexterityEnv.action_space"]], "check_failure() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.check_failure"]], "check_success() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.check_success"]], "close() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.close"]], "environments.base": [[15, "module-environments.base"]], "get_metrics() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.get_metrics"]], "metrics_keys (environments.base.dexterityenv property)": [[15, "environments.base.DexterityEnv.metrics_keys"]], "params (environments.base.dexterityenv attribute)": [[15, "environments.base.DexterityEnv.params"]], "post_physics_step() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.post_physics_step"]], "preserve_reset_obs() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.preserve_reset_obs"]], "process_resets() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.process_resets"]], "reset() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.reset"]], "reset_ixs() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.reset_ixs"]], "reset_states() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.reset_states"]], "scale_actions() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.scale_actions"]], "set_current_states() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.set_current_states"]], "set_goal_states() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.set_goal_states"]], "set_previous_end_actions() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.set_previous_end_actions"]], "set_start_states() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.set_start_states"]], "setup_action_processor() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.setup_action_processor"]], "setup_buffers() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.setup_buffers"]], "setup_plant() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.setup_plant"]], "step() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.step"]], "step_sim() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.step_sim"]], "task_rewards() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.task_rewards"]], "uniform_random_action() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.uniform_random_action"]], "update_info() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.update_info"]], "update_joint_targets() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.update_joint_targets"]], "update_obs() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.update_obs"]], "update_rewards() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.update_rewards"]], "update_terminations() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.update_terminations"]], "environments": [[16, "module-environments"]], "spotarmik (class in environments.tire_state_cache_generator)": [[17, "environments.tire_state_cache_generator.SpotArmIK"]], "tiregeneratorconfig (class in environments.tire_state_cache_generator)": [[17, "environments.tire_state_cache_generator.TireGeneratorConfig"]], "tirestatecachegenerator (class in environments.tire_state_cache_generator)": [[17, "environments.tire_state_cache_generator.TireStateCacheGenerator"]], "__post_init__() (environments.tire_state_cache_generator.spotarmik method)": [[17, "environments.tire_state_cache_generator.SpotArmIK.__post_init__"]], "__post_init__() (environments.tire_state_cache_generator.tirestatecachegenerator method)": [[17, "environments.tire_state_cache_generator.TireStateCacheGenerator.__post_init__"]], "actuated_pos (environments.tire_state_cache_generator.spotarmik attribute)": [[17, "environments.tire_state_cache_generator.SpotArmIK.actuated_pos"]], "angular_velocity_range (environments.tire_state_cache_generator.tiregeneratorconfig attribute)": [[17, "environments.tire_state_cache_generator.TireGeneratorConfig.angular_velocity_range"]], "cache_size (environments.tire_state_cache_generator.tiregeneratorconfig attribute)": [[17, "environments.tire_state_cache_generator.TireGeneratorConfig.cache_size"]], "config (environments.tire_state_cache_generator.tirestatecachegenerator attribute)": [[17, "environments.tire_state_cache_generator.TireStateCacheGenerator.config"]], "damping (environments.tire_state_cache_generator.spotarmik attribute)": [[17, "environments.tire_state_cache_generator.SpotArmIK.damping"]], "default_base_pose (environments.tire_state_cache_generator.tirestatecachegenerator property)": [[17, "environments.tire_state_cache_generator.TireStateCacheGenerator.default_base_pose"]], "default_velocities (environments.tire_state_cache_generator.tirestatecachegenerator property)": [[17, "environments.tire_state_cache_generator.TireStateCacheGenerator.default_velocities"]], "distance_range (environments.tire_state_cache_generator.tiregeneratorconfig attribute)": [[17, "environments.tire_state_cache_generator.TireGeneratorConfig.distance_range"]], "enable_orientation_control (environments.tire_state_cache_generator.spotarmik attribute)": [[17, "environments.tire_state_cache_generator.SpotArmIK.enable_orientation_control"]], "enable_rendering (environments.tire_state_cache_generator.tiregeneratorconfig attribute)": [[17, "environments.tire_state_cache_generator.TireGeneratorConfig.enable_rendering"]], "environments.tire_state_cache_generator": [[17, "module-environments.tire_state_cache_generator"]], "generate_cache() (environments.tire_state_cache_generator.tirestatecachegenerator method)": [[17, "environments.tire_state_cache_generator.TireStateCacheGenerator.generate_cache"]], "integration_dt (environments.tire_state_cache_generator.spotarmik attribute)": [[17, "environments.tire_state_cache_generator.SpotArmIK.integration_dt"]], "linear_velocity_range (environments.tire_state_cache_generator.tiregeneratorconfig attribute)": [[17, "environments.tire_state_cache_generator.TireGeneratorConfig.linear_velocity_range"]], "max_iterations (environments.tire_state_cache_generator.spotarmik attribute)": [[17, "environments.tire_state_cache_generator.SpotArmIK.max_iterations"]], "max_no_progress_steps (environments.tire_state_cache_generator.spotarmik attribute)": [[17, "environments.tire_state_cache_generator.SpotArmIK.max_no_progress_steps"]], "object_z (environments.tire_state_cache_generator.tiregeneratorconfig attribute)": [[17, "environments.tire_state_cache_generator.TireGeneratorConfig.object_z"]], "orientation_tolerance (environments.tire_state_cache_generator.spotarmik attribute)": [[17, "environments.tire_state_cache_generator.SpotArmIK.orientation_tolerance"]], "params (environments.tire_state_cache_generator.spotarmik attribute)": [[17, "environments.tire_state_cache_generator.SpotArmIK.params"]], "position_tolerance (environments.tire_state_cache_generator.spotarmik attribute)": [[17, "environments.tire_state_cache_generator.SpotArmIK.position_tolerance"]], "progress_threshold (environments.tire_state_cache_generator.spotarmik attribute)": [[17, "environments.tire_state_cache_generator.SpotArmIK.progress_threshold"]], "radius_range (environments.tire_state_cache_generator.tiregeneratorconfig attribute)": [[17, "environments.tire_state_cache_generator.TireGeneratorConfig.radius_range"]], "randomize_velocity (environments.tire_state_cache_generator.tiregeneratorconfig attribute)": [[17, "environments.tire_state_cache_generator.TireGeneratorConfig.randomize_velocity"]], "set_floating_spot_cache() (environments.tire_state_cache_generator.tirestatecachegenerator method)": [[17, "environments.tire_state_cache_generator.TireStateCacheGenerator.set_floating_spot_cache"]], "solve() (environments.tire_state_cache_generator.spotarmik method)": [[17, "environments.tire_state_cache_generator.SpotArmIK.solve"]], "task_name (environments.tire_state_cache_generator.tirestatecachegenerator attribute)": [[17, "environments.tire_state_cache_generator.TireStateCacheGenerator.task_name"]], "expert (class in experts.expert)": [[18, "experts.expert.Expert"]], "experts.expert": [[18, "module-experts.expert"]], "expertsampler (class in experts.expert_sampler)": [[19, "experts.expert_sampler.ExpertSampler"]], "experts.expert_sampler": [[19, "module-experts.expert_sampler"]], "experts": [[20, "module-experts"]], "networksampler (class in experts.network)": [[21, "experts.network.NetworkSampler"]], "experts.network": [[21, "module-experts.network"]], "primitivesampler (class in experts.primitive)": [[22, "experts.primitive.PrimitiveSampler"]], "compute_low_level_actions() (experts.primitive.primitivesampler method)": [[22, "experts.primitive.PrimitiveSampler.compute_low_level_actions"]], "experts.primitive": [[22, "module-experts.primitive"]], "reset() (experts.primitive.primitivesampler method)": [[22, "experts.primitive.PrimitiveSampler.reset"]], "experts.primitives": [[23, "module-experts.primitives"]], "compute_grasp_actions() (in module experts.primitives.spot_standing_box)": [[24, "experts.primitives.spot_standing_box.compute_grasp_actions"]], "compute_grasp_pose_for_handle_top() (in module experts.primitives.spot_standing_box)": [[24, "experts.primitives.spot_standing_box.compute_grasp_pose_for_handle_top"]], "experts.primitives.spot_standing_box": [[24, "module-experts.primitives.spot_standing_box"]], "spot_ik_mujoco() (in module experts.primitives.spot_standing_box)": [[24, "experts.primitives.spot_standing_box.spot_ik_mujoco"]], "learning": [[25, "module-learning"]], "learner (class in learning.learner)": [[26, "learning.learner.Learner"]], "__post_init__() (learning.learner.learner method)": [[26, "learning.learner.Learner.__post_init__"]], "actor_actions() (learning.learner.learner method)": [[26, "learning.learner.Learner.actor_actions"]], "eval_agent() (learning.learner.learner method)": [[26, "learning.learner.Learner.eval_agent"]], "graph (learning.learner.learner attribute)": [[26, "learning.learner.Learner.graph"]], "graph_rollout() (learning.learner.learner method)": [[26, "learning.learner.Learner.graph_rollout"]], "learning.learner": [[26, "module-learning.learner"]], "load_cloud (learning.learner.learner attribute)": [[26, "learning.learner.Learner.load_cloud"]], "load_local (learning.learner.learner attribute)": [[26, "learning.learner.Learner.load_local"]], "load_models() (learning.learner.learner method)": [[26, "learning.learner.Learner.load_models"]], "params (learning.learner.learner attribute)": [[26, "learning.learner.Learner.params"]], "policy_rollout() (learning.learner.learner method)": [[26, "learning.learner.Learner.policy_rollout"]], "preprocess_sample() (learning.learner.learner method)": [[26, "learning.learner.Learner.preprocess_sample"]], "relative_distances_to() (learning.learner.learner method)": [[26, "learning.learner.Learner.relative_distances_to"]], "replay_buffer (learning.learner.learner attribute)": [[26, "learning.learner.Learner.replay_buffer"]], "reset() (learning.learner.learner method)": [[26, "learning.learner.Learner.reset"]], "reward_function() (learning.learner.learner method)": [[26, "learning.learner.Learner.reward_function"]], "save_cloud (learning.learner.learner attribute)": [[26, "learning.learner.Learner.save_cloud"]], "save_local (learning.learner.learner attribute)": [[26, "learning.learner.Learner.save_local"]], "save_models() (learning.learner.learner method)": [[26, "learning.learner.Learner.save_models"]], "set_demonstration_injection() (learning.learner.learner method)": [[26, "learning.learner.Learner.set_demonstration_injection"]], "train() (learning.learner.learner method)": [[26, "learning.learner.Learner.train"]], "train_actor_critic() (learning.learner.learner method)": [[26, "learning.learner.Learner.train_actor_critic"]], "update_norm() (learning.learner.learner method)": [[26, "learning.learner.Learner.update_norm"]], "verbose (learning.learner.learner attribute)": [[26, "learning.learner.Learner.verbose"]], "actor (class in learning.networks)": [[27, "learning.networks.Actor"]], "critic (class in learning.networks)": [[27, "learning.networks.Critic"]], "criticnetwork (class in learning.networks)": [[27, "learning.networks.CriticNetwork"]], "ddp (class in learning.networks)": [[27, "learning.networks.DDP"]], "__call__() (learning.networks.actor method)": [[27, "learning.networks.Actor.__call__"]], "backward_step() (learning.networks.actor method)": [[27, "learning.networks.Actor.backward_step"]], "backward_step() (learning.networks.critic method)": [[27, "learning.networks.Critic.backward_step"]], "eval() (learning.networks.actor method)": [[27, "learning.networks.Actor.eval"]], "learning.networks": [[27, "module-learning.networks"]], "load() (learning.networks.actor method)": [[27, "learning.networks.Actor.load"]], "load() (learning.networks.critic method)": [[27, "learning.networks.Critic.load"]], "save() (learning.networks.actor method)": [[27, "learning.networks.Actor.save"]], "save() (learning.networks.critic method)": [[27, "learning.networks.Critic.save"]], "soft_update() (in module learning.networks)": [[27, "learning.networks.soft_update"]], "target() (learning.networks.actor method)": [[27, "learning.networks.Actor.target"]], "target() (learning.networks.critic method)": [[27, "learning.networks.Critic.target"]], "train() (learning.networks.actor method)": [[27, "learning.networks.Actor.train"]], "update_target() (learning.networks.actor method)": [[27, "learning.networks.Actor.update_target"]], "update_target() (learning.networks.critic method)": [[27, "learning.networks.Critic.update_target"]], "normalizer (class in learning.normalizer)": [[28, "learning.normalizer.Normalizer"]], "learning.normalizer": [[28, "module-learning.normalizer"]], "load() (learning.normalizer.normalizer method)": [[28, "learning.normalizer.Normalizer.load"]], "normalize() (learning.normalizer.normalizer method)": [[28, "learning.normalizer.Normalizer.normalize"]], "normalize_obs() (learning.normalizer.normalizer method)": [[28, "learning.normalizer.Normalizer.normalize_obs"]], "save() (learning.normalizer.normalizer method)": [[28, "learning.normalizer.Normalizer.save"]], "update() (learning.normalizer.normalizer method)": [[28, "learning.normalizer.Normalizer.update"]], "replaybuffer (class in learning.replay_buffer)": [[29, "learning.replay_buffer.ReplayBuffer"]], "trajectoryreplaybuffer (class in learning.replay_buffer)": [[29, "learning.replay_buffer.TrajectoryReplayBuffer"]], "__getitem__() (learning.replay_buffer.replaybuffer method)": [[29, "learning.replay_buffer.ReplayBuffer.__getitem__"]], "__post_init__() (learning.replay_buffer.replaybuffer method)": [[29, "learning.replay_buffer.ReplayBuffer.__post_init__"]], "extend() (learning.replay_buffer.replaybuffer method)": [[29, "learning.replay_buffer.ReplayBuffer.extend"]], "learning.replay_buffer": [[29, "module-learning.replay_buffer"]], "reset() (learning.replay_buffer.replaybuffer method)": [[29, "learning.replay_buffer.ReplayBuffer.reset"]], "sample() (learning.replay_buffer.replaybuffer method)": [[29, "learning.replay_buffer.ReplayBuffer.sample"]], "sample() (learning.replay_buffer.trajectoryreplaybuffer method)": [[29, "learning.replay_buffer.TrajectoryReplayBuffer.sample"]], "sampler_class (learning.replay_buffer.replaybuffer attribute)": [[29, "learning.replay_buffer.ReplayBuffer.sampler_class"]], "setup_buffer() (learning.replay_buffer.replaybuffer method)": [[29, "learning.replay_buffer.ReplayBuffer.setup_buffer"]], "setup_buffer() (learning.replay_buffer.trajectoryreplaybuffer method)": [[29, "learning.replay_buffer.TrajectoryReplayBuffer.setup_buffer"]], "setup_sampler() (learning.replay_buffer.replaybuffer method)": [[29, "learning.replay_buffer.ReplayBuffer.setup_sampler"]], "setup_storage() (learning.replay_buffer.replaybuffer method)": [[29, "learning.replay_buffer.ReplayBuffer.setup_storage"]], "storage_class (learning.replay_buffer.replaybuffer attribute)": [[29, "learning.replay_buffer.ReplayBuffer.storage_class"]], "default_best_spline_color (in module model)": [[30, "model.DEFAULT_BEST_SPLINE_COLOR"]], "default_grid_cell_color (in module model)": [[30, "model.DEFAULT_GRID_CELL_COLOR"]], "default_grid_section_color (in module model)": [[30, "model.DEFAULT_GRID_SECTION_COLOR"]], "default_sphere_subdivisions (in module model)": [[30, "model.DEFAULT_SPHERE_SUBDIVISIONS"]], "default_spline_color (in module model)": [[30, "model.DEFAULT_SPLINE_COLOR"]], "visermjmodel (class in model)": [[30, "model.ViserMjModel"]], "add_box() (in module model)": [[30, "model.add_box"]], "add_capsule() (in module model)": [[30, "model.add_capsule"]], "add_cylinder() (in module model)": [[30, "model.add_cylinder"]], "add_ellipsoid() (in module model)": [[30, "model.add_ellipsoid"]], "add_geom() (model.visermjmodel method)": [[30, "model.ViserMjModel.add_geom"]], "add_mesh() (in module model)": [[30, "model.add_mesh"]], "add_plane() (in module model)": [[30, "model.add_plane"]], "add_segments() (in module model)": [[30, "model.add_segments"]], "add_sphere() (in module model)": [[30, "model.add_sphere"]], "add_spline() (in module model)": [[30, "model.add_spline"]], "add_traces() (model.visermjmodel method)": [[30, "model.ViserMjModel.add_traces"]], "model": [[30, "module-model"]], "remove() (model.visermjmodel method)": [[30, "model.ViserMjModel.remove"]], "remove_traces() (model.visermjmodel method)": [[30, "model.ViserMjModel.remove_traces"]], "rgba_float_to_int() (in module model)": [[30, "model.rgba_float_to_int"]], "rgba_int_to_float() (in module model)": [[30, "model.rgba_int_to_float"]], "set_data() (model.visermjmodel method)": [[30, "model.ViserMjModel.set_data"]], "set_mesh_color() (in module model)": [[30, "model.set_mesh_color"]], "set_segment_points() (in module model)": [[30, "model.set_segment_points"]], "set_spline_positions() (in module model)": [[30, "model.set_spline_positions"]], "set_traces() (model.visermjmodel method)": [[30, "model.ViserMjModel.set_traces"]], "mppi (class in mppi)": [[31, "mppi.MPPI"]], "mppiconfig (class in mppi)": [[31, "mppi.MPPIConfig"]], "action() (mppi.mppi method)": [[31, "mppi.MPPI.action"]], "mppi": [[31, "module-mppi"]], "temperature (mppi.mppiconfig attribute)": [[31, "mppi.MPPIConfig.temperature"]], "update_action() (mppi.mppi method)": [[31, "mppi.MPPI.update_action"]], "mujocoplant (class in mujoco_dynamics.dynamics)": [[32, "mujoco_dynamics.dynamics.MujocoPlant"]], "mujoco_dynamics.dynamics": [[32, "module-mujoco_dynamics.dynamics"]], "mujoco_dynamics": [[33, "module-mujoco_dynamics"]], "iksolver (class in mujoco_dynamics.kinematics)": [[34, "mujoco_dynamics.kinematics.IkSolver"]], "__post_init__() (mujoco_dynamics.kinematics.iksolver method)": [[34, "mujoco_dynamics.kinematics.IkSolver.__post_init__"]], "configuration (mujoco_dynamics.kinematics.iksolver property)": [[34, "mujoco_dynamics.kinematics.IkSolver.configuration"]], "configuration_limit (mujoco_dynamics.kinematics.iksolver property)": [[34, "mujoco_dynamics.kinematics.IkSolver.configuration_limit"]], "damping (mujoco_dynamics.kinematics.iksolver attribute)": [[34, "mujoco_dynamics.kinematics.IkSolver.damping"]], "dt (mujoco_dynamics.kinematics.iksolver attribute)": [[34, "mujoco_dynamics.kinematics.IkSolver.dt"]], "frame_names (mujoco_dynamics.kinematics.iksolver attribute)": [[34, "mujoco_dynamics.kinematics.IkSolver.frame_names"]], "frame_tasks_damping (mujoco_dynamics.kinematics.iksolver attribute)": [[34, "mujoco_dynamics.kinematics.IkSolver.frame_tasks_damping"]], "frame_type (mujoco_dynamics.kinematics.iksolver attribute)": [[34, "mujoco_dynamics.kinematics.IkSolver.frame_type"]], "max_iters (mujoco_dynamics.kinematics.iksolver attribute)": [[34, "mujoco_dynamics.kinematics.IkSolver.max_iters"]], "model (mujoco_dynamics.kinematics.iksolver attribute)": [[34, "mujoco_dynamics.kinematics.IkSolver.model"]], "mujoco_dynamics.kinematics": [[34, "module-mujoco_dynamics.kinematics"]], "ori_threshold (mujoco_dynamics.kinematics.iksolver attribute)": [[34, "mujoco_dynamics.kinematics.IkSolver.ori_threshold"]], "orientation_cost (mujoco_dynamics.kinematics.iksolver attribute)": [[34, "mujoco_dynamics.kinematics.IkSolver.orientation_cost"]], "pos_threshold (mujoco_dynamics.kinematics.iksolver attribute)": [[34, "mujoco_dynamics.kinematics.IkSolver.pos_threshold"]], "position_cost (mujoco_dynamics.kinematics.iksolver attribute)": [[34, "mujoco_dynamics.kinematics.IkSolver.position_cost"]], "posture_cost (mujoco_dynamics.kinematics.iksolver attribute)": [[34, "mujoco_dynamics.kinematics.IkSolver.posture_cost"]], "set_target_pose() (mujoco_dynamics.kinematics.iksolver method)": [[34, "mujoco_dynamics.kinematics.IkSolver.set_target_pose"]], "solve() (mujoco_dynamics.kinematics.iksolver method)": [[34, "mujoco_dynamics.kinematics.IkSolver.solve"]], "solver (mujoco_dynamics.kinematics.iksolver attribute)": [[34, "mujoco_dynamics.kinematics.IkSolver.solver"]], "count_trace_sensors() (in module mujoco_dynamics.utils)": [[35, "mujoco_dynamics.utils.count_trace_sensors"]], "get_mesh_data() (in module mujoco_dynamics.utils)": [[35, "mujoco_dynamics.utils.get_mesh_data"]], "get_sensor_name() (in module mujoco_dynamics.utils)": [[35, "mujoco_dynamics.utils.get_sensor_name"]], "get_trace_sensors() (in module mujoco_dynamics.utils)": [[35, "mujoco_dynamics.utils.get_trace_sensors"]], "is_trace_sensor() (in module mujoco_dynamics.utils)": [[35, "mujoco_dynamics.utils.is_trace_sensor"]], "mujoco_dynamics.utils": [[35, "module-mujoco_dynamics.utils"]], "set_mocap_pose() (in module mujoco_dynamics.utils)": [[35, "mujoco_dynamics.utils.set_mocap_pose"]], "set_mocap_poses() (in module mujoco_dynamics.utils)": [[35, "mujoco_dynamics.utils.set_mocap_poses"]], "set_state() (in module mujoco_dynamics.utils)": [[35, "mujoco_dynamics.utils.set_state"]], "visualize_state() (in module mujoco_dynamics.utils)": [[35, "mujoco_dynamics.utils.visualize_state"]], "visualize_trajectory() (in module mujoco_dynamics.utils)": [[35, "mujoco_dynamics.utils.visualize_trajectory"]], "particlefilter (class in particle_filter)": [[36, "particle_filter.ParticleFilter"]], "particlefilterconfig (class in particle_filter)": [[36, "particle_filter.ParticleFilterConfig"]], "action() (particle_filter.particlefilter method)": [[36, "particle_filter.ParticleFilter.action"]], "particle_filter": [[36, "module-particle_filter"]], "temperature (particle_filter.particlefilterconfig attribute)": [[36, "particle_filter.ParticleFilterConfig.temperature"]], "update_action() (particle_filter.particlefilter method)": [[36, "particle_filter.ParticleFilter.update_action"]], "get_package_path() (in module path_resolvers)": [[37, "path_resolvers.get_package_path"]], "path_resolvers": [[37, "module-path_resolvers"]], "actionprocessor (class in planner.action_processor)": [[38, "planner.action_processor.ActionProcessor"]], "spotfloatingactionprocessor (class in planner.action_processor)": [[38, "planner.action_processor.SpotFloatingActionProcessor"]], "spotwholebodyactionprocessor (class in planner.action_processor)": [[38, "planner.action_processor.SpotWholebodyActionProcessor"]], "__call__() (planner.action_processor.actionprocessor method)": [[38, "planner.action_processor.ActionProcessor.__call__"]], "actuated_pos (planner.action_processor.actionprocessor attribute)": [[38, "planner.action_processor.ActionProcessor.actuated_pos"]], "arm_action_ixs (planner.action_processor.spotfloatingactionprocessor attribute)": [[38, "planner.action_processor.SpotFloatingActionProcessor.arm_action_ixs"]], "arm_action_ixs (planner.action_processor.spotwholebodyactionprocessor attribute)": [[38, "planner.action_processor.SpotWholebodyActionProcessor.arm_action_ixs"]], "arm_state_ixs (planner.action_processor.spotwholebodyactionprocessor attribute)": [[38, "planner.action_processor.SpotWholebodyActionProcessor.arm_state_ixs"]], "base_action_to_egocentric() (planner.action_processor.spotfloatingactionprocessor method)": [[38, "planner.action_processor.SpotFloatingActionProcessor.base_action_to_egocentric"]], "clip_base_actions() (planner.action_processor.spotfloatingactionprocessor method)": [[38, "planner.action_processor.SpotFloatingActionProcessor.clip_base_actions"]], "get_action_trajectories() (planner.action_processor.actionprocessor method)": [[38, "planner.action_processor.ActionProcessor.get_action_trajectories"]], "get_action_trajectories() (planner.action_processor.spotwholebodyactionprocessor method)": [[38, "planner.action_processor.SpotWholebodyActionProcessor.get_action_trajectories"]], "get_actuated_states() (planner.action_processor.actionprocessor method)": [[38, "planner.action_processor.ActionProcessor.get_actuated_states"]], "get_actuated_states() (planner.action_processor.spotwholebodyactionprocessor method)": [[38, "planner.action_processor.SpotWholebodyActionProcessor.get_actuated_states"]], "get_end_actions() (planner.action_processor.actionprocessor method)": [[38, "planner.action_processor.ActionProcessor.get_end_actions"]], "get_end_actions() (planner.action_processor.spotfloatingactionprocessor method)": [[38, "planner.action_processor.SpotFloatingActionProcessor.get_end_actions"]], "get_start_actions() (planner.action_processor.actionprocessor method)": [[38, "planner.action_processor.ActionProcessor.get_start_actions"]], "get_start_actions() (planner.action_processor.spotwholebodyactionprocessor method)": [[38, "planner.action_processor.SpotWholebodyActionProcessor.get_start_actions"]], "planner.action_processor": [[38, "module-planner.action_processor"]], "actionsampler (class in planner.action_sampler)": [[39, "planner.action_sampler.ActionSampler"]], "__call__() (planner.action_sampler.actionsampler method)": [[39, "planner.action_sampler.ActionSampler.__call__"]], "continuation_directions() (planner.action_sampler.actionsampler method)": [[39, "planner.action_sampler.ActionSampler.continuation_directions"]], "directions_actions() (planner.action_sampler.actionsampler method)": [[39, "planner.action_sampler.ActionSampler.directions_actions"]], "goal_directions() (planner.action_sampler.actionsampler method)": [[39, "planner.action_sampler.ActionSampler.goal_directions"]], "initialize() (planner.action_sampler.actionsampler method)": [[39, "planner.action_sampler.ActionSampler.initialize"]], "planner.action_sampler": [[39, "module-planner.action_sampler"]], "proximity_directions() (planner.action_sampler.actionsampler method)": [[39, "planner.action_sampler.ActionSampler.proximity_directions"]], "random_directions() (planner.action_sampler.actionsampler method)": [[39, "planner.action_sampler.ActionSampler.random_directions"]], "box_scaling() (in module planner.clipping_method)": [[40, "planner.clipping_method.box_scaling"]], "clip_actions() (in module planner.clipping_method)": [[40, "planner.clipping_method.clip_actions"]], "planner.clipping_method": [[40, "module-planner.clipping_method"]], "find_latest_model_path() (in module planner.data_collection)": [[41, "planner.data_collection.find_latest_model_path"]], "load_model() (in module planner.data_collection)": [[41, "planner.data_collection.load_model"]], "load_tensor() (in module planner.data_collection)": [[41, "planner.data_collection.load_tensor"]], "planner.data_collection": [[41, "module-planner.data_collection"]], "save_model() (in module planner.data_collection)": [[41, "planner.data_collection.save_model"]], "save_tensor() (in module planner.data_collection)": [[41, "planner.data_collection.save_tensor"]], "graph (class in planner.graph)": [[42, "planner.graph.Graph"]], "activate_all_nodes() (planner.graph.graph method)": [[42, "planner.graph.Graph.activate_all_nodes"]], "add_child_ids_to_node() (planner.graph.graph method)": [[42, "planner.graph.Graph.add_child_ids_to_node"]], "add_nodes() (planner.graph.graph method)": [[42, "planner.graph.Graph.add_nodes"]], "add_total_rewards() (planner.graph.graph method)": [[42, "planner.graph.Graph.add_total_rewards"]], "calculate_distance_rewards() (planner.graph.graph method)": [[42, "planner.graph.Graph.calculate_distance_rewards"]], "calculate_proximity_rewards() (planner.graph.graph method)": [[42, "planner.graph.Graph.calculate_proximity_rewards"]], "calculate_reachability_rewards() (planner.graph.graph method)": [[42, "planner.graph.Graph.calculate_reachability_rewards"]], "change_sub_goal_states() (planner.graph.graph method)": [[42, "planner.graph.Graph.change_sub_goal_states"]], "check_for_early_termination() (planner.graph.graph method)": [[42, "planner.graph.Graph.check_for_early_termination"]], "deactivate_nodes() (planner.graph.graph method)": [[42, "planner.graph.Graph.deactivate_nodes"]], "destroy() (planner.graph.graph method)": [[42, "planner.graph.Graph.destroy"]], "get_active_main_ids() (planner.graph.graph method)": [[42, "planner.graph.Graph.get_active_main_ids"]], "get_best_id() (planner.graph.graph method)": [[42, "planner.graph.Graph.get_best_id"]], "get_root_ids() (planner.graph.graph method)": [[42, "planner.graph.Graph.get_root_ids"]], "is_better_than() (planner.graph.graph method)": [[42, "planner.graph.Graph.is_better_than"]], "is_worse_than() (planner.graph.graph method)": [[42, "planner.graph.Graph.is_worse_than"]], "load() (planner.graph.graph method)": [[42, "planner.graph.Graph.load"]], "number_of_nodes() (planner.graph.graph method)": [[42, "planner.graph.Graph.number_of_nodes"]], "planner.graph": [[42, "module-planner.graph"]], "reachability_cache() (planner.graph.graph method)": [[42, "planner.graph.Graph.reachability_cache"]], "reset() (planner.graph.graph method)": [[42, "planner.graph.Graph.reset"]], "reset_sub_goal_states() (planner.graph.graph method)": [[42, "planner.graph.Graph.reset_sub_goal_states"]], "sample_feasible_states() (in module planner.graph)": [[42, "planner.graph.sample_feasible_states"]], "sample_random_goal_states() (in module planner.graph)": [[42, "planner.graph.sample_random_goal_states"]], "sample_random_start_states() (in module planner.graph)": [[42, "planner.graph.sample_random_start_states"]], "sample_random_states() (in module planner.graph)": [[42, "planner.graph.sample_random_states"]], "sample_random_sub_goal_states() (in module planner.graph)": [[42, "planner.graph.sample_random_sub_goal_states"]], "sample_related_sub_goal_states() (in module planner.graph)": [[42, "planner.graph.sample_related_sub_goal_states"]], "save() (planner.graph.graph method)": [[42, "planner.graph.Graph.save"]], "set_goal_state() (planner.graph.graph method)": [[42, "planner.graph.Graph.set_goal_state"]], "set_start_states() (planner.graph.graph method)": [[42, "planner.graph.Graph.set_start_states"]], "shortest_path_to() (planner.graph.graph method)": [[42, "planner.graph.Graph.shortest_path_to"]], "sorted_progress_ids() (planner.graph.graph method)": [[42, "planner.graph.Graph.sorted_progress_ids"]], "color_gradient() (in module planner.graph_visuals)": [[43, "planner.graph_visuals.color_gradient"]], "display_3d_graph() (in module planner.graph_visuals)": [[43, "planner.graph_visuals.display_3d_graph"]], "display_colormap_point_cloud() (in module planner.graph_visuals)": [[43, "planner.graph_visuals.display_colormap_point_cloud"]], "display_point_cloud() (in module planner.graph_visuals)": [[43, "planner.graph_visuals.display_point_cloud"]], "display_segments() (in module planner.graph_visuals)": [[43, "planner.graph_visuals.display_segments"]], "display_segments_by_category() (in module planner.graph_visuals)": [[43, "planner.graph_visuals.display_segments_by_category"]], "planner.graph_visuals": [[43, "module-planner.graph_visuals"]], "rgba_palette() (in module planner.graph_visuals)": [[43, "planner.graph_visuals.rgba_palette"]], "commongoalworkerinterface (class in planner.graph_worker)": [[44, "planner.graph_worker.CommonGoalWorkerInterface"]], "explorerworker (class in planner.graph_worker)": [[44, "planner.graph_worker.ExplorerWorker"]], "graphworker (class in planner.graph_worker)": [[44, "planner.graph_worker.GraphWorker"]], "parallelgoalsworker (class in planner.graph_worker)": [[44, "planner.graph_worker.ParallelGoalsWorker"]], "relatedgoalworker (class in planner.graph_worker)": [[44, "planner.graph_worker.RelatedGoalWorker"]], "rolloutworker (class in planner.graph_worker)": [[44, "planner.graph_worker.RolloutWorker"]], "singlegoalworker (class in planner.graph_worker)": [[44, "planner.graph_worker.SingleGoalWorker"]], "callback_and_progress_check() (planner.graph_worker.graphworker method)": [[44, "planner.graph_worker.GraphWorker.callback_and_progress_check"]], "get_progress_info() (planner.graph_worker.graphworker method)": [[44, "planner.graph_worker.GraphWorker.get_progress_info"]], "inspect_action_type() (in module planner.graph_worker)": [[44, "planner.graph_worker.inspect_action_type"]], "node_extension() (planner.graph_worker.graphworker method)": [[44, "planner.graph_worker.GraphWorker.node_extension"]], "node_pruning() (planner.graph_worker.graphworker method)": [[44, "planner.graph_worker.GraphWorker.node_pruning"]], "node_replacement() (planner.graph_worker.graphworker method)": [[44, "planner.graph_worker.GraphWorker.node_replacement"]], "node_selection() (planner.graph_worker.graphworker method)": [[44, "planner.graph_worker.GraphWorker.node_selection"]], "pareto_distribution() (in module planner.graph_worker)": [[44, "planner.graph_worker.pareto_distribution"]], "percentage_range() (planner.graph_worker.graphworker method)": [[44, "planner.graph_worker.GraphWorker.percentage_range"]], "planner.graph_worker": [[44, "module-planner.graph_worker"]], "reset_finished_workers() (planner.graph_worker.parallelgoalsworker method)": [[44, "planner.graph_worker.ParallelGoalsWorker.reset_finished_workers"]], "update_extension_lengths() (planner.graph_worker.parallelgoalsworker method)": [[44, "planner.graph_worker.ParallelGoalsWorker.update_extension_lengths"]], "update_pareto_parameters() (planner.graph_worker.parallelgoalsworker method)": [[44, "planner.graph_worker.ParallelGoalsWorker.update_pareto_parameters"]], "work() (planner.graph_worker.parallelgoalsworker method)": [[44, "planner.graph_worker.ParallelGoalsWorker.work"]], "planner": [[45, "module-planner"]], "einsum_ij_ij_i() (in module planner.linear_algebra)": [[46, "planner.linear_algebra.einsum_ij_ij_i"]], "einsum_ij_kj_ki() (in module planner.linear_algebra)": [[46, "planner.linear_algebra.einsum_ij_kj_ki"]], "einsum_ijk_ik_ij() (in module planner.linear_algebra)": [[46, "planner.linear_algebra.einsum_ijk_ik_ij"]], "einsum_ijk_ikl_ijl() (in module planner.linear_algebra)": [[46, "planner.linear_algebra.einsum_ijk_ikl_ijl"]], "einsum_ijk_ilk_ijl() (in module planner.linear_algebra)": [[46, "planner.linear_algebra.einsum_ijk_ilk_ijl"]], "einsum_ikj_ik_ij() (in module planner.linear_algebra)": [[46, "planner.linear_algebra.einsum_ikj_ik_ij"]], "einsum_ikj_ikl_ijl() (in module planner.linear_algebra)": [[46, "planner.linear_algebra.einsum_ikj_ikl_ijl"]], "einsum_jk_ikl_ijl() (in module planner.linear_algebra)": [[46, "planner.linear_algebra.einsum_jk_ikl_ijl"]], "gram_schmidt() (in module planner.linear_algebra)": [[46, "planner.linear_algebra.gram_schmidt"]], "max_scaling() (in module planner.linear_algebra)": [[46, "planner.linear_algebra.max_scaling"]], "normalize() (in module planner.linear_algebra)": [[46, "planner.linear_algebra.normalize"]], "normalize_multiple() (in module planner.linear_algebra)": [[46, "planner.linear_algebra.normalize_multiple"]], "planner.linear_algebra": [[46, "module-planner.linear_algebra"]], "project_v_on_u() (in module planner.linear_algebra)": [[46, "planner.linear_algebra.project_v_on_u"]], "project_vectors_on_eigenspace() (in module planner.linear_algebra)": [[46, "planner.linear_algebra.project_vectors_on_eigenspace"]], "transformation_matrix() (in module planner.linear_algebra)": [[46, "planner.linear_algebra.transformation_matrix"]], "truncpareto_cdf() (in module planner.linear_algebra)": [[46, "planner.linear_algebra.truncpareto_cdf"]], "logger (class in planner.logger)": [[47, "planner.logger.Logger"]], "create_distance_log() (planner.logger.logger method)": [[47, "planner.logger.Logger.create_distance_log"]], "create_reward_log() (planner.logger.logger method)": [[47, "planner.logger.Logger.create_reward_log"]], "get_log_name() (planner.logger.logger method)": [[47, "planner.logger.Logger.get_log_name"]], "log_action_sampler() (planner.logger.logger method)": [[47, "planner.logger.Logger.log_action_sampler"]], "log_node_extension() (planner.logger.logger method)": [[47, "planner.logger.Logger.log_node_extension"]], "log_node_pruning() (planner.logger.logger method)": [[47, "planner.logger.Logger.log_node_pruning"]], "log_node_selection() (planner.logger.logger method)": [[47, "planner.logger.Logger.log_node_selection"]], "log_params() (planner.logger.logger method)": [[47, "planner.logger.Logger.log_params"]], "log_search() (planner.logger.logger method)": [[47, "planner.logger.Logger.log_search"]], "planner.logger": [[47, "module-planner.logger"]], "simple_path_statistics() (planner.logger.logger method)": [[47, "planner.logger.Logger.simple_path_statistics"]], "simple_progress_statistics() (planner.logger.logger method)": [[47, "planner.logger.Logger.simple_progress_statistics"]], "parametercontainer (class in planner.parameter_container)": [[48, "planner.parameter_container.ParameterContainer"]], "__contains__() (planner.parameter_container.parametercontainer method)": [[48, "planner.parameter_container.ParameterContainer.__contains__"]], "__delattr__() (planner.parameter_container.parametercontainer method)": [[48, "planner.parameter_container.ParameterContainer.__delattr__"]], "__getattr__() (planner.parameter_container.parametercontainer method)": [[48, "planner.parameter_container.ParameterContainer.__getattr__"]], "__setattr__() (planner.parameter_container.parametercontainer method)": [[48, "planner.parameter_container.ParameterContainer.__setattr__"]], "__str__() (planner.parameter_container.parametercontainer method)": [[48, "planner.parameter_container.ParameterContainer.__str__"]], "autofill() (planner.parameter_container.parametercontainer method)": [[48, "planner.parameter_container.ParameterContainer.autofill"]], "cache_folder (planner.parameter_container.parametercontainer property)": [[48, "planner.parameter_container.ParameterContainer.cache_folder"]], "concat_list_of_arrays() (planner.parameter_container.parametercontainer method)": [[48, "planner.parameter_container.ParameterContainer.concat_list_of_arrays"]], "data_folder (planner.parameter_container.parametercontainer property)": [[48, "planner.parameter_container.ParameterContainer.data_folder"]], "device (planner.parameter_container.parametercontainer property)": [[48, "planner.parameter_container.ParameterContainer.device"]], "examples_directory (planner.parameter_container.parametercontainer property)": [[48, "planner.parameter_container.ParameterContainer.examples_directory"]], "graph_cache_folder (planner.parameter_container.parametercontainer property)": [[48, "planner.parameter_container.ParameterContainer.graph_cache_folder"]], "list_of_yaml_arrays_to_tensor() (planner.parameter_container.parametercontainer method)": [[48, "planner.parameter_container.ParameterContainer.list_of_yaml_arrays_to_tensor"]], "load_base() (planner.parameter_container.parametercontainer method)": [[48, "planner.parameter_container.ParameterContainer.load_base"]], "load_eigenspaces() (planner.parameter_container.parametercontainer method)": [[48, "planner.parameter_container.ParameterContainer.load_eigenspaces"]], "parse_hardware_parameters() (in module planner.parameter_container)": [[48, "planner.parameter_container.parse_hardware_parameters"]], "planner.parameter_container": [[48, "module-planner.parameter_container"]], "policy_filepath (planner.parameter_container.parametercontainer property)": [[48, "planner.parameter_container.ParameterContainer.policy_filepath"]], "process_scaling() (planner.parameter_container.parametercontainer method)": [[48, "planner.parameter_container.ParameterContainer.process_scaling"]], "reset_seed() (planner.parameter_container.parametercontainer method)": [[48, "planner.parameter_container.ParameterContainer.reset_seed"]], "reward_distance_scaling_sqrt() (planner.parameter_container.parametercontainer method)": [[48, "planner.parameter_container.ParameterContainer.reward_distance_scaling_sqrt"]], "run_autofill_rule() (planner.parameter_container.parametercontainer method)": [[48, "planner.parameter_container.ParameterContainer.run_autofill_rule"]], "set_seed() (planner.parameter_container.parametercontainer method)": [[48, "planner.parameter_container.ParameterContainer.set_seed"]], "state_cache_folder (planner.parameter_container.parametercontainer property)": [[48, "planner.parameter_container.ParameterContainer.state_cache_folder"]], "trajectory_cache_folder (planner.parameter_container.parametercontainer property)": [[48, "planner.parameter_container.ParameterContainer.trajectory_cache_folder"]], "update() (planner.parameter_container.parametercontainer method)": [[48, "planner.parameter_container.ParameterContainer.update"]], "xml_folder (planner.parameter_container.parametercontainer property)": [[48, "planner.parameter_container.ParameterContainer.xml_folder"]], "planner (class in planner.planner)": [[49, "planner.planner.Planner"]], "path_data() (planner.planner.planner method)": [[49, "planner.planner.Planner.path_data"]], "path_trajectory() (planner.planner.planner method)": [[49, "planner.planner.Planner.path_trajectory"]], "planner.planner": [[49, "module-planner.planner"]], "plot_search_results() (planner.planner.planner method)": [[49, "planner.planner.Planner.plot_search_results"]], "search() (planner.planner.planner method)": [[49, "planner.planner.Planner.search"]], "shortest_path_data() (planner.planner.planner method)": [[49, "planner.planner.Planner.shortest_path_data"]], "shortest_path_trajectory() (planner.planner.planner method)": [[49, "planner.planner.Planner.shortest_path_trajectory"]], "is_object_out_of_reach() (in module planner.planner_helpers)": [[50, "planner.planner_helpers.is_object_out_of_reach"]], "is_object_tilted() (in module planner.planner_helpers)": [[50, "planner.planner_helpers.is_object_tilted"]], "planner.planner_helpers": [[50, "module-planner.planner_helpers"]], "torso_too_close_to_object() (in module planner.planner_helpers)": [[50, "planner.planner_helpers.torso_too_close_to_object"]], "absolute_action (planner.types.actionmode attribute)": [[51, "planner.types.ActionMode.ABSOLUTE_ACTION"]], "action_type_directional_map (in module planner.types)": [[51, "planner.types.ACTION_TYPE_DIRECTIONAL_MAP"]], "actionmode (class in planner.types)": [[51, "planner.types.ActionMode"]], "actiontype (class in planner.types)": [[51, "planner.types.ActionType"]], "continuation (planner.types.actiontype attribute)": [[51, "planner.types.ActionType.CONTINUATION"]], "clippingtype (class in planner.types)": [[51, "planner.types.ClippingType"]], "controltype (class in planner.types)": [[51, "planner.types.ControlType"]], "expert (planner.types.actiontype attribute)": [[51, "planner.types.ActionType.EXPERT"]], "first_order_hold (planner.types.controltype attribute)": [[51, "planner.types.ControlType.FIRST_ORDER_HOLD"]], "goal (planner.types.actiontype attribute)": [[51, "planner.types.ActionType.GOAL"]], "last (planner.types.selectiontype attribute)": [[51, "planner.types.SelectionType.LAST"]], "non_expert (planner.types.actiontype attribute)": [[51, "planner.types.ActionType.NON_EXPERT"]], "proximity (planner.types.actiontype attribute)": [[51, "planner.types.ActionType.PROXIMITY"]], "ranged (planner.types.actiontype attribute)": [[51, "planner.types.ActionType.RANGED"]], "relative_to_previous_end_action (planner.types.actionmode attribute)": [[51, "planner.types.ActionMode.RELATIVE_TO_PREVIOUS_END_ACTION"]], "scale (planner.types.clippingtype attribute)": [[51, "planner.types.ClippingType.SCALE"]], "selectiontype (class in planner.types)": [[51, "planner.types.SelectionType"]], "__str__() (planner.types.actionmode method)": [[51, "planner.types.ActionMode.__str__"]], "__str__() (planner.types.actiontype method)": [[51, "planner.types.ActionType.__str__"]], "__str__() (planner.types.clippingtype method)": [[51, "planner.types.ClippingType.__str__"]], "__str__() (planner.types.controltype method)": [[51, "planner.types.ControlType.__str__"]], "__str__() (planner.types.selectiontype method)": [[51, "planner.types.SelectionType.__str__"]], "convert_dtype() (in module planner.types)": [[51, "planner.types.convert_dtype"]], "planner.types": [[51, "module-planner.types"]], "set_default_device_and_dtype() (in module planner.types)": [[51, "planner.types.set_default_device_and_dtype"]], "predictivesampling (class in predictive_sampling)": [[52, "predictive_sampling.PredictiveSampling"]], "predictivesamplingconfig (class in predictive_sampling)": [[52, "predictive_sampling.PredictiveSamplingConfig"]], "action() (predictive_sampling.predictivesampling method)": [[52, "predictive_sampling.PredictiveSampling.action"]], "noise_ramp (predictive_sampling.predictivesamplingconfig attribute)": [[52, "predictive_sampling.PredictiveSamplingConfig.noise_ramp"]], "predictive_sampling": [[52, "module-predictive_sampling"]], "update_action() (predictive_sampling.predictivesampling method)": [[52, "predictive_sampling.PredictiveSampling.update_action"]], "scenes": [[53, "module-scenes"]], "spot_sensors (in module scenes)": [[53, "scenes.spot_sensors"]], "modelelement (class in scenes.scene_composer)": [[54, "scenes.scene_composer.ModelElement"]], "scene (class in scenes.scene_composer)": [[54, "scenes.scene_composer.Scene"]], "spotrobot (class in scenes.scene_composer)": [[54, "scenes.scene_composer.SpotRobot"]], "__getattr__() (scenes.scene_composer.mjbodywrapper method)": [[54, "scenes.scene_composer.mjBodyWrapper.__getattr__"]], "__getitem__() (scenes.scene_composer.modelelement method)": [[54, "scenes.scene_composer.ModelElement.__getitem__"]], "__setattr__() (scenes.scene_composer.mjbodywrapper method)": [[54, "scenes.scene_composer.mjBodyWrapper.__setattr__"]], "attach() (scenes.scene_composer.mjbodywrapper method)": [[54, "scenes.scene_composer.mjBodyWrapper.attach"]], "autoload() (scenes.scene_composer.modelelement static method)": [[54, "scenes.scene_composer.ModelElement.autoload"]], "contacts (scenes.scene_composer.scene attribute)": [[54, "scenes.scene_composer.Scene.contacts"]], "elements (scenes.scene_composer.scene attribute)": [[54, "scenes.scene_composer.Scene.elements"]], "from_file() (scenes.scene_composer.modelelement class method)": [[54, "scenes.scene_composer.ModelElement.from_file"]], "from_string() (scenes.scene_composer.modelelement class method)": [[54, "scenes.scene_composer.ModelElement.from_string"]], "header_includes (scenes.scene_composer.modelelement attribute)": [[54, "scenes.scene_composer.ModelElement.header_includes"]], "load() (scenes.scene_composer.modelelement method)": [[54, "scenes.scene_composer.ModelElement.load"]], "load() (scenes.scene_composer.scene method)": [[54, "scenes.scene_composer.Scene.load"]], "load() (scenes.scene_composer.spotrobot method)": [[54, "scenes.scene_composer.SpotRobot.load"]], "make_default_header_includes() (in module scenes.scene_composer)": [[54, "scenes.scene_composer.make_default_header_includes"]], "mjbodywrapper (class in scenes.scene_composer)": [[54, "scenes.scene_composer.mjBodyWrapper"]], "name (scenes.scene_composer.modelelement attribute)": [[54, "scenes.scene_composer.ModelElement.name"]], "name (scenes.scene_composer.spotrobot attribute)": [[54, "scenes.scene_composer.SpotRobot.name"]], "override() (in module scenes.scene_composer)": [[54, "scenes.scene_composer.override"]], "scenes.scene_composer": [[54, "module-scenes.scene_composer"]], "sensors (scenes.scene_composer.scene attribute)": [[54, "scenes.scene_composer.Scene.sensors"]], "to_xml_file() (scenes.scene_composer.modelelement method)": [[54, "scenes.scene_composer.ModelElement.to_xml_file"]], "to_xml_string() (scenes.scene_composer.modelelement method)": [[54, "scenes.scene_composer.ModelElement.to_xml_string"]], "xml_content (scenes.scene_composer.modelelement attribute)": [[54, "scenes.scene_composer.ModelElement.xml_content"]], "xml_dir (scenes.scene_composer.scene attribute)": [[54, "scenes.scene_composer.Scene.xml_dir"]], "xml_dir (scenes.scene_composer.spotrobot attribute)": [[54, "scenes.scene_composer.SpotRobot.xml_dir"]], "scenes.scene_generator": [[55, "module-scenes.scene_generator"]], "asset_dir (in module scenes.scene_registry)": [[56, "scenes.scene_registry.ASSET_DIR"]], "components_dir (in module scenes.scene_registry)": [[56, "scenes.scene_registry.COMPONENTS_DIR"]], "output_dir (in module scenes.scene_registry)": [[56, "scenes.scene_registry.OUTPUT_DIR"]], "sceneregistry (class in scenes.scene_registry)": [[56, "scenes.scene_registry.SceneRegistry"]], "xml_dir (in module scenes.scene_registry)": [[56, "scenes.scene_registry.XML_DIR"]], "__getitem__() (scenes.scene_registry.sceneregistry method)": [[56, "scenes.scene_registry.SceneRegistry.__getitem__"]], "add() (scenes.scene_registry.sceneregistry method)": [[56, "scenes.scene_registry.SceneRegistry.add"]], "generate() (scenes.scene_registry.sceneregistry method)": [[56, "scenes.scene_registry.SceneRegistry.generate"]], "generate_all() (scenes.scene_registry.sceneregistry method)": [[56, "scenes.scene_registry.SceneRegistry.generate_all"]], "scene_registry (in module scenes.scene_registry)": [[56, "scenes.scene_registry.scene_registry"]], "scenes.scene_registry": [[56, "module-scenes.scene_registry"]], "reset_object_pose (in module spot_box)": [[57, "spot_box.RESET_OBJECT_POSE"]], "spotbox (class in spot_box)": [[57, "spot_box.SpotBox"]], "spotboxconfig (class in spot_box)": [[57, "spot_box.SpotBoxConfig"]], "z_axis (in module spot_box)": [[57, "spot_box.Z_AXIS"]], "actuator_ctrlrange (spot_box.spotbox property)": [[57, "spot_box.SpotBox.actuator_ctrlrange"]], "goal_position (spot_box.spotboxconfig attribute)": [[57, "spot_box.SpotBoxConfig.goal_position"]], "orientation_threshold (spot_box.spotboxconfig attribute)": [[57, "spot_box.SpotBoxConfig.orientation_threshold"]], "reset() (spot_box.spotbox method)": [[57, "spot_box.SpotBox.reset"]], "reward() (spot_box.spotbox method)": [[57, "spot_box.SpotBox.reward"]], "spot_box": [[57, "module-spot_box"]], "w_gripper_proximity (spot_box.spotboxconfig attribute)": [[57, "spot_box.SpotBoxConfig.w_gripper_proximity"]], "w_orientation (spot_box.spotboxconfig attribute)": [[57, "spot_box.SpotBoxConfig.w_orientation"]], "w_torso_proximity (spot_box.spotboxconfig attribute)": [[57, "spot_box.SpotBoxConfig.w_torso_proximity"]], "spothandnavigation (class in spot_hand_navigation)": [[58, "spot_hand_navigation.SpotHandNavigation"]], "spothandnavigationconfig (class in spot_hand_navigation)": [[58, "spot_hand_navigation.SpotHandNavigationConfig"]], "actuator_ctrlrange (spot_hand_navigation.spothandnavigation property)": [[58, "spot_hand_navigation.SpotHandNavigation.actuator_ctrlrange"]], "goal_position (spot_hand_navigation.spothandnavigationconfig attribute)": [[58, "spot_hand_navigation.SpotHandNavigationConfig.goal_position"]], "reset() (spot_hand_navigation.spothandnavigation method)": [[58, "spot_hand_navigation.SpotHandNavigation.reset"]], "reward() (spot_hand_navigation.spothandnavigation method)": [[58, "spot_hand_navigation.SpotHandNavigation.reward"]], "spot_hand_navigation": [[58, "module-spot_hand_navigation"]], "spotnavigation (class in spot_navigation)": [[59, "spot_navigation.SpotNavigation"]], "spotnavigationconfig (class in spot_navigation)": [[59, "spot_navigation.SpotNavigationConfig"]], "actuator_ctrlrange (spot_navigation.spotnavigation property)": [[59, "spot_navigation.SpotNavigation.actuator_ctrlrange"]], "goal_position (spot_navigation.spotnavigationconfig attribute)": [[59, "spot_navigation.SpotNavigationConfig.goal_position"]], "reset() (spot_navigation.spotnavigation method)": [[59, "spot_navigation.SpotNavigation.reset"]], "reward() (spot_navigation.spotnavigation method)": [[59, "spot_navigation.SpotNavigation.reward"]], "spot_navigation": [[59, "module-spot_navigation"]], "reset_object_pose (in module spot_tire)": [[60, "spot_tire.RESET_OBJECT_POSE"]], "spottire (class in spot_tire)": [[60, "spot_tire.SpotTire"]], "spottireconfig (class in spot_tire)": [[60, "spot_tire.SpotTireConfig"]], "tire_goal (in module spot_tire)": [[60, "spot_tire.TIRE_GOAL"]], "tire_height (in module spot_tire)": [[60, "spot_tire.TIRE_HEIGHT"]], "z_axis (in module spot_tire)": [[60, "spot_tire.Z_AXIS"]], "actuator_ctrlrange (spot_tire.spottire property)": [[60, "spot_tire.SpotTire.actuator_ctrlrange"]], "fall_penalty (spot_tire.spottireconfig attribute)": [[60, "spot_tire.SpotTireConfig.fall_penalty"]], "goal_position (spot_tire.spottireconfig attribute)": [[60, "spot_tire.SpotTireConfig.goal_position"]], "goal_tire_pos (spot_tire.spottireconfig attribute)": [[60, "spot_tire.SpotTireConfig.goal_tire_pos"]], "gripper_goal_altitude (spot_tire.spottireconfig attribute)": [[60, "spot_tire.SpotTireConfig.gripper_goal_altitude"]], "gripper_goal_offset (spot_tire.spottireconfig attribute)": [[60, "spot_tire.SpotTireConfig.gripper_goal_offset"]], "reset() (spot_tire.spottire method)": [[60, "spot_tire.SpotTire.reset"]], "reward() (spot_tire.spottire method)": [[60, "spot_tire.SpotTire.reward"]], "spot_tire": [[60, "module-spot_tire"]], "tire_fallen_threshold (spot_tire.spottireconfig attribute)": [[60, "spot_tire.SpotTireConfig.tire_fallen_threshold"]], "torso_goal_offset (spot_tire.spottireconfig attribute)": [[60, "spot_tire.SpotTireConfig.torso_goal_offset"]], "w_gripper_proximity (spot_tire.spottireconfig attribute)": [[60, "spot_tire.SpotTireConfig.w_gripper_proximity"]], "w_leg_proximity (spot_tire.spottireconfig attribute)": [[60, "spot_tire.SpotTireConfig.w_leg_proximity"]], "w_tire_angular_velocity (spot_tire.spottireconfig attribute)": [[60, "spot_tire.SpotTireConfig.w_tire_angular_velocity"]], "w_tire_linear_velocity (spot_tire.spottireconfig attribute)": [[60, "spot_tire.SpotTireConfig.w_tire_linear_velocity"]], "w_torso_proximity (spot_tire.spottireconfig attribute)": [[60, "spot_tire.SpotTireConfig.w_torso_proximity"]], "acrobot (class in tasks.acrobot)": [[61, "tasks.acrobot.Acrobot"]], "acrobotconfig (class in tasks.acrobot)": [[61, "tasks.acrobot.AcrobotConfig"]], "model_path (in module tasks.acrobot)": [[61, "tasks.acrobot.MODEL_PATH"]], "cutoff_time (tasks.acrobot.acrobotconfig attribute)": [[61, "tasks.acrobot.AcrobotConfig.cutoff_time"]], "p_vertical (tasks.acrobot.acrobotconfig attribute)": [[61, "tasks.acrobot.AcrobotConfig.p_vertical"]], "reset() (tasks.acrobot.acrobot method)": [[61, "tasks.acrobot.Acrobot.reset"]], "tasks.acrobot": [[61, "module-tasks.acrobot"]], "w_control (tasks.acrobot.acrobotconfig attribute)": [[61, "tasks.acrobot.AcrobotConfig.w_control"]], "w_velocity (tasks.acrobot.acrobotconfig attribute)": [[61, "tasks.acrobot.AcrobotConfig.w_velocity"]], "w_vertical (tasks.acrobot.acrobotconfig attribute)": [[61, "tasks.acrobot.AcrobotConfig.w_vertical"]], "cartpole (class in tasks.cartpole)": [[62, "tasks.cartpole.Cartpole"]], "cartpoleconfig (class in tasks.cartpole)": [[62, "tasks.cartpole.CartpoleConfig"]], "model_path (in module tasks.cartpole)": [[62, "tasks.cartpole.MODEL_PATH"]], "cutoff_time (tasks.cartpole.cartpoleconfig attribute)": [[62, "tasks.cartpole.CartpoleConfig.cutoff_time"]], "is_terminated() (tasks.cartpole.cartpole method)": [[62, "tasks.cartpole.Cartpole.is_terminated"]], "p_centered (tasks.cartpole.cartpoleconfig attribute)": [[62, "tasks.cartpole.CartpoleConfig.p_centered"]], "p_vertical (tasks.cartpole.cartpoleconfig attribute)": [[62, "tasks.cartpole.CartpoleConfig.p_vertical"]], "reset() (tasks.cartpole.cartpole method)": [[62, "tasks.cartpole.Cartpole.reset"]], "tasks.cartpole": [[62, "module-tasks.cartpole"]], "w_centered (tasks.cartpole.cartpoleconfig attribute)": [[62, "tasks.cartpole.CartpoleConfig.w_centered"]], "w_control (tasks.cartpole.cartpoleconfig attribute)": [[62, "tasks.cartpole.CartpoleConfig.w_control"]], "w_velocity (tasks.cartpole.cartpoleconfig attribute)": [[62, "tasks.cartpole.CartpoleConfig.w_velocity"]], "w_vertical (tasks.cartpole.cartpoleconfig attribute)": [[62, "tasks.cartpole.CartpoleConfig.w_vertical"]], "quadratic_norm() (in module tasks.cost_functions)": [[63, "tasks.cost_functions.quadratic_norm"]], "smooth_l1_norm() (in module tasks.cost_functions)": [[63, "tasks.cost_functions.smooth_l1_norm"]], "tasks.cost_functions": [[63, "module-tasks.cost_functions"]], "cylinderpush (class in tasks.cylinder_push)": [[64, "tasks.cylinder_push.CylinderPush"]], "cylinderpushconfig (class in tasks.cylinder_push)": [[64, "tasks.cylinder_push.CylinderPushConfig"]], "model_path (in module tasks.cylinder_push)": [[64, "tasks.cylinder_push.MODEL_PATH"]], "cart_goal_position (tasks.cylinder_push.cylinderpushconfig attribute)": [[64, "tasks.cylinder_push.CylinderPushConfig.cart_goal_position"]], "cutoff_time (tasks.cylinder_push.cylinderpushconfig attribute)": [[64, "tasks.cylinder_push.CylinderPushConfig.cutoff_time"]], "pusher_goal_offset (tasks.cylinder_push.cylinderpushconfig attribute)": [[64, "tasks.cylinder_push.CylinderPushConfig.pusher_goal_offset"]], "reset() (tasks.cylinder_push.cylinderpush method)": [[64, "tasks.cylinder_push.CylinderPush.reset"]], "tasks.cylinder_push": [[64, "module-tasks.cylinder_push"]], "w_cart_position (tasks.cylinder_push.cylinderpushconfig attribute)": [[64, "tasks.cylinder_push.CylinderPushConfig.w_cart_position"]], "w_pusher_proximity (tasks.cylinder_push.cylinderpushconfig attribute)": [[64, "tasks.cylinder_push.CylinderPushConfig.w_pusher_proximity"]], "w_pusher_velocity (tasks.cylinder_push.cylinderpushconfig attribute)": [[64, "tasks.cylinder_push.CylinderPushConfig.w_pusher_velocity"]], "get_registered_tasks() (in module tasks)": [[65, "tasks.get_registered_tasks"]], "register_task() (in module tasks)": [[65, "tasks.register_task"]], "tasks": [[65, "module-tasks"]], "mujocotask (class in tasks.mujoco_task)": [[66, "tasks.mujoco_task.MujocoTask"]], "actuator_ctrlrange (tasks.mujoco_task.mujocotask property)": [[66, "tasks.mujoco_task.MujocoTask.actuator_ctrlrange"]], "create_visualization() (tasks.mujoco_task.mujocotask method)": [[66, "tasks.mujoco_task.MujocoTask.create_visualization"]], "default_idle_command (tasks.mujoco_task.mujocotask property)": [[66, "tasks.mujoco_task.MujocoTask.default_idle_command"]], "dt (tasks.mujoco_task.mujocotask property)": [[66, "tasks.mujoco_task.MujocoTask.dt"]], "is_terminated() (tasks.mujoco_task.mujocotask method)": [[66, "tasks.mujoco_task.MujocoTask.is_terminated"]], "make_models() (tasks.mujoco_task.mujocotask method)": [[66, "tasks.mujoco_task.MujocoTask.make_models"]], "nu (tasks.mujoco_task.mujocotask property)": [[66, "tasks.mujoco_task.MujocoTask.nu"]], "reset() (tasks.mujoco_task.mujocotask method)": [[66, "tasks.mujoco_task.MujocoTask.reset"]], "rollout() (tasks.mujoco_task.mujocotask method)": [[66, "tasks.mujoco_task.MujocoTask.rollout"]], "sim_step() (tasks.mujoco_task.mujocotask method)": [[66, "tasks.mujoco_task.MujocoTask.sim_step"]], "tasks.mujoco_task": [[66, "module-tasks.mujoco_task"]], "configt (in module tasks.spot_base)": [[67, "tasks.spot_base.ConfigT"]], "default_spot_rollout_cutoff_time (in module tasks.spot_base)": [[67, "tasks.spot_base.DEFAULT_SPOT_ROLLOUT_CUTOFF_TIME"]], "goal_positions (in module tasks.spot_base)": [[67, "tasks.spot_base.GOAL_POSITIONS"]], "spotbase (class in tasks.spot_base)": [[67, "tasks.spot_base.SpotBase"]], "spotbaseconfig (class in tasks.spot_base)": [[67, "tasks.spot_base.SpotBaseConfig"]], "cutoff_time (tasks.spot_base.spotbaseconfig attribute)": [[67, "tasks.spot_base.SpotBaseConfig.cutoff_time"]], "default_idle_command (tasks.spot_base.spotbase property)": [[67, "tasks.spot_base.SpotBase.default_idle_command"]], "fall_penalty (tasks.spot_base.spotbaseconfig attribute)": [[67, "tasks.spot_base.SpotBaseConfig.fall_penalty"]], "make_models() (tasks.spot_base.spotbase method)": [[67, "tasks.spot_base.SpotBase.make_models"]], "rollout() (tasks.spot_base.spotbase method)": [[67, "tasks.spot_base.SpotBase.rollout"]], "sim_step() (tasks.spot_base.spotbase method)": [[67, "tasks.spot_base.SpotBase.sim_step"]], "spot_fallen_threshold (tasks.spot_base.spotbaseconfig attribute)": [[67, "tasks.spot_base.SpotBaseConfig.spot_fallen_threshold"]], "tasks.spot_base": [[67, "module-tasks.spot_base"]], "w_goal (tasks.spot_base.spotbaseconfig attribute)": [[67, "tasks.spot_base.SpotBaseConfig.w_goal"]], "w_proximity (tasks.spot_base.spotbaseconfig attribute)": [[67, "tasks.spot_base.SpotBaseConfig.w_proximity"]], "w_vel (tasks.spot_base.spotbaseconfig attribute)": [[67, "tasks.spot_base.SpotBaseConfig.w_vel"]], "model_path (in module tasks.spot_position_control)": [[68, "tasks.spot_position_control.MODEL_PATH"]], "spotpositioncontrol (class in tasks.spot_position_control)": [[68, "tasks.spot_position_control.SpotPositionControl"]], "spotpositioncontrolconfig (class in tasks.spot_position_control)": [[68, "tasks.spot_position_control.SpotPositionControlConfig"]], "default_command (tasks.spot_position_control.spotpositioncontrolconfig attribute)": [[68, "tasks.spot_position_control.SpotPositionControlConfig.default_command"]], "reset() (tasks.spot_position_control.spotpositioncontrol method)": [[68, "tasks.spot_position_control.SpotPositionControl.reset"]], "tasks.spot_position_control": [[68, "module-tasks.spot_position_control"]], "w_arms (tasks.spot_position_control.spotpositioncontrolconfig attribute)": [[68, "tasks.spot_position_control.SpotPositionControlConfig.w_arms"]], "w_forward (tasks.spot_position_control.spotpositioncontrolconfig attribute)": [[68, "tasks.spot_position_control.SpotPositionControlConfig.w_forward"]], "w_legs (tasks.spot_position_control.spotpositioncontrolconfig attribute)": [[68, "tasks.spot_position_control.SpotPositionControlConfig.w_legs"]], "configt (in module tasks.task)": [[69, "tasks.task.ConfigT"]], "modelt (in module tasks.task)": [[69, "tasks.task.ModelT"]], "task (class in tasks.task)": [[69, "tasks.task.Task"]], "taskconfig (class in tasks.task)": [[69, "tasks.task.TaskConfig"]], "actuator_ctrlrange (tasks.task.task property)": [[69, "tasks.task.Task.actuator_ctrlrange"]], "additional_task_info (tasks.task.task property)": [[69, "tasks.task.Task.additional_task_info"]], "create_visualization() (tasks.task.task method)": [[69, "tasks.task.Task.create_visualization"]], "dt (tasks.task.task property)": [[69, "tasks.task.Task.dt"]], "is_terminated() (tasks.task.task method)": [[69, "tasks.task.Task.is_terminated"]], "make_models() (tasks.task.task method)": [[69, "tasks.task.Task.make_models"]], "reset() (tasks.task.task method)": [[69, "tasks.task.Task.reset"]], "reward() (tasks.task.task method)": [[69, "tasks.task.Task.reward"]], "rollout() (tasks.task.task method)": [[69, "tasks.task.Task.rollout"]], "sim_step() (tasks.task.task method)": [[69, "tasks.task.Task.sim_step"]], "tasks.task": [[69, "module-tasks.task"]], "controlprocess (class in viser_app.app)": [[70, "viser_app.app.ControlProcess"]], "jacta_manipulation_path (in module viser_app.app)": [[70, "viser_app.app.JACTA_MANIPULATION_PATH"]], "simulationprocess (class in viser_app.app)": [[70, "viser_app.app.SimulationProcess"]], "viserapp (class in viser_app.app)": [[70, "viser_app.app.ViserApp"]], "config_download_callback() (viser_app.app.viserapp method)": [[70, "viser_app.app.ViserApp.config_download_callback"]], "control_cycle_callback() (viser_app.app.viserapp method)": [[70, "viser_app.app.ViserApp.control_cycle_callback"]], "control_loop() (viser_app.app.controlprocess method)": [[70, "viser_app.app.ControlProcess.control_loop"]], "control_selection_callback() (viser_app.app.viserapp method)": [[70, "viser_app.app.ViserApp.control_selection_callback"]], "enable_profiling_callback() (viser_app.app.viserapp method)": [[70, "viser_app.app.ViserApp.enable_profiling_callback"]], "remove() (viser_app.app.controlprocess method)": [[70, "viser_app.app.ControlProcess.remove"]], "reset() (viser_app.app.simulationprocess method)": [[70, "viser_app.app.SimulationProcess.reset"]], "set_profiler_recording() (viser_app.app.controlprocess method)": [[70, "viser_app.app.ControlProcess.set_profiler_recording"]], "setup_context() (viser_app.app.viserapp method)": [[70, "viser_app.app.ViserApp.setup_context"]], "setup_controller() (viser_app.app.viserapp method)": [[70, "viser_app.app.ViserApp.setup_controller"]], "setup_physics() (viser_app.app.viserapp method)": [[70, "viser_app.app.ViserApp.setup_physics"]], "setup_task() (viser_app.app.viserapp method)": [[70, "viser_app.app.ViserApp.setup_task"]], "setup_visualization() (viser_app.app.viserapp method)": [[70, "viser_app.app.ViserApp.setup_visualization"]], "simulation_cycle_callback() (viser_app.app.viserapp method)": [[70, "viser_app.app.ViserApp.simulation_cycle_callback"]], "simulation_reset_callback() (viser_app.app.viserapp method)": [[70, "viser_app.app.ViserApp.simulation_reset_callback"]], "task_selection_callback() (viser_app.app.viserapp method)": [[70, "viser_app.app.ViserApp.task_selection_callback"]], "terminate() (viser_app.app.controlprocess method)": [[70, "viser_app.app.ControlProcess.terminate"]], "viser_app.app": [[70, "module-viser_app.app"]], "write_controls() (viser_app.app.controlprocess method)": [[70, "viser_app.app.ControlProcess.write_controls"]], "write_states() (viser_app.app.simulationprocess method)": [[70, "viser_app.app.SimulationProcess.write_states"]], "write_traces() (viser_app.app.controlprocess method)": [[70, "viser_app.app.ControlProcess.write_traces"]], "default_slider_step_float (in module viser_app.gui)": [[71, "viser_app.gui.DEFAULT_SLIDER_STEP_FLOAT"]], "default_slider_step_int (in module viser_app.gui)": [[71, "viser_app.gui.DEFAULT_SLIDER_STEP_INT"]], "goal_radius (in module viser_app.gui)": [[71, "viser_app.gui.GOAL_RADIUS"]], "create_gui_elements() (in module viser_app.gui)": [[71, "viser_app.gui.create_gui_elements"]], "slider() (in module viser_app.gui)": [[71, "viser_app.gui.slider"]], "viser_app.gui": [[71, "module-viser_app.gui"]], "viser_app": [[72, "module-viser_app"]], "hardwareiocontext (class in viser_app.io)": [[73, "viser_app.io.HardwareIOContext"]], "iocontext (class in viser_app.io)": [[73, "viser_app.io.IOContext"]], "simulationiocontext (class in viser_app.io)": [[73, "viser_app.io.SimulationIOContext"]], "viser_app.io": [[73, "module-viser_app.io"]], "configencoder (class in viser_app.json_serializer)": [[74, "viser_app.json_serializer.ConfigEncoder"]], "decode_config() (in module viser_app.json_serializer)": [[74, "viser_app.json_serializer.decode_config"]], "viser_app.json_serializer": [[74, "module-viser_app.json_serializer"]], "viserprofiler (class in viser_app.profiler)": [[75, "viser_app.profiler.ViserProfiler"]], "viserprofilerconfig (class in viser_app.profiler)": [[75, "viser_app.profiler.ViserProfilerConfig"]], "benchmark_wrapper() (viser_app.profiler.viserprofiler method)": [[75, "viser_app.profiler.ViserProfiler.benchmark_wrapper"]], "viser_app.profiler": [[75, "module-viser_app.profiler"]], "mjvisualization (class in visualization)": [[76, "visualization.MjVisualization"]], "visualization_freq (in module visualization)": [[76, "visualization.VISUALIZATION_FREQ"]], "remove() (visualization.mjvisualization method)": [[76, "visualization.MjVisualization.remove"]], "visualization": [[76, "module-visualization"]], "visuals": [[77, "module-visuals"]], "meshphysicalmaterial (class in visuals.meshcat_visualizer)": [[78, "visuals.meshcat_visualizer.MeshPhysicalMaterial"]], "meshtoonmaterial (class in visuals.meshcat_visualizer)": [[78, "visuals.meshcat_visualizer.MeshToonMaterial"]], "plane (class in visuals.meshcat_visualizer)": [[78, "visuals.meshcat_visualizer.Plane"]], "setpropertycapital (class in visuals.meshcat_visualizer)": [[78, "visuals.meshcat_visualizer.SetPropertyCapital"]], "add_box() (in module visuals.meshcat_visualizer)": [[78, "visuals.meshcat_visualizer.add_box"]], "add_capsule() (in module visuals.meshcat_visualizer)": [[78, "visuals.meshcat_visualizer.add_capsule"]], "add_cylinder() (in module visuals.meshcat_visualizer)": [[78, "visuals.meshcat_visualizer.add_cylinder"]], "add_ellipsoid() (in module visuals.meshcat_visualizer)": [[78, "visuals.meshcat_visualizer.add_ellipsoid"]], "add_ground() (in module visuals.meshcat_visualizer)": [[78, "visuals.meshcat_visualizer.add_ground"]], "add_mesh() (in module visuals.meshcat_visualizer)": [[78, "visuals.meshcat_visualizer.add_mesh"]], "add_mesh_by_name() (in module visuals.meshcat_visualizer)": [[78, "visuals.meshcat_visualizer.add_mesh_by_name"]], "add_object() (in module visuals.meshcat_visualizer)": [[78, "visuals.meshcat_visualizer.add_object"]], "add_plane() (in module visuals.meshcat_visualizer)": [[78, "visuals.meshcat_visualizer.add_plane"]], "add_sphere() (in module visuals.meshcat_visualizer)": [[78, "visuals.meshcat_visualizer.add_sphere"]], "close_window() (in module visuals.meshcat_visualizer)": [[78, "visuals.meshcat_visualizer.close_window"]], "lower() (visuals.meshcat_visualizer.setpropertycapital method)": [[78, "visuals.meshcat_visualizer.SetPropertyCapital.lower"]], "rgb_float_to_hex() (in module visuals.meshcat_visualizer)": [[78, "visuals.meshcat_visualizer.rgb_float_to_hex"]], "rgb_int_to_hex() (in module visuals.meshcat_visualizer)": [[78, "visuals.meshcat_visualizer.rgb_int_to_hex"]], "rgba_overwrite() (in module visuals.meshcat_visualizer)": [[78, "visuals.meshcat_visualizer.rgba_overwrite"]], "set_color() (in module visuals.meshcat_visualizer)": [[78, "visuals.meshcat_visualizer.set_color"]], "set_object() (in module visuals.meshcat_visualizer)": [[78, "visuals.meshcat_visualizer.set_object"]], "set_property_capital() (in module visuals.meshcat_visualizer)": [[78, "visuals.meshcat_visualizer.set_property_capital"]], "setup_visualizer() (in module visuals.meshcat_visualizer)": [[78, "visuals.meshcat_visualizer.setup_visualizer"]], "visuals.meshcat_visualizer": [[78, "module-visuals.meshcat_visualizer"]], "default_colors (in module visuals.mujoco_visualizer)": [[79, "visuals.mujoco_visualizer.DEFAULT_COLORS"]], "mujocorenderer (class in visuals.mujoco_visualizer)": [[79, "visuals.mujoco_visualizer.MujocoRenderer"]], "rgba (in module visuals.mujoco_visualizer)": [[79, "visuals.mujoco_visualizer.RGBA"]], "trajectory (in module visuals.mujoco_visualizer)": [[79, "visuals.mujoco_visualizer.Trajectory"]], "add_marker() (visuals.mujoco_visualizer.mujocorenderer method)": [[79, "visuals.mujoco_visualizer.MujocoRenderer.add_marker"]], "animate_marker() (visuals.mujoco_visualizer.mujocorenderer method)": [[79, "visuals.mujoco_visualizer.MujocoRenderer.animate_marker"]], "extract_joint_positions() (visuals.mujoco_visualizer.mujocorenderer method)": [[79, "visuals.mujoco_visualizer.MujocoRenderer.extract_joint_positions"]], "framerate (visuals.mujoco_visualizer.mujocorenderer property)": [[79, "visuals.mujoco_visualizer.MujocoRenderer.framerate"]], "get_html() (visuals.mujoco_visualizer.mujocorenderer method)": [[79, "visuals.mujoco_visualizer.MujocoRenderer.get_html"]], "init_ee_position() (visuals.mujoco_visualizer.mujocorenderer method)": [[79, "visuals.mujoco_visualizer.MujocoRenderer.init_ee_position"]], "init_points() (visuals.mujoco_visualizer.mujocorenderer method)": [[79, "visuals.mujoco_visualizer.MujocoRenderer.init_points"]], "initialize_candidate_trajectories() (visuals.mujoco_visualizer.mujocorenderer method)": [[79, "visuals.mujoco_visualizer.MujocoRenderer.initialize_candidate_trajectories"]], "initialize_markers() (visuals.mujoco_visualizer.mujocorenderer method)": [[79, "visuals.mujoco_visualizer.MujocoRenderer.initialize_markers"]], "load_model() (visuals.mujoco_visualizer.mujocorenderer method)": [[79, "visuals.mujoco_visualizer.MujocoRenderer.load_model"]], "play() (visuals.mujoco_visualizer.mujocorenderer method)": [[79, "visuals.mujoco_visualizer.MujocoRenderer.play"]], "render() (visuals.mujoco_visualizer.mujocorenderer method)": [[79, "visuals.mujoco_visualizer.MujocoRenderer.render"]], "reset() (visuals.mujoco_visualizer.mujocorenderer method)": [[79, "visuals.mujoco_visualizer.MujocoRenderer.reset"]], "save() (visuals.mujoco_visualizer.mujocorenderer method)": [[79, "visuals.mujoco_visualizer.MujocoRenderer.save"]], "set_marker() (visuals.mujoco_visualizer.mujocorenderer method)": [[79, "visuals.mujoco_visualizer.MujocoRenderer.set_marker"]], "set_model() (visuals.mujoco_visualizer.mujocorenderer method)": [[79, "visuals.mujoco_visualizer.MujocoRenderer.set_model"]], "show() (visuals.mujoco_visualizer.mujocorenderer method)": [[79, "visuals.mujoco_visualizer.MujocoRenderer.show"]], "show_box_goal() (visuals.mujoco_visualizer.mujocorenderer method)": [[79, "visuals.mujoco_visualizer.MujocoRenderer.show_box_goal"]], "show_goal() (visuals.mujoco_visualizer.mujocorenderer method)": [[79, "visuals.mujoco_visualizer.MujocoRenderer.show_goal"]], "show_trajectory() (visuals.mujoco_visualizer.mujocorenderer method)": [[79, "visuals.mujoco_visualizer.MujocoRenderer.show_trajectory"]], "update_candidate_trajectories() (visuals.mujoco_visualizer.mujocorenderer method)": [[79, "visuals.mujoco_visualizer.MujocoRenderer.update_candidate_trajectories"]], "update_ee_position() (visuals.mujoco_visualizer.mujocorenderer method)": [[79, "visuals.mujoco_visualizer.MujocoRenderer.update_ee_position"]], "update_markers() (visuals.mujoco_visualizer.mujocorenderer method)": [[79, "visuals.mujoco_visualizer.MujocoRenderer.update_markers"]], "update_points() (visuals.mujoco_visualizer.mujocorenderer method)": [[79, "visuals.mujoco_visualizer.MujocoRenderer.update_points"]], "visuals.mujoco_visualizer": [[79, "module-visuals.mujoco_visualizer"]], "wait_for_input() (visuals.mujoco_visualizer.mujocorenderer method)": [[79, "visuals.mujoco_visualizer.MujocoRenderer.wait_for_input"]], "action_inverse() (in module visuals.quaternion_operations)": [[80, "visuals.quaternion_operations.action_inverse"]], "left_action() (in module visuals.quaternion_operations)": [[80, "visuals.quaternion_operations.left_action"]], "pose_to_transformation_matrix() (in module visuals.quaternion_operations)": [[80, "visuals.quaternion_operations.pose_to_transformation_matrix"]], "project_action() (in module visuals.quaternion_operations)": [[80, "visuals.quaternion_operations.project_action"]], "quaternion_inverse() (in module visuals.quaternion_operations)": [[80, "visuals.quaternion_operations.quaternion_inverse"]], "quaternion_to_quaternion_map_jacobian() (in module visuals.quaternion_operations)": [[80, "visuals.quaternion_operations.quaternion_to_quaternion_map_jacobian"]], "quaternion_to_transformation_matrix() (in module visuals.quaternion_operations)": [[80, "visuals.quaternion_operations.quaternion_to_transformation_matrix"]], "right_action() (in module visuals.quaternion_operations)": [[80, "visuals.quaternion_operations.right_action"]], "rotation_matrix() (in module visuals.quaternion_operations)": [[80, "visuals.quaternion_operations.rotation_matrix"]], "skew_symmetric() (in module visuals.quaternion_operations)": [[80, "visuals.quaternion_operations.skew_symmetric"]], "vector_projection() (in module visuals.quaternion_operations)": [[80, "visuals.quaternion_operations.vector_projection"]], "visuals.quaternion_operations": [[80, "module-visuals.quaternion_operations"]]}})