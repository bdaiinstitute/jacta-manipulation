Search.setIndex({"docnames": ["api/action_trajectory/index", "api/cmaes/index", "api/core/action_sampler/index", "api/core/clipping_method/index", "api/core/data_collection/index", "api/core/graph/index", "api/core/graph_visuals/index", "api/core/graph_worker/index", "api/core/index", "api/core/linear_algebra/index", "api/core/logger/index", "api/core/parameter_container/index", "api/core/planner/index", "api/core/types/index", "api/cross_entropy_method/index", "api/experts/expert/index", "api/experts/expert_sampler/index", "api/experts/index", "api/experts/network/index", "api/learning/index", "api/learning/learner/index", "api/learning/networks/index", "api/learning/normalizer/index", "api/learning/replay_buffer/index", "api/model/index", "api/mppi/index", "api/mujoco_dynamics/index", "api/mujoco_helpers/dynamics/index", "api/mujoco_helpers/index", "api/mujoco_helpers/kinematics/index", "api/mujoco_helpers/utils/index", "api/particle_filter/index", "api/path_resolvers/index", "api/paths/index", "api/predictive_sampling/index", "api/simulator_plant/index", "api/viser_app/app/index", "api/viser_app/constants/index", "api/viser_app/controllers/controller/index", "api/viser_app/controllers/index", "api/viser_app/controllers/sampling_base/index", "api/viser_app/gui/index", "api/viser_app/index", "api/viser_app/io/index", "api/viser_app/json_serializer/index", "api/viser_app/profiler/index", "api/viser_app/tasks/acrobot/index", "api/viser_app/tasks/cartpole/index", "api/viser_app/tasks/cost_functions/index", "api/viser_app/tasks/cylinder_push/index", "api/viser_app/tasks/index", "api/viser_app/tasks/mujoco_task/index", "api/viser_app/tasks/task/index", "api/viser_app/visualization/index", "api/visualization/index", "api/visuals/index", "index"], "filenames": ["api/action_trajectory/index.rst", "api/cmaes/index.rst", "api/core/action_sampler/index.rst", "api/core/clipping_method/index.rst", "api/core/data_collection/index.rst", "api/core/graph/index.rst", "api/core/graph_visuals/index.rst", "api/core/graph_worker/index.rst", "api/core/index.rst", "api/core/linear_algebra/index.rst", "api/core/logger/index.rst", "api/core/parameter_container/index.rst", "api/core/planner/index.rst", "api/core/types/index.rst", "api/cross_entropy_method/index.rst", "api/experts/expert/index.rst", "api/experts/expert_sampler/index.rst", "api/experts/index.rst", "api/experts/network/index.rst", "api/learning/index.rst", "api/learning/learner/index.rst", "api/learning/networks/index.rst", "api/learning/normalizer/index.rst", "api/learning/replay_buffer/index.rst", "api/model/index.rst", "api/mppi/index.rst", "api/mujoco_dynamics/index.rst", "api/mujoco_helpers/dynamics/index.rst", "api/mujoco_helpers/index.rst", "api/mujoco_helpers/kinematics/index.rst", "api/mujoco_helpers/utils/index.rst", "api/particle_filter/index.rst", "api/path_resolvers/index.rst", "api/paths/index.rst", "api/predictive_sampling/index.rst", "api/simulator_plant/index.rst", "api/viser_app/app/index.rst", "api/viser_app/constants/index.rst", "api/viser_app/controllers/controller/index.rst", "api/viser_app/controllers/index.rst", "api/viser_app/controllers/sampling_base/index.rst", "api/viser_app/gui/index.rst", "api/viser_app/index.rst", "api/viser_app/io/index.rst", "api/viser_app/json_serializer/index.rst", "api/viser_app/profiler/index.rst", "api/viser_app/tasks/acrobot/index.rst", "api/viser_app/tasks/cartpole/index.rst", "api/viser_app/tasks/cost_functions/index.rst", "api/viser_app/tasks/cylinder_push/index.rst", "api/viser_app/tasks/index.rst", "api/viser_app/tasks/mujoco_task/index.rst", "api/viser_app/tasks/task/index.rst", "api/viser_app/visualization/index.rst", "api/visualization/index.rst", "api/visuals/index.rst", "index.md"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">action_trajectory</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cmaes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.action_sampler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.clipping_method</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.data_collection</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.graph_visuals</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.graph_worker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.linear_algebra</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.parameter_container</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.planner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core.types</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cross_entropy_method</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">experts.expert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">experts.expert_sampler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">experts</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">experts.network</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">learning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">learning.learner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">learning.networks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">learning.normalizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">learning.replay_buffer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mppi</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mujoco_dynamics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mujoco_helpers.dynamics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mujoco_helpers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mujoco_helpers.kinematics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mujoco_helpers.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">particle_filter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">path_resolvers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">paths</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">predictive_sampling</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">simulator_plant</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.app</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.constants</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.controllers.controller</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.controllers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.controllers.sampling_base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.gui</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.io</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.json_serializer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.profiler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.tasks.acrobot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.tasks.cartpole</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.tasks.cost_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.tasks.cylinder_push</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.tasks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.tasks.mujoco_task</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.tasks.task</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.visualization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">visualization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">visuals</span></code>", "jacta-manipulation"], "terms": {"create_action_trajectori": 0, "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55], "jacta": [0, 1, 2, 3, 4, 5, 6, 7, 10, 12, 14, 15, 16, 18, 20, 21, 23, 25, 26, 30, 31, 34, 35, 36, 39, 40, 46, 47, 49, 50, 51, 52, 54, 55], "planner": [0, 1, 2, 3, 5, 6, 7, 8, 10, 14, 15, 16, 18, 20, 23, 25, 26, 31, 34, 35, 55], "core": [0, 15, 16, 18, 20, 23, 26, 35, 55], "controltyp": [0, 13], "start_act": [0, 5, 23], "torch": [0, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 18, 20, 21, 22, 23, 26, 30, 35, 55], "floattensor": [0, 2, 3, 5, 6, 7, 9, 10, 12, 15, 16, 18, 20, 21, 22, 23, 26, 30, 35, 55], "end_act": [0, 5, 23], "trajectory_step": 0, "int": [0, 1, 2, 5, 6, 7, 9, 10, 11, 12, 14, 20, 21, 22, 23, 24, 26, 29, 30, 38, 40, 41, 51, 52], "creat": [0, 20, 36, 40, 41, 52, 55], "zero": [0, 22, 38, 40, 46, 47, 49, 51, 52], "first": [0, 40], "order": [0, 40], "hold": [0, 5, 26], "arrai": [0, 9, 21, 22, 26, 40, 44, 52], "action": [0, 1, 2, 3, 5, 7, 12, 14, 21, 23, 25, 26, 31, 34, 38, 40], "vector": [0, 3, 7, 9, 26, 38, 40, 52], "length": [0, 7, 24, 38, 40], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 43, 45, 47, 48, 50, 51, 52, 54, 55], "trajectori": [0, 2, 12, 20, 26, 30, 55], "A": [0, 9, 21, 22, 23, 26, 47, 52], "na": [0, 26], "contain": [0, 5, 21, 22, 26, 27, 30, 36, 38, 40, 41, 43, 51, 52, 53, 54, 55], "start": [0, 5, 6, 7, 20, 24, 26], "desir": [0, 26, 41, 55], "end": [0, 6, 24, 26, 40, 47], "For": 0, "onli": [0, 21, 24, 26], "us": [0, 5, 20, 22, 26, 40, 41, 51, 52], "held": [0, 26], "entir": 0, "linear": [0, 2, 46, 47, 49], "interpol": [0, 40, 51, 52], "between": [0, 26, 41, 46, 47, 49, 55], "The": [0, 3, 5, 9, 14, 21, 22, 24, 30, 31, 32, 46, 47, 49, 51], "result": [0, 30, 36, 54], "return": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55], "an": [0, 2, 9, 21, 22, 23, 24, 36], "n": [0, 3, 9, 24, 26, 30], "class": [1, 2, 5, 7, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 40, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55], "cmaesconfig": 1, "base": [1, 2, 5, 7, 13, 14, 18, 21, 22, 25, 26, 31, 34, 36, 38, 40, 43, 44, 46, 47, 49, 51, 52, 53], "visual": [1, 14, 24, 25, 30, 31, 34, 36, 39, 40, 42, 46, 47, 49, 50, 51, 52], "viser_app": [1, 14, 25, 31, 34, 54], "control": [1, 7, 14, 21, 25, 31, 34, 36, 42, 43, 46, 47, 49, 51, 52, 54], "sampling_bas": [1, 14, 25, 31, 34, 39, 42], "samplingbaseconfig": [1, 14, 25, 31, 34, 40], "configur": [1, 14, 24, 25, 29, 31, 34, 45, 46, 47, 49, 52], "sampl": [1, 2, 7, 20, 21, 23, 25, 26, 34, 40, 52], "py": [1, 13, 14, 20, 21, 22, 25, 29, 31, 34, 36, 37, 38, 40, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54], "attribut": [1, 13, 14, 25, 31, 34, 37, 40, 43, 45, 46, 47, 49], "sigma_init": 1, "float": [1, 5, 6, 7, 9, 10, 14, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 34, 35, 38, 40, 41, 46, 47, 48, 49, 51, 52, 55], "valu": [1, 11, 13, 14, 21, 25, 31, 34, 38, 40, 41, 43], "0": [1, 3, 5, 6, 10, 12, 13, 14, 20, 21, 22, 24, 25, 26, 29, 30, 31, 34, 35, 37, 40, 41, 46, 47, 49, 55], "05": [1, 21, 25, 34, 41], "max_it": [1, 29], "20": [1, 29, 40], "task": [1, 11, 14, 20, 25, 29, 31, 34, 36, 40, 42, 54], "config": [1, 14, 25, 31, 34, 36, 38, 40, 41, 45, 46, 47, 49, 51, 52], "reward_config": [1, 14, 25, 31, 34, 40], "taskconfig": [1, 14, 25, 31, 34, 36, 40, 46, 47, 49, 50, 51, 52], "samplingbas": [1, 14, 25, 31, 34, 40], "object": [1, 2, 14, 25, 27, 31, 34, 40, 43, 44, 52, 55], "hyperparamet": [1, 14, 25, 31, 34], "model": [1, 4, 14, 20, 25, 26, 27, 29, 30, 31, 33, 34, 38, 40, 46, 47, 49, 51, 52, 53, 54, 55], "mujoco": [1, 14, 24, 25, 26, 29, 30, 31, 34, 51], "system": [1, 7, 14, 25, 30, 31, 34, 52], "being": [1, 14, 25, 31, 34, 40], "data": [1, 5, 14, 21, 22, 24, 25, 26, 27, 30, 31, 33, 34, 36, 40, 52], "current": [1, 5, 7, 14, 20, 22, 25, 31, 34, 36, 38, 40, 41, 51, 53, 54], "reward_func": [1, 14, 25, 31, 34], "function": [1, 5, 14, 23, 24, 25, 31, 34, 36, 38, 40, 45, 52, 55], "map": [1, 14, 25, 31, 34, 46, 47, 49], "batch": [1, 14, 23, 25, 31, 34, 40, 46, 47, 49], "state": [1, 5, 12, 14, 20, 21, 22, 23, 25, 26, 30, 31, 34, 35, 36, 38, 40, 43, 46, 47, 49, 51, 52, 53, 54], "reward": [1, 5, 6, 7, 14, 20, 23, 24, 25, 31, 34, 46, 47, 49, 52], "update_act": [1, 14, 25, 31, 34, 38, 40], "curr_stat": [1, 14, 25, 31, 34, 38, 40], "numpi": [1, 6, 9, 14, 21, 24, 25, 26, 29, 30, 31, 34, 38, 40, 44, 46, 47, 48, 49, 51, 52, 55], "ndarrai": [1, 6, 9, 14, 24, 25, 29, 30, 31, 34, 38, 40, 46, 47, 48, 49, 51, 52], "curr_tim": [1, 14, 25, 31, 34, 38, 40], "additional_info": [1, 14, 25, 31, 34, 38, 40, 43, 46, 47, 49, 51, 52], "dict": [1, 7, 11, 14, 21, 22, 25, 31, 34, 38, 39, 40, 45, 46, 47, 49, 50, 51, 52, 54, 55], "str": [1, 4, 5, 6, 10, 11, 13, 14, 18, 20, 24, 25, 27, 29, 30, 31, 32, 34, 36, 38, 39, 40, 41, 43, 45, 46, 47, 49, 50, 51, 52, 55], "ani": [1, 11, 13, 14, 21, 22, 24, 25, 29, 31, 34, 38, 40, 41, 45, 46, 47, 49, 51, 52], "none": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 34, 36, 38, 39, 40, 41, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55], "perform": [1, 3, 7, 14, 20, 21, 25, 31, 34, 36, 52], "rollout": [1, 7, 14, 24, 25, 31, 34, 38, 40, 46, 47, 49, 51, 52], "comput": [1, 14, 21, 25, 26, 31, 34], "from": [1, 2, 5, 7, 12, 13, 14, 20, 21, 23, 24, 25, 26, 30, 31, 34, 38, 40, 41, 46, 47, 49, 52, 53, 54], "time": [1, 9, 12, 14, 20, 25, 26, 30, 31, 34, 38, 40, 43, 46, 47, 49], "best": [1, 7, 14, 25, 31, 34], "polici": [1, 14, 20, 21, 25, 31, 34], "actionsampl": [2, 7, 12], "plant": [2, 5, 7, 12, 15, 16, 18, 20, 23, 26, 30, 35, 55], "dynam": [2, 5, 7, 12, 15, 16, 18, 20, 23, 26, 28, 30], "simulator_pl": [2, 5, 7, 12, 15, 16, 18, 20, 23, 26], "simulatorpl": [2, 5, 7, 12, 15, 16, 18, 20, 23, 26, 35], "graph": [2, 6, 7, 8, 10, 12, 15, 16, 18, 20, 55], "param": [2, 3, 5, 7, 10, 12, 15, 16, 18, 20, 21, 23, 26, 35, 41, 55], "parameter_contain": [2, 3, 5, 7, 8, 10, 12, 15, 16, 18, 20, 23, 26, 35, 55], "parametercontain": [2, 3, 5, 7, 10, 11, 12, 15, 16, 18, 20, 23, 26, 35, 55], "reset": [2, 5, 7, 10, 12, 20, 23, 26, 36, 38, 40, 46, 47, 49, 51, 52], "initi": [2, 20, 24, 26, 29, 36, 40], "random_direct": 2, "node_id": [2, 7, 10, 15, 16, 18, 20], "inttensor": [2, 5, 7, 9, 10, 15, 16, 18, 20, 23, 26], "gener": [2, 5, 13, 45, 51, 52], "random": [2, 21, 23, 46, 47, 49], "direct": [2, 9, 21, 55], "proximity_direct": 2, "proxim": [2, 13], "gradient": [2, 13, 20, 26], "continuation_direct": 2, "same": [2, 7, 9, 40, 41, 51], "edg": 2, "gradient_act": 2, "we": [2, 7, 24, 26, 40, 41, 46, 47, 49, 55], "formul": 2, "quadrat": 2, "minim": [2, 26], "distanc": [2, 5, 7, 46, 47, 49], "goal": [2, 5, 7, 12, 20, 21, 22, 23, 49], "i": [2, 3, 5, 10, 20, 21, 22, 24, 29, 36, 38, 40, 43, 45, 46, 47, 49, 51, 52], "calcul": [2, 9, 38, 40], "optim": [2, 21], "directions_act": 2, "set": [2, 9, 21, 24, 26, 29, 30, 36, 38, 40, 41, 51, 52, 55], "node": [2, 5, 7, 12, 22], "": [2, 21, 26, 37], "last": [2, 7, 13, 40], "ar": [2, 5, 7, 9, 20, 21, 24, 37, 41, 47], "look": [2, 45], "extend": [2, 7], "k": [2, 9], "nq": 2, "expand": 2, "__call__": [2, 21, 22], "tupl": [2, 5, 7, 10, 12, 20, 23, 24, 26, 30, 39, 50, 51, 52], "actiontyp": [2, 7, 10, 13], "combin": 2, "each": [2, 46, 47, 49], "method": [2, 9, 14, 20, 21, 22, 31, 36, 38, 40, 44, 45, 46, 47, 49, 51, 52, 53, 54], "select": [2, 7, 21, 36], "potenti": [2, 24], "project": [2, 9, 10], "eigenspac": [2, 9], "clip_act": 3, "box_scal": 3, "v": [3, 9, 24], "v_min": 3, "v_max": 3, "v_mid": 3, "scale": [3, 7, 13, 24, 35], "down": 3, "ensur": 3, "version": 3, "v_bar": 3, "belong": 3, "box": [3, 24], "about": [3, 24], "centerpoint": 3, "alpha": 3, "1": [3, 5, 6, 13, 14, 21, 24, 25, 26, 29, 31, 34, 35, 40, 41, 46, 47, 49, 55], "option": [3, 5, 6, 7, 10, 11, 13, 21, 24, 26, 36, 41, 45, 46, 47, 49, 51, 52, 55], "save_model": [4, 20], "learn": 4, "network": [4, 17, 19, 20], "actor": [4, 18, 20, 21], "critic": [4, 20, 21], "normal": [4, 9, 19, 20, 21, 26], "dest_path": 4, "union": [4, 5, 20, 55], "load_model": [4, 20], "src_path": 4, "find_latest_model_path": 4, "base_path": 4, "sample_related_sub_goal_st": 5, "goal_stat": [5, 55], "start_stat": 5, "size": [5, 7, 9, 22, 23, 24, 26, 38, 40], "relat": 5, "provid": [5, 21, 51, 52], "sub": 5, "bound": 5, "number": [5, 7, 30, 38, 40, 51], "default": [5, 24, 38, 40, 41, 44, 46, 47, 49, 51], "tensor": [5, 6, 11, 21, 22, 26], "thi": [5, 7, 9, 13, 26, 36, 51, 52, 55], "assum": [5, 7, 9], "diagon": 5, "covari": 5, "matrix": [5, 9], "It": 5, "reli": 5, "fact": 5, "entri": 5, "independ": [5, 9], "ident": [5, 24], "distribut": [5, 7, 20, 22], "d": [5, 26], "sample_feasible_st": 5, "bound_low": 5, "bound_upp": 5, "sample_random_st": 5, "sample_random_start_st": 5, "sample_random_goal_st": 5, "sample_random_sub_goal_st": 5, "properti": [5, 11, 29, 38, 40, 51, 52, 55], "node_id_to_search_index_map": 5, "fulli": 5, "new": [5, 13, 22, 36, 40, 55], "search": [5, 7, 12], "set_start_st": 5, "set_goal_st": 5, "calculate_distance_reward": 5, "id": [5, 7, 20, 26, 30], "calculate_proximity_reward": 5, "calculate_reachability_reward": 5, "delta_st": [5, 35], "minimum_dist": 5, "001": [5, 21, 29], "add_total_reward": 5, "reachability_cach": 5, "add_nod": [5, 23], "root_id": [5, 23], "parent_id": [5, 23], "relative_act": [5, 7, 23], "is_main_nod": 5, "bool": [5, 6, 7, 11, 12, 20, 23, 24, 29, 30, 36, 40, 45, 47, 51, 52], "true": [5, 6, 7, 20, 24, 29, 40, 44], "add": [5, 24, 33, 41, 55], "its": [5, 36, 41], "updat": [5, 11, 20, 21, 22, 24, 26, 36, 38, 40, 41, 52, 53, 54], "when": [5, 36, 41], "ad": [5, 24, 41, 55], "get": [5, 10, 21, 32, 51, 52], "evalu": [5, 20, 21], "term": [5, 46, 47, 49], "which": [5, 21, 41], "connect": 5, "determin": 5, "reach": [5, 7, 29], "flag": [5, 41], "full": 5, "reset_sub_goal_st": 5, "change_sub_goal_st": 5, "sub_goal_st": [5, 23], "deactivate_nod": 5, "activate_all_nod": 5, "convert": [5, 45], "all": [5, 7, 22, 24, 26, 38, 40, 41, 43, 53, 54, 55], "main": [5, 36], "activ": 5, "inact": 5, "sorted_progress_id": 5, "reward_bas": 5, "search_index": [5, 6, 10, 12], "get_best_id": 5, "search_indic": [5, 7], "is_worse_than": 5, "comparison_id": 5, "is_better_than": 5, "number_of_nod": 5, "get_active_main_id": 5, "get_root_id": 5, "shortest_path_to": 5, "idx": 5, "start_id": [5, 12], "save": [5, 20, 21, 22], "filenam": 5, "mask": 5, "slice": [5, 37], "load": [5, 20, 21, 22], "add_child_ids_to_nod": 5, "destroi": 5, "free": [5, 26], "up": [5, 36, 40], "gpu": 5, "memori": 5, "rgba_palett": 6, "index": [6, 24, 30, 47], "transpar": [6, 55], "pydrak": [6, 33, 55], "geometri": [6, 24, 53, 54, 55], "rgba": [6, 24, 55], "color_gradi": 6, "color": [6, 24, 55], "step": [6, 7, 12, 21, 26, 41, 51, 52], "display_point_cloud": 6, "meshcat_vi": 6, "meshcat": [6, 30, 55], "point": [6, 24, 40], "path": [6, 7, 11, 12, 18, 20, 32, 36, 44], "point_siz": 6, "01": [6, 22, 29, 41, 46, 47], "display_seg": 6, "segment": [6, 24, 40], "line_width": [6, 24], "display_colormap_point_cloud": 6, "colormap_point": 6, "num_color_bin": 6, "12": 6, "7": [6, 24], "display_edges_by_categori": 6, "categori": 6, "list": [6, 26, 29, 30, 41, 46, 47, 49, 51, 52, 55], "edge_s": 6, "3d_graph": 6, "display_3d_graph": 6, "logger": [6, 7, 8, 12], "vis_scal": 6, "vis_indic": 6, "node_s": 6, "start_goal_s": 6, "08": 6, "best_path_edge_s": 6, "4": [6, 13, 21, 24, 26], "segment_color": 6, "best_path_color": 6, "node_transpar": 6, "display_best_path": 6, "display_reward_colormap": 6, "node_cap": 6, "reset_visu": 6, "pareto_distribut": 7, "expon": [7, 9], "graphwork": [7, 12], "action_sampl": [7, 8, 12], "callback": [7, 16, 18, 36, 41], "callabl": [7, 21, 23, 41, 45], "callback_period": 7, "node_select": 7, "collect": [7, 24], "rank": 7, "either": 7, "Then": 7, "accord": 7, "pareto": [7, 13], "indic": [7, 26, 37], "get_start_act": 7, "get_end_act": 7, "action_typ": 7, "node_extens": 7, "num_action_step": 7, "choos": [7, 21], "sampler": 7, "sof": 7, "nu": [7, 26, 51, 52], "must": [7, 41], "extens": 7, "parallel": [7, 26], "node_prun": 7, "paths_id": 7, "find": 7, "path_id": 7, "remov": [7, 24, 36, 41, 53, 54], "after": [7, 29], "node_replac": 7, "best_indic": 7, "tri": 7, "replac": 7, "predecessor_nod": 7, "direct_nod": 7, "percentage_rang": 7, "stop": 7, "rang": [7, 13], "get_progress_info": 7, "iter": [7, 41], "num_step": 7, "print_percentag": 7, "fals": [7, 12, 20, 23, 36, 40, 44, 45], "verbos": [7, 12, 20], "callback_and_progress_check": 7, "change_go": 7, "booltensor": 7, "call": [7, 26, 45], "singlegoalwork": 7, "work": [7, 24], "singl": [7, 40], "parallelgoalswork": 7, "arg": [7, 45], "kwarg": [7, 45], "try_to_reallocate_work": 7, "worker_reset_mask": 7, "update_extension_length": 7, "search_reset_mask": 7, "reset_finished_work": 7, "update_pareto_paramet": 7, "new_node_id": 7, "commongoalworkerinterfac": 7, "relatedgoalwork": 7, "around": [7, 21], "actual": [7, 21, 55], "explorerwork": 7, "randomli": [7, 26], "rolloutwork": 7, "alwai": 7, "inspect_action_typ": 7, "100": [7, 20], "inspect": 7, "tool": 7, "specif": [7, 51, 52], "clipping_method": 8, "data_collect": 8, "graph_visu": 8, "graph_work": [8, 12], "linear_algebra": 8, "transformation_matrix": 9, "rot": 9, "po": [9, 24, 40], "4x4": 9, "transform": 9, "given": [9, 21, 26, 30, 55], "rotat": 9, "translat": 9, "like": 9, "3x3": 9, "3": [9, 13, 21, 24, 30, 40], "element": [9, 30, 36, 41], "truncpareto_cdf": 9, "x": [9, 21, 22, 24, 40], "upper_bound": 9, "max_scal": 9, "action_rang": 9, "normalize_multipl": 9, "project_v_on_u": 9, "u": 9, "rais": [9, 22, 23], "valueerror": 9, "gram_schmidt": 9, "basis_vector": 9, "orthonorm": 9, "basi": 9, "span": 9, "dimens": [9, 22, 23, 26, 52], "linearli": 9, "If": [9, 21, 36, 41], "thei": 9, "aren": 9, "t": [9, 40], "you": 9, "re": [9, 38, 40], "go": [9, 24], "have": [9, 24, 40], "bad": 9, "space": [9, 12], "column": 9, "individu": 9, "project_vectors_on_eigenspac": 9, "orthonormal_basi": 9, "m": [9, 24, 30, 40], "einsum_ij_ij_i": 9, "b": 9, "einsum_ij_kj_ki": 9, "einsum_ijk_ik_ij": 9, "einsum_ikj_ik_ij": 9, "einsum_jk_ikl_ijl": 9, "einsum_ijk_ikl_ijl": 9, "einsum_ikj_ikl_ijl": 9, "einsum_ijk_ilk_ijl": 9, "log_path": 10, "workspac": 10, "bdai": 10, "log": [10, 29, 36], "log_fil": 10, "get_log_nam": 10, "where": [10, 24, 37, 41, 47], "store": [10, 26, 36], "log_param": 10, "log_search": 10, "iteration_numb": 10, "log_node_select": 10, "strategi": 10, "selectiontyp": [10, 13], "log_action_sampl": 10, "log_node_extens": 10, "best_id": 10, "dynamics_tim": 10, "log_node_prun": 10, "num_removed_nod": 10, "create_distance_log": 10, "create_reward_log": 10, "simple_progress_statist": 10, "simple_path_statist": 10, "xml_folder": 11, "pathlib": [11, 36], "__str__": [11, 13], "self": [11, 13, 21, 22, 24, 52], "__getattr__": 11, "name": [11, 24, 30, 39, 50, 55], "__setattr__": 11, "__name": 11, "__valu": 11, "implement": [11, 21, 22, 38, 40, 46, 47, 49, 52], "setattr": 11, "__delattr__": 11, "delattr": 11, "__contains__": 11, "kei": [11, 43], "parse_param": 11, "planner_exampl": 11, "load_yaml": 11, "yaml_path": 11, "load_bas": 11, "load_task": 11, "autofil": 11, "run_autofill_rul": 11, "rule_kei": 11, "typeifi": 11, "reset_se": 11, "set_se": 11, "reward_distance_scaling_sqrt": 11, "cleanup": 11, "parse_hardware_paramet": 11, "file_path": 11, "through": [12, 41], "final": [12, 26], "pose": [12, 29, 30], "path_data": 12, "end_id": 12, "shortest": 12, "shortest_path_data": 12, "root": 12, "closest": 12, "path_trajectori": 12, "shortest_path_trajectori": 12, "plot_search_result": 12, "clippingtyp": 13, "enum": 13, "enumer": 13, "deriv": 13, "defin": [13, 24, 40, 46, 47, 49, 51, 52], "clip": [13, 21], "2": [13, 14, 24, 26, 40, 52], "continu": [13, 21], "expert": 13, "action_type_directional_map": 13, "actionmod": 13, "relative_to_current_st": 13, "relative_to_previous_end_act": 13, "absolute_act": 13, "zero_order_hold": 13, "first_order_hold": 13, "set_default_device_and_dtyp": 13, "devic": 13, "dtype": [13, 41], "float32": 13, "convert_dtyp": 13, "attr": 13, "int_dtyp": 13, "int64": 13, "crossentropyconfig": 14, "cross": [14, 31], "entropi": [14, 31], "sigma_min": 14, "sigma_max": 14, "num_elit": [14, 24, 40], "horizon": [14, 38, 40], "8": [14, 24], "num_rollout": [14, 38, 40], "32": [14, 40], "noise_ramp": [14, 34], "5": [14, 26, 30, 31, 40, 49], "crossentropymethod": 14, "expert_act": 15, "expertsampl": [16, 18], "expert_sampl": [17, 18], "networksampl": 18, "model_nam": 18, "pt": 18, "state_norm_nam": 18, "state_norm": [18, 21, 22], "learner": 19, "replay_buff": [19, 20, 21], "encapsul": [20, 21], "deep": [20, 21], "determinist": [20, 21], "ddpg": [20, 21], "algorithm": 20, "take": 20, "care": [20, 24], "checkpoint": [20, 21, 22], "dure": 20, "train": [20, 21], "well": [20, 21], "pre": 20, "replaybuff": [20, 21, 23], "save_loc": 20, "load_loc": 20, "her": [20, 23], "solv": [20, 29], "spars": 20, "environ": [20, 23], "actor_act": [20, 21], "action_time_step": [20, 26], "relative_distances_to": 20, "data_contain": 20, "target_st": [20, 35], "reward_funct": [20, 23], "planner_explor": 20, "root_stat": 20, "update_norm": 20, "episod": [20, 22], "plai": 20, "experi": [20, 21, 23], "instead": 20, "everi": 20, "equal": 20, "what": 20, "encout": 20, "policy_rollout": 20, "temporari": [20, 23], "graph_rollout": 20, "set_demonstration_inject": 20, "final_success_r": 20, "num_epoch": 20, "50": 20, "resampl": [20, 23], "paper": 20, "state_action_training_data": 20, "num_trajectori": 20, "1000": 20, "discount_factor": [20, 21], "98": [20, 21], "pretrain": 20, "train_crit": 20, "eval_ag": 20, "agent": [20, 21], "run": [20, 21, 36], "learner_ev": 20, "averag": [20, 21], "success": 20, "rate": [20, 36], "locat": 20, "under": 20, "model_filenam": 20, "act": 21, "wrapper": [21, 24, 45], "util": [21, 28], "ddp": 21, "vanilla": 21, "soft_upd": 21, "nn": 21, "target": [21, 24, 29, 36, 41], "tau": 21, "soft": 21, "weight": 21, "shift": 21, "factor": 21, "copi": 21, "how": [21, 24], "much": 21, "valid": 21, "size_": 21, "size_a": 21, "nlayer": 21, "layer_width": 21, "256": 21, "lr": 21, "ep": [21, 22], "action_clip": 21, "process": [21, 36, 41, 45], "select_act": 21, "exploration_funct": 21, "input": [21, 22, 48, 51], "mode": 21, "nois": 21, "complet": 21, "probabl": [21, 23], "maximum": [21, 41], "forward": [21, 26], "pass": 21, "directli": 21, "net": 21, "backward_step": 21, "loss": 21, "backward": 21, "without": 21, "eval": 21, "noisi": 21, "update_target": 21, "transfer": 21, "fraction": 21, "f": [21, 22], "io": [21, 22, 26, 36, 42, 51, 52, 54], "bufferedwrit": [21, 22], "choic": 21, "output": [21, 26], "criticnetwork": 21, "train_actor_crit": 21, "actor_expert": 21, "reward_fun": 21, "batch_siz": [21, 23, 47], "her_prob": [21, 23], "replai": [21, 23], "buffer": [21, 36, 43, 54], "train_actor_imit": 21, "train_critic_imit": 21, "q_valu": 21, "enabl": [22, 36], "keep": [22, 55], "preprocess": 22, "consist": 22, "across": 22, "http": [22, 26], "github": 22, "com": 22, "openai": 22, "baselin": 22, "maintain": 22, "estim": 22, "mean": 22, "varianc": 22, "unit": 22, "alia": 22, "expect": 22, "3d": [22, 24, 40], "shape": [22, 24, 40, 47, 52], "timestep": [22, 38, 40, 51, 52], "assertionerror": 22, "check": [22, 23], "fail": [22, 23], "wrap_ob": 22, "wrap": 22, "conting": 22, "fuse": 22, "reset_next_temporary_id": 23, "achiev": 23, "recalcul": [23, 38, 40], "next_stat": 23, "assert": 23, "error": 23, "default_grid_section_color": 24, "02": 24, "14": 24, "44": 24, "default_grid_cell_color": 24, "27": 24, "55": 24, "default_sphere_subdivis": 24, "default_spline_color": 24, "default_best_spline_color": 24, "96": 24, "visermjmodel": 24, "viser": [24, 36, 41, 43, 45, 51, 52, 53, 54], "viserserv": [24, 36, 41, 51, 52, 54], "clienthandl": 24, "mjmodel": [24, 26, 29, 30, 51], "show_ground_plan": 24, "helper": [24, 36, 38, 40], "render": [24, 30], "mjcf": 24, "mjdata": [24, 30, 51], "add_geom": 24, "geom_nam": 24, "geom": 24, "scene": [24, 55], "tree": [24, 32, 55], "add_trac": 24, "num_trac": 24, "all_traces_rollout_s": [24, 43], "trace_nam": 24, "trace": [24, 30, 36, 40, 43, 53, 54], "done": 24, "one": [24, 45], "avoid": 24, "too": 24, "mani": 24, "thing": 24, "two": [24, 26], "elit": 24, "regular": 24, "ones": 24, "due": 24, "line": [24, 40], "need": [24, 40, 43, 51, 52], "handl": [24, 41, 44, 54], "per": 24, "remove_trac": 24, "set_data": 24, "write": [24, 36], "viewer": 24, "set_trac": 24, "sensor": [24, 26, 30, 40, 46, 47, 49, 52], "read": [24, 40, 52, 54], "num_trace_sensor": [24, 40], "single_rollout": 24, "group": [24, 26], "add_plan": 24, "quat": 24, "scenenodehandl": 24, "plane": 24, "posit": [24, 26, 30, 47], "quaternion": [24, 26], "materi": 24, "add_spher": 24, "radiu": 24, "sphere": 24, "add_cylind": 24, "height": 24, "cylind": [24, 49], "align": 24, "z": 24, "axi": 24, "add_box": 24, "add_capsul": 24, "capsul": 24, "add_ellipsoid": 24, "ellipsoid": 24, "add_mesh": 24, "vertic": [24, 30, 46, 47], "face": [24, 30], "triangular": 24, "mesh": [24, 30], "specifi": [24, 30], "add_splin": 24, "ellipsi": 24, "rgb": 24, "visibl": 24, "splinecatmullromhandl": 24, "spline": [24, 38, 40, 43], "add_seg": 24, "linesegmentshandl": 24, "orient": 24, "todo": 24, "bhung": 24, "support": [24, 26, 55], "differ": [24, 26], "kind": 24, "attach": [24, 55], "coord": 24, "respect": 24, "origin": [24, 47, 55], "can": [24, 36, 41, 52], "broadcast": 24, "width": 24, "pixel": 24, "whether": [24, 40], "rgba_float_to_int": 24, "rgba_float": 24, "rgba_int_to_float": 24, "rgba_int": 24, "set_mesh_color": 24, "trimesh": 24, "set_spline_posit": 24, "waypoint": 24, "set_segment_point": 24, "mppiconfig": 25, "predict": [25, 34], "sigma": [25, 31, 34], "temperatur": [25, 31], "get_joint_dimens": 26, "joint_id": 26, "arraylik": [26, 55], "state_address": 26, "state_length": 26, "joint": [26, 55], "address": 26, "correspond": 26, "decompose_state_dimens": 26, "decompos": 26, "split": 26, "veloc": [26, 46, 47, 49, 51, 52], "actuat": [26, 46, 47, 51, 52], "mujocopl": [26, 27, 30], "condit": [26, 47, 52], "appropri": 26, "singular": 26, "nx": 26, "num_env": 26, "next": 26, "intermedi": 26, "get_num_substep": 26, "time_step": [26, 30], "get_gradient_placehold": 26, "get_sub_stepped_gradi": 26, "num_substep": 26, "get_gradi": 26, "state_gradients_st": 26, "state_gradients_control": 26, "sensor_gradients_st": 26, "sensor_gradients_control": 26, "set_stat": [26, 30], "get_stat": 26, "set_act": 26, "get_act": 26, "update_sensor": 26, "get_sensor": 26, "measur": 26, "NOT": 26, "accler": 26, "extract": [26, 40], "mj_step1": 26, "see": 26, "link": 26, "below": 26, "more": 26, "detail": 26, "readthedoc": 26, "en": 26, "latest": 26, "program": 26, "simul": [26, 36, 38, 40, 51, 52], "html": 26, "highlight": 26, "loop": [26, 36], "nsensordata": [26, 40], "state_differ": [26, 35], "s1": [26, 35], "s2": [26, 35], "h": [26, 35], "finit": 26, "state_addit": 26, "integr": 26, "get_mass": 26, "get_quat_indic": 26, "field": [26, 36, 41, 45], "normalize_st": 26, "portion": 26, "get_collision_fre": 26, "collis": 26, "exist": 26, "visualize_st": [26, 30], "display_tim": [26, 30], "visualize_trajectori": [26, 30, 55], "xml_model_path": 27, "simpl": 27, "conveni": 27, "kinemat": 28, "iksolv": 29, "simplist": 29, "invers": 29, "solver": 29, "posture_task": 29, "postur": 29, "configuration_limit": 29, "limit": [29, 51, 52], "frame_nam": 29, "frame_typ": 29, "site": 29, "quadprog": 29, "position_cost": 29, "orientation_cost": 29, "posture_cost": 29, "pos_threshold": 29, "ori_threshold": 29, "dt": [29, 51, 52], "002": 29, "damp": 29, "frame_tasks_damp": 29, "__post_init__": 29, "dataclass": [29, 41, 52], "set_target_pos": 29, "target_pos": 29, "frame": 29, "q_ref": 29, "use_configuration_limit": 29, "logging_level": 29, "info": [29, 53, 54], "get_sensor_nam": 30, "sensorid": 30, "get_mesh_data": 30, "meshid": 30, "retriev": 30, "np": 30, "is_trace_sensor": 30, "count_trace_sensor": 30, "count": 30, "get_trace_sensor": 30, "set_mocap_pos": 30, "mocap_id": 30, "mocap": 30, "amount": 30, "undergo": 30, "particlefilterconfig": 31, "particlefilt": 31, "get_package_path": 32, "sourc": 32, "add_package_path": 33, "parser": 33, "multibodi": [33, 55], "pars": [33, 55], "predictivesamplingconfig": 34, "predictivesampl": 34, "scaled_distances_to": 35, "scale_dist": 35, "jacta_manipulation_path": 36, "simulationprocess": 36, "context": [36, 43, 51, 52, 54], "simulationiocontext": [36, 43], "multiprocess": [36, 41, 43], "thread": [36, 41, 51, 52], "simulation_loop": 36, "write_st": 36, "sim": 36, "controlprocess": 36, "server": [36, 41, 51, 52, 54], "iocontext": [36, 43, 51, 52, 54], "profil": [36, 42], "viserprofil": [36, 45], "execut": 36, "fix": 36, "flow": 36, "controllerprocess": 36, "try": 36, "except": 36, "encount": 36, "queue": 36, "print": 36, "gui": [36, 42, 53, 54], "clean": 36, "instanc": [36, 55], "termin": [36, 47, 51, 52], "control_loop": 36, "outer": 36, "frequenc": 36, "set_profiler_record": 36, "record": [36, 45], "turn": 36, "off": 36, "inner": 36, "write_control": 36, "out": 36, "write_trac": 36, "viserapp": 36, "init_control": 36, "predictive_sampl": 36, "init_task": 36, "cartpol": [36, 42, 50], "benchmark_dir": 36, "flip_profile_button_label": 36, "flip": 36, "button": 36, "label": 36, "disabl": 36, "setup_task": 36, "setup": 36, "spawn": 36, "setup_visu": 36, "stack": 36, "setup_context": 36, "overwritten": 36, "hardwar": [36, 43], "deploy": 36, "setup_phys": 36, "physic": [36, 51], "setup_control": 36, "control_config": 36, "controllerconfig": [36, 38, 39, 40], "task_config": 36, "control_cycle_callback": 36, "_": 36, "guievent": 36, "logic": 36, "via": [36, 41], "simulation_cycle_callback": 36, "simulation_reset_callback": 36, "control_selection_callback": 36, "event": [36, 41], "chang": 36, "doe": 36, "vi": 36, "task_selection_callback": 36, "enable_profiling_callback": 36, "config_download_callback": 36, "download": 36, "legs_sitting_po": 37, "legs_standing_po": 37, "arm_stowed_po": 37, "arm_unstowed_po": 37, "sitting_stowed_po": 37, "sitting_unstowed_po": 37, "standing_stowed_po": 37, "standing_unstowed_po": 37, "standing_height": 37, "52": 37, "arm_link_nam": 37, "arm_link_sh0": 37, "arm_link_sh1": 37, "arm_link_el0": 37, "arm_link_el1": 37, "arm_link_wr0": 37, "arm_link_wr1": 37, "leg_link_nam": 37, "front_left_hip": 37, "front_left_upper_leg": 37, "front_left_lower_leg": 37, "front_right_hip": 37, "arm_joint_nam": 37, "arm_sh0": 37, "arm_sh1": 37, "arm_el0": 37, "arm_el1": 37, "arm_wr0": 37, "arm_wr1": 37, "arm_f1x": 37, "leg_joint_nam": 37, "joint_front_left_hip_x": 37, "joint_front_left_hip_i": 37, "joint_front_left_kne": 37, "spot_body_slic": 37, "spot_quat_slic": 37, "spot_legs_slic": 37, "spot_arms_slic": 37, "spot_body_vel_slic": 37, "spot_angs_vel_slic": 37, "spot_legs_vel_slic": 37, "spot_arms_vel_slic": 37, "spot_state_ind": 37, "spot": 37, "relev": 37, "bodi": 37, "part": 37, "body_slic": 37, "quat_slic": 37, "legs_slic": 37, "arms_slic": 37, "body_vel_slic": 37, "angs_vel_slic": 37, "legs_vel_slic": 37, "arms_vel_slic": 37, "abstract": [38, 40, 52, 53], "num_timestep": [38, 40], "abstractmethod": [38, 52, 53], "rollout_tim": [38, 40], "signal": [38, 40], "appli": [38, 40], "make_model": [38, 40, 51, 52], "queri": [38, 40], "set_default_control": [38, 40], "get_registered_control": 39, "register_control": 39, "controller_typ": 39, "controller_config_typ": 39, "max_num_trac": 40, "num_nod": 40, "spline_ord": 40, "liter": 40, "slinear": 40, "cubic": 40, "control_freq": 40, "use_noise_ramp": 40, "spline_timestep": 40, "scipi": [40, 51, 52], "interp1d": [40, 51, 52], "update_splin": 40, "candid": 40, "update_trac": 40, "num_spline_point": 40, "num_physics_substep": 40, "make_splin": 40, "knot": 40, "possibli": 40, "extrapol": 40, "allow": 40, "default_slider_step_float": 41, "default_slider_step_int": 41, "goal_radiu": 41, "ui_config": 41, "slider": [41, 55], "parameter_nam": 41, "min": 41, "max": [41, 46, 47, 49], "decor": 41, "metadata": 41, "annot": 41, "minimum": 41, "match": 41, "other": 41, "variabl": 41, "constant": [41, 42], "create_gui_el": 41, "config_dict": 41, "manag": [41, 43], "dictproxi": 41, "config_updated_ev": 41, "synchron": 41, "config_lock": 41, "lock": 41, "guiinputhandl": 41, "recurs": 41, "want": [41, 55], "share": 41, "prevent": 41, "multipl": 41, "access": 41, "guihandl": 41, "here": 41, "destruct": 41, "acrobot": [42, 50], "cost_funct": [42, 50], "cylinder_push": [42, 50], "mujoco_task": [42, 46, 47, 49, 50], "app": [42, 43], "json_seri": 42, "controlbufferkei": 43, "statebufferkei": 43, "last_policy_output": 43, "qpo": 43, "qvel": 43, "xpo": 43, "xquat": 43, "hardwarestatebufferkei": 43, "spot_hardware_st": 43, "syncmanag": 43, "o": 43, "hardwareiocontext": 43, "configencod": 44, "skipkei": 44, "ensure_ascii": 44, "check_circular": 44, "allow_nan": 44, "sort_kei": 44, "indent": 44, "separ": 44, "json": 44, "jsonencod": 44, "custom": 44, "encod": 44, "obj": 44, "overrid": [44, 51], "decode_config": 44, "decod": 44, "string": [44, 55], "viserprofilerconfig": 45, "file": 45, "track": 45, "tracked_field": 45, "logfil": 45, "speed": 45, "statist": 45, "benchmark_funct": 45, "input_funct": 45, "benchmark": 45, "benchmark_wrapp": 45, "model_path": [46, 47, 49, 51], "xml": [46, 47, 49], "acrobotconfig": 46, "default_command": [46, 47, 49], "w_vertic": [46, 47], "10": [46, 47], "w_veloc": [46, 47], "w_control": [46, 47], "p_vertic": [46, 47], "cutoff_tim": [46, 47, 49], "15": [46, 47, 49], "mujocotask": [46, 47, 49, 51], "balanc": [46, 47, 49], "mjpc": [46, 47, 49], "sum": [46, 47, 49], "over": [46, 47, 49], "ha": [46, 47, 49], "four": [46, 47, 49], "vertical_rew": [46, 47], "penal": [46, 47, 49], "pole": [46, 47], "angl": [46, 47], "velocity_rew": [46, 47], "squar": [46, 47, 49], "angular": [46, 47], "control_rew": [46, 47], "sinc": [46, 47, 49], "penalti": [46, 47, 49], "neg": [46, 47, 49], "cartpoleconfig": 47, "w_center": 47, "p_center": 47, "centered_rew": 47, "cart": [47, 49], "repres": 47, "traj": 47, "is_termin": [47, 51, 52], "small": 47, "enough": 47, "smooth_l1_norm": 48, "p": 48, "quadratic_norm": 48, "cylinderpushconfig": 49, "push": 49, "w_pusher_proxim": 49, "w_pusher_veloc": 49, "w_cart_posit": 49, "pusher_goal_offset": 49, "25": 49, "cart_goal_posit": 49, "cylinderpush": 49, "pusher_reward": 49, "pusher": 49, "velocity_reward": 49, "goal_reward": 49, "get_registered_task": 50, "register_task": 50, "task_typ": 50, "task_config_typ": 50, "configt": [51, 52], "additional_task_info": [51, 52], "addit": [51, 52], "inform": [51, 52], "might": [51, 52], "child": 51, "actuator_ctrlrang": [51, 52], "default_idle_command": 51, "idl": 51, "command": 51, "create_visu": [51, 52], "text_handl": [51, 52], "sim_step": [51, 52], "num_model": [51, 52], "make": 51, "behavior": [51, 52], "modelt": 52, "mpc": 52, "lower_lim": 52, "upper_lim": 52, "protocol": 53, "update_visu": [53, 54], "visualization_freq": 54, "60": 54, "mjvisual": 54, "fk": 54, "default_prefix": 55, "default_color": 55, "visualize_and_control_model": 55, "directives_filenam": 55, "initial_joint_valu": 55, "lower_joint_limit": 55, "upper_joint_limit": 55, "manipul": 55, "trajectoryvisu": 55, "sim_time_step": 55, "set_directives_prefix": 55, "model_direct": 55, "modeldirect": 55, "prefix": 55, "renam": 55, "add_model": 55, "add_weld": 55, "front": 55, "set_color_of_model": 55, "multibodypl": 55, "model_inst": 55, "modelinstanceindex": 55, "scene_graph": 55, "scenegraph": 55, "recolor": 55, "modifi": 55, "just": 55, "setup_and_connect": 55, "piecewisepolynomi": 55, "firstorderhold": 55, "update_trajectori": 55, "show": 55}, "objects": {"": [[0, 0, 0, "-", "action_trajectory"], [1, 0, 0, "-", "cmaes"], [8, 0, 0, "-", "core"], [14, 0, 0, "-", "cross_entropy_method"], [17, 0, 0, "-", "experts"], [19, 0, 0, "-", "learning"], [24, 0, 0, "-", "model"], [25, 0, 0, "-", "mppi"], [26, 0, 0, "-", "mujoco_dynamics"], [28, 0, 0, "-", "mujoco_helpers"], [31, 0, 0, "-", "particle_filter"], [32, 0, 0, "-", "path_resolvers"], [33, 0, 0, "-", "paths"], [34, 0, 0, "-", "predictive_sampling"], [35, 0, 0, "-", "simulator_plant"], [42, 0, 0, "-", "viser_app"], [54, 0, 0, "-", "visualization"], [55, 0, 0, "-", "visuals"]], "action_trajectory": [[0, 1, 1, "", "create_action_trajectories"], [0, 1, 1, "", "create_action_trajectory"]], "cmaes": [[1, 2, 1, "", "CMAES"], [1, 2, 1, "", "CMAESConfig"]], "cmaes.CMAES": [[1, 3, 1, "", "action"], [1, 3, 1, "", "update_action"]], "cmaes.CMAESConfig": [[1, 4, 1, "", "max_iter"]], "core": [[2, 0, 0, "-", "action_sampler"], [3, 0, 0, "-", "clipping_method"], [4, 0, 0, "-", "data_collection"], [5, 0, 0, "-", "graph"], [6, 0, 0, "-", "graph_visuals"], [7, 0, 0, "-", "graph_worker"], [9, 0, 0, "-", "linear_algebra"], [10, 0, 0, "-", "logger"], [11, 0, 0, "-", "parameter_container"], [12, 0, 0, "-", "planner"], [13, 0, 0, "-", "types"]], "core.action_sampler": [[2, 2, 1, "", "ActionSampler"]], "core.action_sampler.ActionSampler": [[2, 3, 1, "", "__call__"], [2, 3, 1, "", "continuation_directions"], [2, 3, 1, "", "directions_actions"], [2, 3, 1, "", "gradient_actions"], [2, 3, 1, "", "initialize"], [2, 3, 1, "", "proximity_directions"], [2, 3, 1, "", "random_directions"], [2, 3, 1, "", "reset"]], "core.clipping_method": [[3, 1, 1, "", "box_scaling"], [3, 1, 1, "", "clip_actions"]], "core.data_collection": [[4, 1, 1, "", "find_latest_model_path"], [4, 1, 1, "", "load_model"], [4, 1, 1, "", "save_model"]], "core.graph": [[5, 2, 1, "", "Graph"], [5, 1, 1, "", "sample_feasible_states"], [5, 1, 1, "", "sample_random_goal_states"], [5, 1, 1, "", "sample_random_start_states"], [5, 1, 1, "", "sample_random_states"], [5, 1, 1, "", "sample_random_sub_goal_states"], [5, 1, 1, "", "sample_related_sub_goal_states"]], "core.graph.Graph": [[5, 3, 1, "", "activate_all_nodes"], [5, 3, 1, "", "add_child_ids_to_node"], [5, 3, 1, "", "add_nodes"], [5, 3, 1, "", "add_total_rewards"], [5, 3, 1, "", "calculate_distance_rewards"], [5, 3, 1, "", "calculate_proximity_rewards"], [5, 3, 1, "", "calculate_reachability_rewards"], [5, 3, 1, "", "change_sub_goal_states"], [5, 3, 1, "", "deactivate_nodes"], [5, 3, 1, "", "destroy"], [5, 3, 1, "", "get_active_main_ids"], [5, 3, 1, "", "get_best_id"], [5, 3, 1, "", "get_root_ids"], [5, 3, 1, "", "is_better_than"], [5, 3, 1, "", "is_worse_than"], [5, 3, 1, "", "load"], [5, 5, 1, "", "node_id_to_search_index_map"], [5, 3, 1, "", "number_of_nodes"], [5, 3, 1, "", "reachability_cache"], [5, 3, 1, "", "reset"], [5, 3, 1, "", "reset_sub_goal_states"], [5, 3, 1, "", "save"], [5, 3, 1, "", "set_goal_state"], [5, 3, 1, "", "set_start_states"], [5, 3, 1, "", "shortest_path_to"], [5, 3, 1, "", "sorted_progress_ids"]], "core.graph_visuals": [[6, 1, 1, "", "color_gradient"], [6, 1, 1, "", "display_3d_graph"], [6, 1, 1, "", "display_colormap_point_cloud"], [6, 1, 1, "", "display_edges_by_category"], [6, 1, 1, "", "display_point_cloud"], [6, 1, 1, "", "display_segments"], [6, 1, 1, "", "rgba_palette"]], "core.graph_worker": [[7, 2, 1, "", "CommonGoalWorkerInterface"], [7, 2, 1, "", "ExplorerWorker"], [7, 2, 1, "", "GraphWorker"], [7, 2, 1, "", "ParallelGoalsWorker"], [7, 2, 1, "", "RelatedGoalWorker"], [7, 2, 1, "", "RolloutWorker"], [7, 2, 1, "", "SingleGoalWorker"], [7, 1, 1, "", "inspect_action_type"], [7, 1, 1, "", "pareto_distribution"]], "core.graph_worker.ExplorerWorker": [[7, 3, 1, "", "work"]], "core.graph_worker.GraphWorker": [[7, 3, 1, "", "callback_and_progress_check"], [7, 3, 1, "", "get_end_actions"], [7, 3, 1, "", "get_progress_info"], [7, 3, 1, "", "get_start_actions"], [7, 3, 1, "", "node_extension"], [7, 3, 1, "", "node_pruning"], [7, 3, 1, "", "node_replacement"], [7, 3, 1, "", "node_selection"], [7, 3, 1, "", "percentage_range"], [7, 3, 1, "", "reset"]], "core.graph_worker.ParallelGoalsWorker": [[7, 3, 1, "", "reset_finished_workers"], [7, 3, 1, "", "try_to_reallocate_workers"], [7, 3, 1, "", "update_extension_lengths"], [7, 3, 1, "", "update_pareto_parameters"], [7, 3, 1, "", "work"]], "core.graph_worker.RelatedGoalWorker": [[7, 3, 1, "", "work"]], "core.graph_worker.RolloutWorker": [[7, 3, 1, "", "work"]], "core.graph_worker.SingleGoalWorker": [[7, 3, 1, "", "work"]], "core.linear_algebra": [[9, 1, 1, "", "einsum_ij_ij_i"], [9, 1, 1, "", "einsum_ij_kj_ki"], [9, 1, 1, "", "einsum_ijk_ik_ij"], [9, 1, 1, "", "einsum_ijk_ikl_ijl"], [9, 1, 1, "", "einsum_ijk_ilk_ijl"], [9, 1, 1, "", "einsum_ikj_ik_ij"], [9, 1, 1, "", "einsum_ikj_ikl_ijl"], [9, 1, 1, "", "einsum_jk_ikl_ijl"], [9, 1, 1, "", "gram_schmidt"], [9, 1, 1, "", "max_scaling"], [9, 1, 1, "", "normalize"], [9, 1, 1, "", "normalize_multiple"], [9, 1, 1, "", "project_v_on_u"], [9, 1, 1, "", "project_vectors_on_eigenspace"], [9, 1, 1, "", "transformation_matrix"], [9, 1, 1, "", "truncpareto_cdf"]], "core.logger": [[10, 2, 1, "", "Logger"]], "core.logger.Logger": [[10, 3, 1, "", "create_distance_log"], [10, 3, 1, "", "create_reward_log"], [10, 3, 1, "", "get_log_name"], [10, 3, 1, "", "log_action_sampler"], [10, 3, 1, "", "log_node_extension"], [10, 3, 1, "", "log_node_pruning"], [10, 3, 1, "", "log_node_selection"], [10, 3, 1, "", "log_params"], [10, 3, 1, "", "log_search"], [10, 3, 1, "", "reset"], [10, 3, 1, "", "simple_path_statistics"], [10, 3, 1, "", "simple_progress_statistics"]], "core.parameter_container": [[11, 2, 1, "", "ParameterContainer"], [11, 1, 1, "", "parse_hardware_parameters"]], "core.parameter_container.ParameterContainer": [[11, 3, 1, "", "__contains__"], [11, 3, 1, "", "__delattr__"], [11, 3, 1, "", "__getattr__"], [11, 3, 1, "", "__setattr__"], [11, 3, 1, "", "__str__"], [11, 3, 1, "", "autofill"], [11, 3, 1, "", "cleanup"], [11, 3, 1, "", "load_base"], [11, 3, 1, "", "load_task"], [11, 3, 1, "", "load_yaml"], [11, 3, 1, "", "parse_params"], [11, 3, 1, "", "reset_seed"], [11, 3, 1, "", "reward_distance_scaling_sqrt"], [11, 3, 1, "", "run_autofill_rule"], [11, 3, 1, "", "set_seed"], [11, 3, 1, "", "typeify"], [11, 3, 1, "", "update"], [11, 5, 1, "", "xml_folder"]], "core.planner": [[12, 2, 1, "", "Planner"]], "core.planner.Planner": [[12, 3, 1, "", "path_data"], [12, 3, 1, "", "path_trajectory"], [12, 3, 1, "", "plot_search_results"], [12, 3, 1, "", "reset"], [12, 3, 1, "", "search"], [12, 3, 1, "", "shortest_path_data"], [12, 3, 1, "", "shortest_path_trajectory"]], "core.types": [[13, 6, 1, "", "ACTION_TYPE_DIRECTIONAL_MAP"], [13, 2, 1, "", "ActionMode"], [13, 2, 1, "", "ActionType"], [13, 2, 1, "", "ClippingType"], [13, 2, 1, "", "ControlType"], [13, 2, 1, "", "SelectionType"], [13, 1, 1, "", "convert_dtype"], [13, 1, 1, "", "set_default_device_and_dtype"]], "core.types.ActionMode": [[13, 4, 1, "", "ABSOLUTE_ACTION"], [13, 4, 1, "", "RELATIVE_TO_PREVIOUS_END_ACTION"], [13, 3, 1, "", "__str__"]], "core.types.ActionType": [[13, 4, 1, "", "CONTINUATION"], [13, 4, 1, "", "EXPERT"], [13, 4, 1, "", "GRADIENT"], [13, 4, 1, "", "PROXIMITY"], [13, 3, 1, "", "__str__"]], "core.types.ClippingType": [[13, 4, 1, "", "SCALE"], [13, 3, 1, "", "__str__"]], "core.types.ControlType": [[13, 4, 1, "", "FIRST_ORDER_HOLD"], [13, 3, 1, "", "__str__"]], "core.types.SelectionType": [[13, 4, 1, "", "LAST"], [13, 3, 1, "", "__str__"]], "cross_entropy_method": [[14, 2, 1, "", "CrossEntropyConfig"], [14, 2, 1, "", "CrossEntropyMethod"]], "cross_entropy_method.CrossEntropyConfig": [[14, 4, 1, "", "horizon"], [14, 4, 1, "", "noise_ramp"], [14, 4, 1, "", "num_elites"], [14, 4, 1, "", "num_rollouts"], [14, 4, 1, "", "sigma_max"]], "cross_entropy_method.CrossEntropyMethod": [[14, 3, 1, "", "action"], [14, 3, 1, "", "update_action"]], "experts": [[15, 0, 0, "-", "expert"], [16, 0, 0, "-", "expert_sampler"], [18, 0, 0, "-", "network"]], "experts.expert": [[15, 2, 1, "", "Expert"]], "experts.expert.Expert": [[15, 3, 1, "", "expert_actions"]], "experts.expert_sampler": [[16, 2, 1, "", "ExpertSampler"]], "experts.expert_sampler.ExpertSampler": [[16, 3, 1, "", "callback"]], "experts.network": [[18, 2, 1, "", "NetworkSampler"]], "experts.network.NetworkSampler": [[18, 3, 1, "", "callback"]], "learning": [[20, 0, 0, "-", "learner"], [21, 0, 0, "-", "networks"], [22, 0, 0, "-", "normalizer"], [23, 0, 0, "-", "replay_buffer"]], "learning.learner": [[20, 2, 1, "", "Learner"]], "learning.learner.Learner": [[20, 3, 1, "", "actor_actions"], [20, 3, 1, "", "eval_agent"], [20, 3, 1, "", "graph_rollout"], [20, 3, 1, "", "load_models"], [20, 3, 1, "", "planner_exploration"], [20, 3, 1, "", "policy_rollout"], [20, 3, 1, "", "pretrain"], [20, 3, 1, "", "relative_distances_to"], [20, 3, 1, "", "reward_function"], [20, 3, 1, "", "save_models"], [20, 3, 1, "", "set_demonstration_injection"], [20, 3, 1, "", "state_action_training_data"], [20, 3, 1, "", "train"], [20, 3, 1, "", "update_norm"]], "learning.networks": [[21, 2, 1, "", "Actor"], [21, 2, 1, "", "Critic"], [21, 2, 1, "", "CriticNetwork"], [21, 2, 1, "", "DDP"], [21, 1, 1, "", "soft_update"], [21, 1, 1, "", "train_actor_critic"], [21, 1, 1, "", "train_actor_imitation"], [21, 1, 1, "", "train_critic_imitation"]], "learning.networks.Actor": [[21, 3, 1, "", "__call__"], [21, 3, 1, "", "backward_step"], [21, 3, 1, "", "eval"], [21, 3, 1, "", "load"], [21, 3, 1, "", "save"], [21, 3, 1, "", "target"], [21, 3, 1, "", "train"], [21, 3, 1, "", "update_target"]], "learning.networks.Critic": [[21, 3, 1, "", "backward_step"], [21, 3, 1, "", "load"], [21, 3, 1, "", "save"], [21, 3, 1, "", "target"], [21, 3, 1, "", "update_target"]], "learning.normalizer": [[22, 2, 1, "", "Normalizer"]], "learning.normalizer.Normalizer": [[22, 3, 1, "", "load"], [22, 3, 1, "", "normalize"], [22, 3, 1, "", "save"], [22, 3, 1, "", "update"], [22, 3, 1, "", "wrap_obs"]], "learning.replay_buffer": [[23, 2, 1, "", "ReplayBuffer"]], "learning.replay_buffer.ReplayBuffer": [[23, 3, 1, "", "add_nodes"], [23, 3, 1, "", "reset"], [23, 3, 1, "", "reset_next_temporary_id"], [23, 3, 1, "", "sampling"]], "model": [[24, 6, 1, "", "DEFAULT_BEST_SPLINE_COLOR"], [24, 6, 1, "", "DEFAULT_GRID_CELL_COLOR"], [24, 6, 1, "", "DEFAULT_GRID_SECTION_COLOR"], [24, 6, 1, "", "DEFAULT_SPHERE_SUBDIVISIONS"], [24, 6, 1, "", "DEFAULT_SPLINE_COLOR"], [24, 2, 1, "", "ViserMjModel"], [24, 1, 1, "", "add_box"], [24, 1, 1, "", "add_capsule"], [24, 1, 1, "", "add_cylinder"], [24, 1, 1, "", "add_ellipsoid"], [24, 1, 1, "", "add_mesh"], [24, 1, 1, "", "add_plane"], [24, 1, 1, "", "add_segments"], [24, 1, 1, "", "add_sphere"], [24, 1, 1, "", "add_spline"], [24, 1, 1, "", "rgba_float_to_int"], [24, 1, 1, "", "rgba_int_to_float"], [24, 1, 1, "", "set_mesh_color"], [24, 1, 1, "", "set_segment_points"], [24, 1, 1, "", "set_spline_positions"]], "model.ViserMjModel": [[24, 3, 1, "", "add_geom"], [24, 3, 1, "", "add_traces"], [24, 3, 1, "", "remove"], [24, 3, 1, "", "remove_traces"], [24, 3, 1, "", "set_data"], [24, 3, 1, "", "set_traces"]], "mppi": [[25, 2, 1, "", "MPPI"], [25, 2, 1, "", "MPPIConfig"]], "mppi.MPPI": [[25, 3, 1, "", "action"], [25, 3, 1, "", "update_action"]], "mppi.MPPIConfig": [[25, 4, 1, "", "temperature"]], "mujoco_dynamics": [[26, 2, 1, "", "MujocoPlant"], [26, 1, 1, "", "decompose_state_dimensions"], [26, 1, 1, "", "get_joint_dimensions"]], "mujoco_dynamics.MujocoPlant": [[26, 3, 1, "", "dynamics"], [26, 3, 1, "", "get_action"], [26, 3, 1, "", "get_collision_free"], [26, 3, 1, "", "get_gradient_placeholders"], [26, 3, 1, "", "get_gradients"], [26, 3, 1, "", "get_mass"], [26, 3, 1, "", "get_num_substeps"], [26, 3, 1, "", "get_quat_indices"], [26, 3, 1, "", "get_sensor"], [26, 3, 1, "", "get_state"], [26, 3, 1, "", "get_sub_stepped_gradients"], [26, 3, 1, "", "initialize"], [26, 3, 1, "", "normalize_state"], [26, 3, 1, "", "reset"], [26, 3, 1, "", "set_action"], [26, 3, 1, "", "set_state"], [26, 3, 1, "", "state_addition"], [26, 3, 1, "", "state_difference"], [26, 3, 1, "", "update_sensor"], [26, 3, 1, "", "visualize_state"], [26, 3, 1, "", "visualize_trajectory"]], "mujoco_helpers": [[27, 0, 0, "-", "dynamics"], [29, 0, 0, "-", "kinematics"], [30, 0, 0, "-", "utils"]], "mujoco_helpers.dynamics": [[27, 2, 1, "", "MujocoPlant"]], "mujoco_helpers.kinematics": [[29, 2, 1, "", "IkSolver"]], "mujoco_helpers.kinematics.IkSolver": [[29, 3, 1, "", "__post_init__"], [29, 5, 1, "", "configuration"], [29, 5, 1, "", "configuration_limit"], [29, 4, 1, "", "damping"], [29, 4, 1, "", "dt"], [29, 4, 1, "", "frame_names"], [29, 4, 1, "", "frame_tasks_damping"], [29, 4, 1, "", "frame_type"], [29, 4, 1, "", "max_iters"], [29, 4, 1, "", "model"], [29, 4, 1, "", "ori_threshold"], [29, 4, 1, "", "orientation_cost"], [29, 4, 1, "", "pos_threshold"], [29, 4, 1, "", "position_cost"], [29, 4, 1, "", "posture_cost"], [29, 3, 1, "", "set_target_pose"], [29, 3, 1, "", "solve"], [29, 4, 1, "", "solver"]], "mujoco_helpers.utils": [[30, 1, 1, "", "count_trace_sensors"], [30, 1, 1, "", "get_mesh_data"], [30, 1, 1, "", "get_sensor_name"], [30, 1, 1, "", "get_trace_sensors"], [30, 1, 1, "", "is_trace_sensor"], [30, 1, 1, "", "set_mocap_pose"], [30, 1, 1, "", "set_mocap_poses"], [30, 1, 1, "", "set_state"], [30, 1, 1, "", "visualize_state"], [30, 1, 1, "", "visualize_trajectory"]], "particle_filter": [[31, 2, 1, "", "ParticleFilter"], [31, 2, 1, "", "ParticleFilterConfig"]], "particle_filter.ParticleFilter": [[31, 3, 1, "", "action"], [31, 3, 1, "", "update_action"]], "particle_filter.ParticleFilterConfig": [[31, 4, 1, "", "temperature"]], "path_resolvers": [[32, 1, 1, "", "get_package_path"]], "paths": [[33, 1, 1, "", "add_package_paths"]], "predictive_sampling": [[34, 2, 1, "", "PredictiveSampling"], [34, 2, 1, "", "PredictiveSamplingConfig"]], "predictive_sampling.PredictiveSampling": [[34, 3, 1, "", "action"], [34, 3, 1, "", "update_action"]], "predictive_sampling.PredictiveSamplingConfig": [[34, 4, 1, "", "noise_ramp"]], "simulator_plant": [[35, 2, 1, "", "SimulatorPlant"], [35, 1, 1, "", "scale_distances"], [35, 1, 1, "", "scaled_distances_to"]], "simulator_plant.SimulatorPlant": [[35, 3, 1, "", "state_difference"]], "viser_app": [[36, 0, 0, "-", "app"], [37, 0, 0, "-", "constants"], [39, 0, 0, "-", "controllers"], [41, 0, 0, "-", "gui"], [43, 0, 0, "-", "io"], [44, 0, 0, "-", "json_serializer"], [45, 0, 0, "-", "profiler"], [50, 0, 0, "-", "tasks"], [53, 0, 0, "-", "visualization"]], "viser_app.app": [[36, 2, 1, "", "ControlProcess"], [36, 6, 1, "", "JACTA_MANIPULATION_PATH"], [36, 2, 1, "", "SimulationProcess"], [36, 2, 1, "", "ViserApp"]], "viser_app.app.ControlProcess": [[36, 3, 1, "", "control_loop"], [36, 3, 1, "", "remove"], [36, 3, 1, "", "set_profiler_recording"], [36, 3, 1, "", "terminate"], [36, 3, 1, "", "write_controls"], [36, 3, 1, "", "write_traces"]], "viser_app.app.SimulationProcess": [[36, 3, 1, "", "reset"], [36, 3, 1, "", "write_states"]], "viser_app.app.ViserApp": [[36, 3, 1, "", "config_download_callback"], [36, 3, 1, "", "control_cycle_callback"], [36, 3, 1, "", "control_selection_callback"], [36, 3, 1, "", "enable_profiling_callback"], [36, 3, 1, "", "setup_context"], [36, 3, 1, "", "setup_controller"], [36, 3, 1, "", "setup_physics"], [36, 3, 1, "", "setup_task"], [36, 3, 1, "", "setup_visualization"], [36, 3, 1, "", "simulation_cycle_callback"], [36, 3, 1, "", "simulation_reset_callback"], [36, 3, 1, "", "task_selection_callback"]], "viser_app.constants": [[37, 6, 1, "", "ARM_JOINT_NAMES"], [37, 6, 1, "", "ARM_LINK_NAMES"], [37, 6, 1, "", "ARM_STOWED_POS"], [37, 6, 1, "", "ARM_UNSTOWED_POS"], [37, 6, 1, "", "LEGS_SITTING_POS"], [37, 6, 1, "", "LEGS_STANDING_POS"], [37, 6, 1, "", "LEG_JOINT_NAMES"], [37, 6, 1, "", "LEG_LINK_NAMES"], [37, 6, 1, "", "SITTING_STOWED_POS"], [37, 6, 1, "", "SITTING_UNSTOWED_POS"], [37, 6, 1, "", "SPOT_ANGS_VEL_SLICE"], [37, 6, 1, "", "SPOT_ARMS_SLICE"], [37, 6, 1, "", "SPOT_ARMS_VEL_SLICE"], [37, 6, 1, "", "SPOT_BODY_SLICE"], [37, 6, 1, "", "SPOT_BODY_VEL_SLICE"], [37, 6, 1, "", "SPOT_LEGS_SLICE"], [37, 6, 1, "", "SPOT_LEGS_VEL_SLICE"], [37, 6, 1, "", "SPOT_QUAT_SLICE"], [37, 2, 1, "", "SPOT_STATE_INDS"], [37, 6, 1, "", "STANDING_HEIGHT"], [37, 6, 1, "", "STANDING_STOWED_POS"], [37, 6, 1, "", "STANDING_UNSTOWED_POS"]], "viser_app.constants.SPOT_STATE_INDS": [[37, 4, 1, "", "angs_vel_slice"], [37, 4, 1, "", "arms_slice"], [37, 4, 1, "", "arms_vel_slice"], [37, 4, 1, "", "body_vel_slice"], [37, 4, 1, "", "legs_slice"], [37, 4, 1, "", "legs_vel_slice"], [37, 4, 1, "", "quat_slice"]], "viser_app.controllers": [[38, 0, 0, "-", "controller"], [39, 1, 1, "", "get_registered_controllers"], [39, 1, 1, "", "register_controller"], [40, 0, 0, "-", "sampling_base"]], "viser_app.controllers.controller": [[38, 2, 1, "", "Controller"], [38, 2, 1, "", "ControllerConfig"]], "viser_app.controllers.controller.Controller": [[38, 3, 1, "", "action"], [38, 5, 1, "", "controls"], [38, 3, 1, "", "make_models"], [38, 3, 1, "", "reset"], [38, 5, 1, "", "rollout_times"], [38, 3, 1, "", "set_default_controls"], [38, 3, 1, "", "update_action"]], "viser_app.controllers.sampling_base": [[40, 6, 1, "", "MAX_NUM_TRACES"], [40, 2, 1, "", "SamplingBase"], [40, 2, 1, "", "SamplingBaseConfig"], [40, 1, 1, "", "make_spline"]], "viser_app.controllers.sampling_base.SamplingBase": [[40, 3, 1, "", "action"], [40, 5, 1, "", "controls"], [40, 3, 1, "", "make_models"], [40, 3, 1, "", "reset"], [40, 5, 1, "", "rollout_times"], [40, 3, 1, "", "set_default_controls"], [40, 5, 1, "", "spline"], [40, 5, 1, "", "spline_timesteps"], [40, 3, 1, "", "update_action"], [40, 3, 1, "", "update_spline"], [40, 3, 1, "", "update_traces"]], "viser_app.controllers.sampling_base.SamplingBaseConfig": [[40, 4, 1, "", "control_freq"], [40, 4, 1, "", "num_nodes"], [40, 4, 1, "", "num_rollouts"], [40, 4, 1, "", "spline_order"], [40, 4, 1, "", "use_noise_ramp"]], "viser_app.gui": [[41, 6, 1, "", "DEFAULT_SLIDER_STEP_FLOAT"], [41, 6, 1, "", "DEFAULT_SLIDER_STEP_INT"], [41, 6, 1, "", "GOAL_RADIUS"], [41, 6, 1, "", "UI_CONFIG"], [41, 1, 1, "", "create_gui_elements"], [41, 1, 1, "", "slider"]], "viser_app.io": [[43, 2, 1, "", "ControlBufferKeys"], [43, 2, 1, "", "HardwareIOContext"], [43, 2, 1, "", "HardwareStateBufferKeys"], [43, 2, 1, "", "IOContext"], [43, 2, 1, "", "SimulationIOContext"], [43, 2, 1, "", "StateBufferKeys"]], "viser_app.io.ControlBufferKeys": [[43, 4, 1, "", "spline"], [43, 4, 1, "", "traces"]], "viser_app.io.StateBufferKeys": [[43, 4, 1, "", "last_policy_output"], [43, 4, 1, "", "qpos"], [43, 4, 1, "", "qvel"], [43, 4, 1, "", "time"], [43, 4, 1, "", "xpos"], [43, 4, 1, "", "xquat"]], "viser_app.json_serializer": [[44, 2, 1, "", "ConfigEncoder"], [44, 1, 1, "", "decode_config"]], "viser_app.profiler": [[45, 2, 1, "", "ViserProfiler"], [45, 2, 1, "", "ViserProfilerConfig"]], "viser_app.profiler.ViserProfiler": [[45, 3, 1, "", "benchmark_wrapper"]], "viser_app.tasks": [[46, 0, 0, "-", "acrobot"], [47, 0, 0, "-", "cartpole"], [48, 0, 0, "-", "cost_functions"], [49, 0, 0, "-", "cylinder_push"], [50, 1, 1, "", "get_registered_tasks"], [51, 0, 0, "-", "mujoco_task"], [50, 1, 1, "", "register_task"], [52, 0, 0, "-", "task"]], "viser_app.tasks.acrobot": [[46, 2, 1, "", "Acrobot"], [46, 2, 1, "", "AcrobotConfig"], [46, 6, 1, "", "MODEL_PATH"]], "viser_app.tasks.acrobot.Acrobot": [[46, 3, 1, "", "reset"]], "viser_app.tasks.acrobot.AcrobotConfig": [[46, 4, 1, "", "cutoff_time"], [46, 4, 1, "", "p_vertical"], [46, 4, 1, "", "w_control"], [46, 4, 1, "", "w_velocity"], [46, 4, 1, "", "w_vertical"]], "viser_app.tasks.cartpole": [[47, 2, 1, "", "Cartpole"], [47, 2, 1, "", "CartpoleConfig"], [47, 6, 1, "", "MODEL_PATH"]], "viser_app.tasks.cartpole.Cartpole": [[47, 3, 1, "", "is_terminated"], [47, 3, 1, "", "reset"]], "viser_app.tasks.cartpole.CartpoleConfig": [[47, 4, 1, "", "cutoff_time"], [47, 4, 1, "", "p_centered"], [47, 4, 1, "", "p_vertical"], [47, 4, 1, "", "w_centered"], [47, 4, 1, "", "w_control"], [47, 4, 1, "", "w_velocity"], [47, 4, 1, "", "w_vertical"]], "viser_app.tasks.cost_functions": [[48, 1, 1, "", "quadratic_norm"], [48, 1, 1, "", "smooth_l1_norm"]], "viser_app.tasks.cylinder_push": [[49, 2, 1, "", "CylinderPush"], [49, 2, 1, "", "CylinderPushConfig"], [49, 6, 1, "", "MODEL_PATH"]], "viser_app.tasks.cylinder_push.CylinderPush": [[49, 3, 1, "", "reset"]], "viser_app.tasks.cylinder_push.CylinderPushConfig": [[49, 4, 1, "", "cart_goal_position"], [49, 4, 1, "", "cutoff_time"], [49, 4, 1, "", "pusher_goal_offset"], [49, 4, 1, "", "w_cart_position"], [49, 4, 1, "", "w_pusher_proximity"], [49, 4, 1, "", "w_pusher_velocity"]], "viser_app.tasks.mujoco_task": [[51, 2, 1, "", "MujocoTask"]], "viser_app.tasks.mujoco_task.MujocoTask": [[51, 5, 1, "", "actuator_ctrlrange"], [51, 3, 1, "", "create_visualization"], [51, 5, 1, "", "default_idle_command"], [51, 5, 1, "", "dt"], [51, 3, 1, "", "is_terminated"], [51, 3, 1, "", "make_models"], [51, 5, 1, "", "nu"], [51, 3, 1, "", "reset"], [51, 3, 1, "", "rollout"], [51, 3, 1, "", "sim_step"]], "viser_app.tasks.task": [[52, 6, 1, "", "ConfigT"], [52, 6, 1, "", "ModelT"], [52, 2, 1, "", "Task"], [52, 2, 1, "", "TaskConfig"]], "viser_app.tasks.task.Task": [[52, 5, 1, "", "actuator_ctrlrange"], [52, 5, 1, "", "additional_task_info"], [52, 3, 1, "", "create_visualization"], [52, 5, 1, "", "dt"], [52, 3, 1, "", "is_terminated"], [52, 3, 1, "", "make_models"], [52, 3, 1, "", "reset"], [52, 3, 1, "", "reward"], [52, 3, 1, "", "rollout"], [52, 3, 1, "", "sim_step"]], "viser_app.visualization": [[53, 2, 1, "", "Visualization"]], "viser_app.visualization.Visualization": [[53, 3, 1, "", "remove"]], "visualization": [[54, 2, 1, "", "MjVisualization"], [54, 6, 1, "", "VISUALIZATION_FREQ"]], "visualization.MjVisualization": [[54, 3, 1, "", "remove"]], "visuals": [[55, 6, 1, "", "DEFAULT_COLORS"], [55, 6, 1, "", "DEFAULT_PREFIXES"], [55, 2, 1, "", "TrajectoryVisualizer"], [55, 1, 1, "", "visualize_and_control_model"]], "visuals.TrajectoryVisualizer": [[55, 5, 1, "", "meshcat"], [55, 3, 1, "", "set_color_of_models"], [55, 3, 1, "", "set_directives_prefix"], [55, 3, 1, "", "setup_and_connect"], [55, 3, 1, "", "show"], [55, 3, 1, "", "update_trajectories"], [55, 3, 1, "", "visualize_trajectories"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"]}, "titleterms": {"action_trajectori": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55], "content": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55], "cmae": 1, "core": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "action_sampl": 2, "clipping_method": 3, "data_collect": 4, "graph": 5, "graph_visu": 6, "graph_work": 7, "submodul": [8, 17, 19, 28, 39, 42, 50], "linear_algebra": 9, "logger": 10, "parameter_contain": 11, "planner": 12, "type": 13, "cross_entropy_method": 14, "expert": [15, 16, 17, 18], "expert_sampl": 16, "network": [18, 21], "learn": [19, 20, 21, 22, 23], "learner": 20, "normal": 22, "replay_buff": 23, "model": 24, "mppi": 25, "mujoco_dynam": 26, "mujoco_help": [27, 28, 29, 30], "dynam": 27, "kinemat": 29, "util": 30, "particle_filt": 31, "path_resolv": 32, "path": 33, "predictive_sampl": 34, "simulator_pl": 35, "viser_app": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "app": 36, "constant": 37, "control": [38, 39, 40], "packag": [39, 50], "sampling_bas": 40, "gui": 41, "subpackag": 42, "io": 43, "json_seri": 44, "profil": 45, "task": [46, 47, 48, 49, 50, 51, 52], "acrobot": 46, "cartpol": 47, "cost_funct": 48, "cylinder_push": 49, "mujoco_task": 51, "visual": [53, 54, 55], "jacta": 56, "manipul": 56}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"action_trajectory": [[0, "module-action_trajectory"]], "Module Contents": [[0, "module-contents"], [1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [18, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [40, "module-contents"], [41, "module-contents"], [43, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [51, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"]], "cmaes": [[1, "module-cmaes"]], "core.action_sampler": [[2, "module-core.action_sampler"]], "core.clipping_method": [[3, "module-core.clipping_method"]], "core.data_collection": [[4, "module-core.data_collection"]], "core.graph": [[5, "module-core.graph"]], "core.graph_visuals": [[6, "module-core.graph_visuals"]], "core.graph_worker": [[7, "module-core.graph_worker"]], "core": [[8, "module-core"]], "Submodules": [[8, "submodules"], [17, "submodules"], [19, "submodules"], [28, "submodules"], [39, "submodules"], [42, "submodules"], [50, "submodules"]], "core.linear_algebra": [[9, "module-core.linear_algebra"]], "core.logger": [[10, "module-core.logger"]], "core.parameter_container": [[11, "module-core.parameter_container"]], "core.planner": [[12, "module-core.planner"]], "core.types": [[13, "module-core.types"]], "cross_entropy_method": [[14, "module-cross_entropy_method"]], "experts.expert": [[15, "module-experts.expert"]], "experts.expert_sampler": [[16, "module-experts.expert_sampler"]], "experts": [[17, "module-experts"]], "experts.network": [[18, "module-experts.network"]], "learning": [[19, "module-learning"]], "learning.learner": [[20, "module-learning.learner"]], "learning.networks": [[21, "module-learning.networks"]], "learning.normalizer": [[22, "module-learning.normalizer"]], "learning.replay_buffer": [[23, "module-learning.replay_buffer"]], "model": [[24, "module-model"]], "mppi": [[25, "module-mppi"]], "mujoco_dynamics": [[26, "module-mujoco_dynamics"]], "mujoco_helpers.dynamics": [[27, "module-mujoco_helpers.dynamics"]], "mujoco_helpers": [[28, "module-mujoco_helpers"]], "mujoco_helpers.kinematics": [[29, "module-mujoco_helpers.kinematics"]], "mujoco_helpers.utils": [[30, "module-mujoco_helpers.utils"]], "particle_filter": [[31, "module-particle_filter"]], "path_resolvers": [[32, "module-path_resolvers"]], "paths": [[33, "module-paths"]], "predictive_sampling": [[34, "module-predictive_sampling"]], "simulator_plant": [[35, "module-simulator_plant"]], "viser_app.app": [[36, "module-viser_app.app"]], "viser_app.constants": [[37, "module-viser_app.constants"]], "viser_app.controllers.controller": [[38, "module-viser_app.controllers.controller"]], "viser_app.controllers": [[39, "module-viser_app.controllers"]], "Package Contents": [[39, "package-contents"], [50, "package-contents"]], "viser_app.controllers.sampling_base": [[40, "module-viser_app.controllers.sampling_base"]], "viser_app.gui": [[41, "module-viser_app.gui"]], "viser_app": [[42, "module-viser_app"]], "Subpackages": [[42, "subpackages"]], "viser_app.io": [[43, "module-viser_app.io"]], "viser_app.json_serializer": [[44, "module-viser_app.json_serializer"]], "viser_app.profiler": [[45, "module-viser_app.profiler"]], "viser_app.tasks.acrobot": [[46, "module-viser_app.tasks.acrobot"]], "viser_app.tasks.cartpole": [[47, "module-viser_app.tasks.cartpole"]], "viser_app.tasks.cost_functions": [[48, "module-viser_app.tasks.cost_functions"]], "viser_app.tasks.cylinder_push": [[49, "module-viser_app.tasks.cylinder_push"]], "viser_app.tasks": [[50, "module-viser_app.tasks"]], "viser_app.tasks.mujoco_task": [[51, "module-viser_app.tasks.mujoco_task"]], "viser_app.tasks.task": [[52, "module-viser_app.tasks.task"]], "viser_app.visualization": [[53, "module-viser_app.visualization"]], "visualization": [[54, "module-visualization"]], "visuals": [[55, "module-visuals"]], "jacta-manipulation": [[56, "jacta-manipulation"]]}, "indexentries": {"action_trajectory": [[0, "module-action_trajectory"]], "create_action_trajectories() (in module action_trajectory)": [[0, "action_trajectory.create_action_trajectories"]], "create_action_trajectory() (in module action_trajectory)": [[0, "action_trajectory.create_action_trajectory"]], "module": [[0, "module-action_trajectory"], [1, "module-cmaes"], [2, "module-core.action_sampler"], [3, "module-core.clipping_method"], [4, "module-core.data_collection"], [5, "module-core.graph"], [6, "module-core.graph_visuals"], [7, "module-core.graph_worker"], [8, "module-core"], [9, "module-core.linear_algebra"], [10, "module-core.logger"], [11, "module-core.parameter_container"], [12, "module-core.planner"], [13, "module-core.types"], [14, "module-cross_entropy_method"], [15, "module-experts.expert"], [16, "module-experts.expert_sampler"], [17, "module-experts"], [18, "module-experts.network"], [19, "module-learning"], [20, "module-learning.learner"], [21, "module-learning.networks"], [22, "module-learning.normalizer"], [23, "module-learning.replay_buffer"], [24, "module-model"], [25, "module-mppi"], [26, "module-mujoco_dynamics"], [27, "module-mujoco_helpers.dynamics"], [28, "module-mujoco_helpers"], [29, "module-mujoco_helpers.kinematics"], [30, "module-mujoco_helpers.utils"], [31, "module-particle_filter"], [32, "module-path_resolvers"], [33, "module-paths"], [34, "module-predictive_sampling"], [35, "module-simulator_plant"], [36, "module-viser_app.app"], [37, "module-viser_app.constants"], [38, "module-viser_app.controllers.controller"], [39, "module-viser_app.controllers"], [40, "module-viser_app.controllers.sampling_base"], [41, "module-viser_app.gui"], [42, "module-viser_app"], [43, "module-viser_app.io"], [44, "module-viser_app.json_serializer"], [45, "module-viser_app.profiler"], [46, "module-viser_app.tasks.acrobot"], [47, "module-viser_app.tasks.cartpole"], [48, "module-viser_app.tasks.cost_functions"], [49, "module-viser_app.tasks.cylinder_push"], [50, "module-viser_app.tasks"], [51, "module-viser_app.tasks.mujoco_task"], [52, "module-viser_app.tasks.task"], [53, "module-viser_app.visualization"], [54, "module-visualization"], [55, "module-visuals"]], "cmaes (class in cmaes)": [[1, "cmaes.CMAES"]], "cmaesconfig (class in cmaes)": [[1, "cmaes.CMAESConfig"]], "action() (cmaes.cmaes method)": [[1, "cmaes.CMAES.action"]], "cmaes": [[1, "module-cmaes"]], "max_iter (cmaes.cmaesconfig attribute)": [[1, "cmaes.CMAESConfig.max_iter"]], "update_action() (cmaes.cmaes method)": [[1, "cmaes.CMAES.update_action"]], "actionsampler (class in core.action_sampler)": [[2, "core.action_sampler.ActionSampler"]], "__call__() (core.action_sampler.actionsampler method)": [[2, "core.action_sampler.ActionSampler.__call__"]], "continuation_directions() (core.action_sampler.actionsampler method)": [[2, "core.action_sampler.ActionSampler.continuation_directions"]], "core.action_sampler": [[2, "module-core.action_sampler"]], "directions_actions() (core.action_sampler.actionsampler method)": [[2, "core.action_sampler.ActionSampler.directions_actions"]], "gradient_actions() (core.action_sampler.actionsampler method)": [[2, "core.action_sampler.ActionSampler.gradient_actions"]], "initialize() (core.action_sampler.actionsampler method)": [[2, "core.action_sampler.ActionSampler.initialize"]], "proximity_directions() (core.action_sampler.actionsampler method)": [[2, "core.action_sampler.ActionSampler.proximity_directions"]], "random_directions() (core.action_sampler.actionsampler method)": [[2, "core.action_sampler.ActionSampler.random_directions"]], "reset() (core.action_sampler.actionsampler method)": [[2, "core.action_sampler.ActionSampler.reset"]], "box_scaling() (in module core.clipping_method)": [[3, "core.clipping_method.box_scaling"]], "clip_actions() (in module core.clipping_method)": [[3, "core.clipping_method.clip_actions"]], "core.clipping_method": [[3, "module-core.clipping_method"]], "core.data_collection": [[4, "module-core.data_collection"]], "find_latest_model_path() (in module core.data_collection)": [[4, "core.data_collection.find_latest_model_path"]], "load_model() (in module core.data_collection)": [[4, "core.data_collection.load_model"]], "save_model() (in module core.data_collection)": [[4, "core.data_collection.save_model"]], "graph (class in core.graph)": [[5, "core.graph.Graph"]], "activate_all_nodes() (core.graph.graph method)": [[5, "core.graph.Graph.activate_all_nodes"]], "add_child_ids_to_node() (core.graph.graph method)": [[5, "core.graph.Graph.add_child_ids_to_node"]], "add_nodes() (core.graph.graph method)": [[5, "core.graph.Graph.add_nodes"]], "add_total_rewards() (core.graph.graph method)": [[5, "core.graph.Graph.add_total_rewards"]], "calculate_distance_rewards() (core.graph.graph method)": [[5, "core.graph.Graph.calculate_distance_rewards"]], "calculate_proximity_rewards() (core.graph.graph method)": [[5, "core.graph.Graph.calculate_proximity_rewards"]], "calculate_reachability_rewards() (core.graph.graph method)": [[5, "core.graph.Graph.calculate_reachability_rewards"]], "change_sub_goal_states() (core.graph.graph method)": [[5, "core.graph.Graph.change_sub_goal_states"]], "core.graph": [[5, "module-core.graph"]], "deactivate_nodes() (core.graph.graph method)": [[5, "core.graph.Graph.deactivate_nodes"]], "destroy() (core.graph.graph method)": [[5, "core.graph.Graph.destroy"]], "get_active_main_ids() (core.graph.graph method)": [[5, "core.graph.Graph.get_active_main_ids"]], "get_best_id() (core.graph.graph method)": [[5, "core.graph.Graph.get_best_id"]], "get_root_ids() (core.graph.graph method)": [[5, "core.graph.Graph.get_root_ids"]], "is_better_than() (core.graph.graph method)": [[5, "core.graph.Graph.is_better_than"]], "is_worse_than() (core.graph.graph method)": [[5, "core.graph.Graph.is_worse_than"]], "load() (core.graph.graph method)": [[5, "core.graph.Graph.load"]], "node_id_to_search_index_map (core.graph.graph property)": [[5, "core.graph.Graph.node_id_to_search_index_map"]], "number_of_nodes() (core.graph.graph method)": [[5, "core.graph.Graph.number_of_nodes"]], "reachability_cache() (core.graph.graph method)": [[5, "core.graph.Graph.reachability_cache"]], "reset() (core.graph.graph method)": [[5, "core.graph.Graph.reset"]], "reset_sub_goal_states() (core.graph.graph method)": [[5, "core.graph.Graph.reset_sub_goal_states"]], "sample_feasible_states() (in module core.graph)": [[5, "core.graph.sample_feasible_states"]], "sample_random_goal_states() (in module core.graph)": [[5, "core.graph.sample_random_goal_states"]], "sample_random_start_states() (in module core.graph)": [[5, "core.graph.sample_random_start_states"]], "sample_random_states() (in module core.graph)": [[5, "core.graph.sample_random_states"]], "sample_random_sub_goal_states() (in module core.graph)": [[5, "core.graph.sample_random_sub_goal_states"]], "sample_related_sub_goal_states() (in module core.graph)": [[5, "core.graph.sample_related_sub_goal_states"]], "save() (core.graph.graph method)": [[5, "core.graph.Graph.save"]], "set_goal_state() (core.graph.graph method)": [[5, "core.graph.Graph.set_goal_state"]], "set_start_states() (core.graph.graph method)": [[5, "core.graph.Graph.set_start_states"]], "shortest_path_to() (core.graph.graph method)": [[5, "core.graph.Graph.shortest_path_to"]], "sorted_progress_ids() (core.graph.graph method)": [[5, "core.graph.Graph.sorted_progress_ids"]], "color_gradient() (in module core.graph_visuals)": [[6, "core.graph_visuals.color_gradient"]], "core.graph_visuals": [[6, "module-core.graph_visuals"]], "display_3d_graph() (in module core.graph_visuals)": [[6, "core.graph_visuals.display_3d_graph"]], "display_colormap_point_cloud() (in module core.graph_visuals)": [[6, "core.graph_visuals.display_colormap_point_cloud"]], "display_edges_by_category() (in module core.graph_visuals)": [[6, "core.graph_visuals.display_edges_by_category"]], "display_point_cloud() (in module core.graph_visuals)": [[6, "core.graph_visuals.display_point_cloud"]], "display_segments() (in module core.graph_visuals)": [[6, "core.graph_visuals.display_segments"]], "rgba_palette() (in module core.graph_visuals)": [[6, "core.graph_visuals.rgba_palette"]], "commongoalworkerinterface (class in core.graph_worker)": [[7, "core.graph_worker.CommonGoalWorkerInterface"]], "explorerworker (class in core.graph_worker)": [[7, "core.graph_worker.ExplorerWorker"]], "graphworker (class in core.graph_worker)": [[7, "core.graph_worker.GraphWorker"]], "parallelgoalsworker (class in core.graph_worker)": [[7, "core.graph_worker.ParallelGoalsWorker"]], "relatedgoalworker (class in core.graph_worker)": [[7, "core.graph_worker.RelatedGoalWorker"]], "rolloutworker (class in core.graph_worker)": [[7, "core.graph_worker.RolloutWorker"]], "singlegoalworker (class in core.graph_worker)": [[7, "core.graph_worker.SingleGoalWorker"]], "callback_and_progress_check() (core.graph_worker.graphworker method)": [[7, "core.graph_worker.GraphWorker.callback_and_progress_check"]], "core.graph_worker": [[7, "module-core.graph_worker"]], "get_end_actions() (core.graph_worker.graphworker method)": [[7, "core.graph_worker.GraphWorker.get_end_actions"]], "get_progress_info() (core.graph_worker.graphworker method)": [[7, "core.graph_worker.GraphWorker.get_progress_info"]], "get_start_actions() (core.graph_worker.graphworker method)": [[7, "core.graph_worker.GraphWorker.get_start_actions"]], "inspect_action_type() (in module core.graph_worker)": [[7, "core.graph_worker.inspect_action_type"]], "node_extension() (core.graph_worker.graphworker method)": [[7, "core.graph_worker.GraphWorker.node_extension"]], "node_pruning() (core.graph_worker.graphworker method)": [[7, "core.graph_worker.GraphWorker.node_pruning"]], "node_replacement() (core.graph_worker.graphworker method)": [[7, "core.graph_worker.GraphWorker.node_replacement"]], "node_selection() (core.graph_worker.graphworker method)": [[7, "core.graph_worker.GraphWorker.node_selection"]], "pareto_distribution() (in module core.graph_worker)": [[7, "core.graph_worker.pareto_distribution"]], "percentage_range() (core.graph_worker.graphworker method)": [[7, "core.graph_worker.GraphWorker.percentage_range"]], "reset() (core.graph_worker.graphworker method)": [[7, "core.graph_worker.GraphWorker.reset"]], "reset_finished_workers() (core.graph_worker.parallelgoalsworker method)": [[7, "core.graph_worker.ParallelGoalsWorker.reset_finished_workers"]], "try_to_reallocate_workers() (core.graph_worker.parallelgoalsworker method)": [[7, "core.graph_worker.ParallelGoalsWorker.try_to_reallocate_workers"]], "update_extension_lengths() (core.graph_worker.parallelgoalsworker method)": [[7, "core.graph_worker.ParallelGoalsWorker.update_extension_lengths"]], "update_pareto_parameters() (core.graph_worker.parallelgoalsworker method)": [[7, "core.graph_worker.ParallelGoalsWorker.update_pareto_parameters"]], "work() (core.graph_worker.explorerworker method)": [[7, "core.graph_worker.ExplorerWorker.work"]], "work() (core.graph_worker.parallelgoalsworker method)": [[7, "core.graph_worker.ParallelGoalsWorker.work"]], "work() (core.graph_worker.relatedgoalworker method)": [[7, "core.graph_worker.RelatedGoalWorker.work"]], "work() (core.graph_worker.rolloutworker method)": [[7, "core.graph_worker.RolloutWorker.work"]], "work() (core.graph_worker.singlegoalworker method)": [[7, "core.graph_worker.SingleGoalWorker.work"]], "core": [[8, "module-core"]], "core.linear_algebra": [[9, "module-core.linear_algebra"]], "einsum_ij_ij_i() (in module core.linear_algebra)": [[9, "core.linear_algebra.einsum_ij_ij_i"]], "einsum_ij_kj_ki() (in module core.linear_algebra)": [[9, "core.linear_algebra.einsum_ij_kj_ki"]], "einsum_ijk_ik_ij() (in module core.linear_algebra)": [[9, "core.linear_algebra.einsum_ijk_ik_ij"]], "einsum_ijk_ikl_ijl() (in module core.linear_algebra)": [[9, "core.linear_algebra.einsum_ijk_ikl_ijl"]], "einsum_ijk_ilk_ijl() (in module core.linear_algebra)": [[9, "core.linear_algebra.einsum_ijk_ilk_ijl"]], "einsum_ikj_ik_ij() (in module core.linear_algebra)": [[9, "core.linear_algebra.einsum_ikj_ik_ij"]], "einsum_ikj_ikl_ijl() (in module core.linear_algebra)": [[9, "core.linear_algebra.einsum_ikj_ikl_ijl"]], "einsum_jk_ikl_ijl() (in module core.linear_algebra)": [[9, "core.linear_algebra.einsum_jk_ikl_ijl"]], "gram_schmidt() (in module core.linear_algebra)": [[9, "core.linear_algebra.gram_schmidt"]], "max_scaling() (in module core.linear_algebra)": [[9, "core.linear_algebra.max_scaling"]], "normalize() (in module core.linear_algebra)": [[9, "core.linear_algebra.normalize"]], "normalize_multiple() (in module core.linear_algebra)": [[9, "core.linear_algebra.normalize_multiple"]], "project_v_on_u() (in module core.linear_algebra)": [[9, "core.linear_algebra.project_v_on_u"]], "project_vectors_on_eigenspace() (in module core.linear_algebra)": [[9, "core.linear_algebra.project_vectors_on_eigenspace"]], "transformation_matrix() (in module core.linear_algebra)": [[9, "core.linear_algebra.transformation_matrix"]], "truncpareto_cdf() (in module core.linear_algebra)": [[9, "core.linear_algebra.truncpareto_cdf"]], "logger (class in core.logger)": [[10, "core.logger.Logger"]], "core.logger": [[10, "module-core.logger"]], "create_distance_log() (core.logger.logger method)": [[10, "core.logger.Logger.create_distance_log"]], "create_reward_log() (core.logger.logger method)": [[10, "core.logger.Logger.create_reward_log"]], "get_log_name() (core.logger.logger method)": [[10, "core.logger.Logger.get_log_name"]], "log_action_sampler() (core.logger.logger method)": [[10, "core.logger.Logger.log_action_sampler"]], "log_node_extension() (core.logger.logger method)": [[10, "core.logger.Logger.log_node_extension"]], "log_node_pruning() (core.logger.logger method)": [[10, "core.logger.Logger.log_node_pruning"]], "log_node_selection() (core.logger.logger method)": [[10, "core.logger.Logger.log_node_selection"]], "log_params() (core.logger.logger method)": [[10, "core.logger.Logger.log_params"]], "log_search() (core.logger.logger method)": [[10, "core.logger.Logger.log_search"]], "reset() (core.logger.logger method)": [[10, "core.logger.Logger.reset"]], "simple_path_statistics() (core.logger.logger method)": [[10, "core.logger.Logger.simple_path_statistics"]], "simple_progress_statistics() (core.logger.logger method)": [[10, "core.logger.Logger.simple_progress_statistics"]], "parametercontainer (class in core.parameter_container)": [[11, "core.parameter_container.ParameterContainer"]], "__contains__() (core.parameter_container.parametercontainer method)": [[11, "core.parameter_container.ParameterContainer.__contains__"]], "__delattr__() (core.parameter_container.parametercontainer method)": [[11, "core.parameter_container.ParameterContainer.__delattr__"]], "__getattr__() (core.parameter_container.parametercontainer method)": [[11, "core.parameter_container.ParameterContainer.__getattr__"]], "__setattr__() (core.parameter_container.parametercontainer method)": [[11, "core.parameter_container.ParameterContainer.__setattr__"]], "__str__() (core.parameter_container.parametercontainer method)": [[11, "core.parameter_container.ParameterContainer.__str__"]], "autofill() (core.parameter_container.parametercontainer method)": [[11, "core.parameter_container.ParameterContainer.autofill"]], "cleanup() (core.parameter_container.parametercontainer method)": [[11, "core.parameter_container.ParameterContainer.cleanup"]], "core.parameter_container": [[11, "module-core.parameter_container"]], "load_base() (core.parameter_container.parametercontainer method)": [[11, "core.parameter_container.ParameterContainer.load_base"]], "load_task() (core.parameter_container.parametercontainer method)": [[11, "core.parameter_container.ParameterContainer.load_task"]], "load_yaml() (core.parameter_container.parametercontainer method)": [[11, "core.parameter_container.ParameterContainer.load_yaml"]], "parse_hardware_parameters() (in module core.parameter_container)": [[11, "core.parameter_container.parse_hardware_parameters"]], "parse_params() (core.parameter_container.parametercontainer method)": [[11, "core.parameter_container.ParameterContainer.parse_params"]], "reset_seed() (core.parameter_container.parametercontainer method)": [[11, "core.parameter_container.ParameterContainer.reset_seed"]], "reward_distance_scaling_sqrt() (core.parameter_container.parametercontainer method)": [[11, "core.parameter_container.ParameterContainer.reward_distance_scaling_sqrt"]], "run_autofill_rule() (core.parameter_container.parametercontainer method)": [[11, "core.parameter_container.ParameterContainer.run_autofill_rule"]], "set_seed() (core.parameter_container.parametercontainer method)": [[11, "core.parameter_container.ParameterContainer.set_seed"]], "typeify() (core.parameter_container.parametercontainer method)": [[11, "core.parameter_container.ParameterContainer.typeify"]], "update() (core.parameter_container.parametercontainer method)": [[11, "core.parameter_container.ParameterContainer.update"]], "xml_folder (core.parameter_container.parametercontainer property)": [[11, "core.parameter_container.ParameterContainer.xml_folder"]], "planner (class in core.planner)": [[12, "core.planner.Planner"]], "core.planner": [[12, "module-core.planner"]], "path_data() (core.planner.planner method)": [[12, "core.planner.Planner.path_data"]], "path_trajectory() (core.planner.planner method)": [[12, "core.planner.Planner.path_trajectory"]], "plot_search_results() (core.planner.planner method)": [[12, "core.planner.Planner.plot_search_results"]], "reset() (core.planner.planner method)": [[12, "core.planner.Planner.reset"]], "search() (core.planner.planner method)": [[12, "core.planner.Planner.search"]], "shortest_path_data() (core.planner.planner method)": [[12, "core.planner.Planner.shortest_path_data"]], "shortest_path_trajectory() (core.planner.planner method)": [[12, "core.planner.Planner.shortest_path_trajectory"]], "absolute_action (core.types.actionmode attribute)": [[13, "core.types.ActionMode.ABSOLUTE_ACTION"]], "action_type_directional_map (in module core.types)": [[13, "core.types.ACTION_TYPE_DIRECTIONAL_MAP"]], "actionmode (class in core.types)": [[13, "core.types.ActionMode"]], "actiontype (class in core.types)": [[13, "core.types.ActionType"]], "continuation (core.types.actiontype attribute)": [[13, "core.types.ActionType.CONTINUATION"]], "clippingtype (class in core.types)": [[13, "core.types.ClippingType"]], "controltype (class in core.types)": [[13, "core.types.ControlType"]], "expert (core.types.actiontype attribute)": [[13, "core.types.ActionType.EXPERT"]], "first_order_hold (core.types.controltype attribute)": [[13, "core.types.ControlType.FIRST_ORDER_HOLD"]], "gradient (core.types.actiontype attribute)": [[13, "core.types.ActionType.GRADIENT"]], "last (core.types.selectiontype attribute)": [[13, "core.types.SelectionType.LAST"]], "proximity (core.types.actiontype attribute)": [[13, "core.types.ActionType.PROXIMITY"]], "relative_to_previous_end_action (core.types.actionmode attribute)": [[13, "core.types.ActionMode.RELATIVE_TO_PREVIOUS_END_ACTION"]], "scale (core.types.clippingtype attribute)": [[13, "core.types.ClippingType.SCALE"]], "selectiontype (class in core.types)": [[13, "core.types.SelectionType"]], "__str__() (core.types.actionmode method)": [[13, "core.types.ActionMode.__str__"]], "__str__() (core.types.actiontype method)": [[13, "core.types.ActionType.__str__"]], "__str__() (core.types.clippingtype method)": [[13, "core.types.ClippingType.__str__"]], "__str__() (core.types.controltype method)": [[13, "core.types.ControlType.__str__"]], "__str__() (core.types.selectiontype method)": [[13, "core.types.SelectionType.__str__"]], "convert_dtype() (in module core.types)": [[13, "core.types.convert_dtype"]], "core.types": [[13, "module-core.types"]], "set_default_device_and_dtype() (in module core.types)": [[13, "core.types.set_default_device_and_dtype"]], "crossentropyconfig (class in cross_entropy_method)": [[14, "cross_entropy_method.CrossEntropyConfig"]], "crossentropymethod (class in cross_entropy_method)": [[14, "cross_entropy_method.CrossEntropyMethod"]], "action() (cross_entropy_method.crossentropymethod method)": [[14, "cross_entropy_method.CrossEntropyMethod.action"]], "cross_entropy_method": [[14, "module-cross_entropy_method"]], "horizon (cross_entropy_method.crossentropyconfig attribute)": [[14, "cross_entropy_method.CrossEntropyConfig.horizon"]], "noise_ramp (cross_entropy_method.crossentropyconfig attribute)": [[14, "cross_entropy_method.CrossEntropyConfig.noise_ramp"]], "num_elites (cross_entropy_method.crossentropyconfig attribute)": [[14, "cross_entropy_method.CrossEntropyConfig.num_elites"]], "num_rollouts (cross_entropy_method.crossentropyconfig attribute)": [[14, "cross_entropy_method.CrossEntropyConfig.num_rollouts"]], "sigma_max (cross_entropy_method.crossentropyconfig attribute)": [[14, "cross_entropy_method.CrossEntropyConfig.sigma_max"]], "update_action() (cross_entropy_method.crossentropymethod method)": [[14, "cross_entropy_method.CrossEntropyMethod.update_action"]], "expert (class in experts.expert)": [[15, "experts.expert.Expert"]], "expert_actions() (experts.expert.expert method)": [[15, "experts.expert.Expert.expert_actions"]], "experts.expert": [[15, "module-experts.expert"]], "expertsampler (class in experts.expert_sampler)": [[16, "experts.expert_sampler.ExpertSampler"]], "callback() (experts.expert_sampler.expertsampler method)": [[16, "experts.expert_sampler.ExpertSampler.callback"]], "experts.expert_sampler": [[16, "module-experts.expert_sampler"]], "experts": [[17, "module-experts"]], "networksampler (class in experts.network)": [[18, "experts.network.NetworkSampler"]], "callback() (experts.network.networksampler method)": [[18, "experts.network.NetworkSampler.callback"]], "experts.network": [[18, "module-experts.network"]], "learning": [[19, "module-learning"]], "learner (class in learning.learner)": [[20, "learning.learner.Learner"]], "actor_actions() (learning.learner.learner method)": [[20, "learning.learner.Learner.actor_actions"]], "eval_agent() (learning.learner.learner method)": [[20, "learning.learner.Learner.eval_agent"]], "graph_rollout() (learning.learner.learner method)": [[20, "learning.learner.Learner.graph_rollout"]], "learning.learner": [[20, "module-learning.learner"]], "load_models() (learning.learner.learner method)": [[20, "learning.learner.Learner.load_models"]], "planner_exploration() (learning.learner.learner method)": [[20, "learning.learner.Learner.planner_exploration"]], "policy_rollout() (learning.learner.learner method)": [[20, "learning.learner.Learner.policy_rollout"]], "pretrain() (learning.learner.learner method)": [[20, "learning.learner.Learner.pretrain"]], "relative_distances_to() (learning.learner.learner method)": [[20, "learning.learner.Learner.relative_distances_to"]], "reward_function() (learning.learner.learner method)": [[20, "learning.learner.Learner.reward_function"]], "save_models() (learning.learner.learner method)": [[20, "learning.learner.Learner.save_models"]], "set_demonstration_injection() (learning.learner.learner method)": [[20, "learning.learner.Learner.set_demonstration_injection"]], "state_action_training_data() (learning.learner.learner method)": [[20, "learning.learner.Learner.state_action_training_data"]], "train() (learning.learner.learner method)": [[20, "learning.learner.Learner.train"]], "update_norm() (learning.learner.learner method)": [[20, "learning.learner.Learner.update_norm"]], "actor (class in learning.networks)": [[21, "learning.networks.Actor"]], "critic (class in learning.networks)": [[21, "learning.networks.Critic"]], "criticnetwork (class in learning.networks)": [[21, "learning.networks.CriticNetwork"]], "ddp (class in learning.networks)": [[21, "learning.networks.DDP"]], "__call__() (learning.networks.actor method)": [[21, "learning.networks.Actor.__call__"]], "backward_step() (learning.networks.actor method)": [[21, "learning.networks.Actor.backward_step"]], "backward_step() (learning.networks.critic method)": [[21, "learning.networks.Critic.backward_step"]], "eval() (learning.networks.actor method)": [[21, "learning.networks.Actor.eval"]], "learning.networks": [[21, "module-learning.networks"]], "load() (learning.networks.actor method)": [[21, "learning.networks.Actor.load"]], "load() (learning.networks.critic method)": [[21, "learning.networks.Critic.load"]], "save() (learning.networks.actor method)": [[21, "learning.networks.Actor.save"]], "save() (learning.networks.critic method)": [[21, "learning.networks.Critic.save"]], "soft_update() (in module learning.networks)": [[21, "learning.networks.soft_update"]], "target() (learning.networks.actor method)": [[21, "learning.networks.Actor.target"]], "target() (learning.networks.critic method)": [[21, "learning.networks.Critic.target"]], "train() (learning.networks.actor method)": [[21, "learning.networks.Actor.train"]], "train_actor_critic() (in module learning.networks)": [[21, "learning.networks.train_actor_critic"]], "train_actor_imitation() (in module learning.networks)": [[21, "learning.networks.train_actor_imitation"]], "train_critic_imitation() (in module learning.networks)": [[21, "learning.networks.train_critic_imitation"]], "update_target() (learning.networks.actor method)": [[21, "learning.networks.Actor.update_target"]], "update_target() (learning.networks.critic method)": [[21, "learning.networks.Critic.update_target"]], "normalizer (class in learning.normalizer)": [[22, "learning.normalizer.Normalizer"]], "learning.normalizer": [[22, "module-learning.normalizer"]], "load() (learning.normalizer.normalizer method)": [[22, "learning.normalizer.Normalizer.load"]], "normalize() (learning.normalizer.normalizer method)": [[22, "learning.normalizer.Normalizer.normalize"]], "save() (learning.normalizer.normalizer method)": [[22, "learning.normalizer.Normalizer.save"]], "update() (learning.normalizer.normalizer method)": [[22, "learning.normalizer.Normalizer.update"]], "wrap_obs() (learning.normalizer.normalizer method)": [[22, "learning.normalizer.Normalizer.wrap_obs"]], "replaybuffer (class in learning.replay_buffer)": [[23, "learning.replay_buffer.ReplayBuffer"]], "add_nodes() (learning.replay_buffer.replaybuffer method)": [[23, "learning.replay_buffer.ReplayBuffer.add_nodes"]], "learning.replay_buffer": [[23, "module-learning.replay_buffer"]], "reset() (learning.replay_buffer.replaybuffer method)": [[23, "learning.replay_buffer.ReplayBuffer.reset"]], "reset_next_temporary_id() (learning.replay_buffer.replaybuffer method)": [[23, "learning.replay_buffer.ReplayBuffer.reset_next_temporary_id"]], "sampling() (learning.replay_buffer.replaybuffer method)": [[23, "learning.replay_buffer.ReplayBuffer.sampling"]], "default_best_spline_color (in module model)": [[24, "model.DEFAULT_BEST_SPLINE_COLOR"]], "default_grid_cell_color (in module model)": [[24, "model.DEFAULT_GRID_CELL_COLOR"]], "default_grid_section_color (in module model)": [[24, "model.DEFAULT_GRID_SECTION_COLOR"]], "default_sphere_subdivisions (in module model)": [[24, "model.DEFAULT_SPHERE_SUBDIVISIONS"]], "default_spline_color (in module model)": [[24, "model.DEFAULT_SPLINE_COLOR"]], "visermjmodel (class in model)": [[24, "model.ViserMjModel"]], "add_box() (in module model)": [[24, "model.add_box"]], "add_capsule() (in module model)": [[24, "model.add_capsule"]], "add_cylinder() (in module model)": [[24, "model.add_cylinder"]], "add_ellipsoid() (in module model)": [[24, "model.add_ellipsoid"]], "add_geom() (model.visermjmodel method)": [[24, "model.ViserMjModel.add_geom"]], "add_mesh() (in module model)": [[24, "model.add_mesh"]], "add_plane() (in module model)": [[24, "model.add_plane"]], "add_segments() (in module model)": [[24, "model.add_segments"]], "add_sphere() (in module model)": [[24, "model.add_sphere"]], "add_spline() (in module model)": [[24, "model.add_spline"]], "add_traces() (model.visermjmodel method)": [[24, "model.ViserMjModel.add_traces"]], "model": [[24, "module-model"]], "remove() (model.visermjmodel method)": [[24, "model.ViserMjModel.remove"]], "remove_traces() (model.visermjmodel method)": [[24, "model.ViserMjModel.remove_traces"]], "rgba_float_to_int() (in module model)": [[24, "model.rgba_float_to_int"]], "rgba_int_to_float() (in module model)": [[24, "model.rgba_int_to_float"]], "set_data() (model.visermjmodel method)": [[24, "model.ViserMjModel.set_data"]], "set_mesh_color() (in module model)": [[24, "model.set_mesh_color"]], "set_segment_points() (in module model)": [[24, "model.set_segment_points"]], "set_spline_positions() (in module model)": [[24, "model.set_spline_positions"]], "set_traces() (model.visermjmodel method)": [[24, "model.ViserMjModel.set_traces"]], "mppi (class in mppi)": [[25, "mppi.MPPI"]], "mppiconfig (class in mppi)": [[25, "mppi.MPPIConfig"]], "action() (mppi.mppi method)": [[25, "mppi.MPPI.action"]], "mppi": [[25, "module-mppi"]], "temperature (mppi.mppiconfig attribute)": [[25, "mppi.MPPIConfig.temperature"]], "update_action() (mppi.mppi method)": [[25, "mppi.MPPI.update_action"]], "mujocoplant (class in mujoco_dynamics)": [[26, "mujoco_dynamics.MujocoPlant"]], "decompose_state_dimensions() (in module mujoco_dynamics)": [[26, "mujoco_dynamics.decompose_state_dimensions"]], "dynamics() (mujoco_dynamics.mujocoplant method)": [[26, "mujoco_dynamics.MujocoPlant.dynamics"]], "get_action() (mujoco_dynamics.mujocoplant method)": [[26, "mujoco_dynamics.MujocoPlant.get_action"]], "get_collision_free() (mujoco_dynamics.mujocoplant method)": [[26, "mujoco_dynamics.MujocoPlant.get_collision_free"]], "get_gradient_placeholders() (mujoco_dynamics.mujocoplant method)": [[26, "mujoco_dynamics.MujocoPlant.get_gradient_placeholders"]], "get_gradients() (mujoco_dynamics.mujocoplant method)": [[26, "mujoco_dynamics.MujocoPlant.get_gradients"]], "get_joint_dimensions() (in module mujoco_dynamics)": [[26, "mujoco_dynamics.get_joint_dimensions"]], "get_mass() (mujoco_dynamics.mujocoplant method)": [[26, "mujoco_dynamics.MujocoPlant.get_mass"]], "get_num_substeps() (mujoco_dynamics.mujocoplant method)": [[26, "mujoco_dynamics.MujocoPlant.get_num_substeps"]], "get_quat_indices() (mujoco_dynamics.mujocoplant method)": [[26, "mujoco_dynamics.MujocoPlant.get_quat_indices"]], "get_sensor() (mujoco_dynamics.mujocoplant method)": [[26, "mujoco_dynamics.MujocoPlant.get_sensor"]], "get_state() (mujoco_dynamics.mujocoplant method)": [[26, "mujoco_dynamics.MujocoPlant.get_state"]], "get_sub_stepped_gradients() (mujoco_dynamics.mujocoplant method)": [[26, "mujoco_dynamics.MujocoPlant.get_sub_stepped_gradients"]], "initialize() (mujoco_dynamics.mujocoplant method)": [[26, "mujoco_dynamics.MujocoPlant.initialize"]], "mujoco_dynamics": [[26, "module-mujoco_dynamics"]], "normalize_state() (mujoco_dynamics.mujocoplant method)": [[26, "mujoco_dynamics.MujocoPlant.normalize_state"]], "reset() (mujoco_dynamics.mujocoplant method)": [[26, "mujoco_dynamics.MujocoPlant.reset"]], "set_action() (mujoco_dynamics.mujocoplant method)": [[26, "mujoco_dynamics.MujocoPlant.set_action"]], "set_state() (mujoco_dynamics.mujocoplant method)": [[26, "mujoco_dynamics.MujocoPlant.set_state"]], "state_addition() (mujoco_dynamics.mujocoplant method)": [[26, "mujoco_dynamics.MujocoPlant.state_addition"]], "state_difference() (mujoco_dynamics.mujocoplant method)": [[26, "mujoco_dynamics.MujocoPlant.state_difference"]], "update_sensor() (mujoco_dynamics.mujocoplant method)": [[26, "mujoco_dynamics.MujocoPlant.update_sensor"]], "visualize_state() (mujoco_dynamics.mujocoplant method)": [[26, "mujoco_dynamics.MujocoPlant.visualize_state"]], "visualize_trajectory() (mujoco_dynamics.mujocoplant method)": [[26, "mujoco_dynamics.MujocoPlant.visualize_trajectory"]], "mujocoplant (class in mujoco_helpers.dynamics)": [[27, "mujoco_helpers.dynamics.MujocoPlant"]], "mujoco_helpers.dynamics": [[27, "module-mujoco_helpers.dynamics"]], "mujoco_helpers": [[28, "module-mujoco_helpers"]], "iksolver (class in mujoco_helpers.kinematics)": [[29, "mujoco_helpers.kinematics.IkSolver"]], "__post_init__() (mujoco_helpers.kinematics.iksolver method)": [[29, "mujoco_helpers.kinematics.IkSolver.__post_init__"]], "configuration (mujoco_helpers.kinematics.iksolver property)": [[29, "mujoco_helpers.kinematics.IkSolver.configuration"]], "configuration_limit (mujoco_helpers.kinematics.iksolver property)": [[29, "mujoco_helpers.kinematics.IkSolver.configuration_limit"]], "damping (mujoco_helpers.kinematics.iksolver attribute)": [[29, "mujoco_helpers.kinematics.IkSolver.damping"]], "dt (mujoco_helpers.kinematics.iksolver attribute)": [[29, "mujoco_helpers.kinematics.IkSolver.dt"]], "frame_names (mujoco_helpers.kinematics.iksolver attribute)": [[29, "mujoco_helpers.kinematics.IkSolver.frame_names"]], "frame_tasks_damping (mujoco_helpers.kinematics.iksolver attribute)": [[29, "mujoco_helpers.kinematics.IkSolver.frame_tasks_damping"]], "frame_type (mujoco_helpers.kinematics.iksolver attribute)": [[29, "mujoco_helpers.kinematics.IkSolver.frame_type"]], "max_iters (mujoco_helpers.kinematics.iksolver attribute)": [[29, "mujoco_helpers.kinematics.IkSolver.max_iters"]], "model (mujoco_helpers.kinematics.iksolver attribute)": [[29, "mujoco_helpers.kinematics.IkSolver.model"]], "mujoco_helpers.kinematics": [[29, "module-mujoco_helpers.kinematics"]], "ori_threshold (mujoco_helpers.kinematics.iksolver attribute)": [[29, "mujoco_helpers.kinematics.IkSolver.ori_threshold"]], "orientation_cost (mujoco_helpers.kinematics.iksolver attribute)": [[29, "mujoco_helpers.kinematics.IkSolver.orientation_cost"]], "pos_threshold (mujoco_helpers.kinematics.iksolver attribute)": [[29, "mujoco_helpers.kinematics.IkSolver.pos_threshold"]], "position_cost (mujoco_helpers.kinematics.iksolver attribute)": [[29, "mujoco_helpers.kinematics.IkSolver.position_cost"]], "posture_cost (mujoco_helpers.kinematics.iksolver attribute)": [[29, "mujoco_helpers.kinematics.IkSolver.posture_cost"]], "set_target_pose() (mujoco_helpers.kinematics.iksolver method)": [[29, "mujoco_helpers.kinematics.IkSolver.set_target_pose"]], "solve() (mujoco_helpers.kinematics.iksolver method)": [[29, "mujoco_helpers.kinematics.IkSolver.solve"]], "solver (mujoco_helpers.kinematics.iksolver attribute)": [[29, "mujoco_helpers.kinematics.IkSolver.solver"]], "count_trace_sensors() (in module mujoco_helpers.utils)": [[30, "mujoco_helpers.utils.count_trace_sensors"]], "get_mesh_data() (in module mujoco_helpers.utils)": [[30, "mujoco_helpers.utils.get_mesh_data"]], "get_sensor_name() (in module mujoco_helpers.utils)": [[30, "mujoco_helpers.utils.get_sensor_name"]], "get_trace_sensors() (in module mujoco_helpers.utils)": [[30, "mujoco_helpers.utils.get_trace_sensors"]], "is_trace_sensor() (in module mujoco_helpers.utils)": [[30, "mujoco_helpers.utils.is_trace_sensor"]], "mujoco_helpers.utils": [[30, "module-mujoco_helpers.utils"]], "set_mocap_pose() (in module mujoco_helpers.utils)": [[30, "mujoco_helpers.utils.set_mocap_pose"]], "set_mocap_poses() (in module mujoco_helpers.utils)": [[30, "mujoco_helpers.utils.set_mocap_poses"]], "set_state() (in module mujoco_helpers.utils)": [[30, "mujoco_helpers.utils.set_state"]], "visualize_state() (in module mujoco_helpers.utils)": [[30, "mujoco_helpers.utils.visualize_state"]], "visualize_trajectory() (in module mujoco_helpers.utils)": [[30, "mujoco_helpers.utils.visualize_trajectory"]], "particlefilter (class in particle_filter)": [[31, "particle_filter.ParticleFilter"]], "particlefilterconfig (class in particle_filter)": [[31, "particle_filter.ParticleFilterConfig"]], "action() (particle_filter.particlefilter method)": [[31, "particle_filter.ParticleFilter.action"]], "particle_filter": [[31, "module-particle_filter"]], "temperature (particle_filter.particlefilterconfig attribute)": [[31, "particle_filter.ParticleFilterConfig.temperature"]], "update_action() (particle_filter.particlefilter method)": [[31, "particle_filter.ParticleFilter.update_action"]], "get_package_path() (in module path_resolvers)": [[32, "path_resolvers.get_package_path"]], "path_resolvers": [[32, "module-path_resolvers"]], "add_package_paths() (in module paths)": [[33, "paths.add_package_paths"]], "paths": [[33, "module-paths"]], "predictivesampling (class in predictive_sampling)": [[34, "predictive_sampling.PredictiveSampling"]], "predictivesamplingconfig (class in predictive_sampling)": [[34, "predictive_sampling.PredictiveSamplingConfig"]], "action() (predictive_sampling.predictivesampling method)": [[34, "predictive_sampling.PredictiveSampling.action"]], "noise_ramp (predictive_sampling.predictivesamplingconfig attribute)": [[34, "predictive_sampling.PredictiveSamplingConfig.noise_ramp"]], "predictive_sampling": [[34, "module-predictive_sampling"]], "update_action() (predictive_sampling.predictivesampling method)": [[34, "predictive_sampling.PredictiveSampling.update_action"]], "simulatorplant (class in simulator_plant)": [[35, "simulator_plant.SimulatorPlant"]], "scale_distances() (in module simulator_plant)": [[35, "simulator_plant.scale_distances"]], "scaled_distances_to() (in module simulator_plant)": [[35, "simulator_plant.scaled_distances_to"]], "simulator_plant": [[35, "module-simulator_plant"]], "state_difference() (simulator_plant.simulatorplant method)": [[35, "simulator_plant.SimulatorPlant.state_difference"]], "controlprocess (class in viser_app.app)": [[36, "viser_app.app.ControlProcess"]], "jacta_manipulation_path (in module viser_app.app)": [[36, "viser_app.app.JACTA_MANIPULATION_PATH"]], "simulationprocess (class in viser_app.app)": [[36, "viser_app.app.SimulationProcess"]], "viserapp (class in viser_app.app)": [[36, "viser_app.app.ViserApp"]], "config_download_callback() (viser_app.app.viserapp method)": [[36, "viser_app.app.ViserApp.config_download_callback"]], "control_cycle_callback() (viser_app.app.viserapp method)": [[36, "viser_app.app.ViserApp.control_cycle_callback"]], "control_loop() (viser_app.app.controlprocess method)": [[36, "viser_app.app.ControlProcess.control_loop"]], "control_selection_callback() (viser_app.app.viserapp method)": [[36, "viser_app.app.ViserApp.control_selection_callback"]], "enable_profiling_callback() (viser_app.app.viserapp method)": [[36, "viser_app.app.ViserApp.enable_profiling_callback"]], "remove() (viser_app.app.controlprocess method)": [[36, "viser_app.app.ControlProcess.remove"]], "reset() (viser_app.app.simulationprocess method)": [[36, "viser_app.app.SimulationProcess.reset"]], "set_profiler_recording() (viser_app.app.controlprocess method)": [[36, "viser_app.app.ControlProcess.set_profiler_recording"]], "setup_context() (viser_app.app.viserapp method)": [[36, "viser_app.app.ViserApp.setup_context"]], "setup_controller() (viser_app.app.viserapp method)": [[36, "viser_app.app.ViserApp.setup_controller"]], "setup_physics() (viser_app.app.viserapp method)": [[36, "viser_app.app.ViserApp.setup_physics"]], "setup_task() (viser_app.app.viserapp method)": [[36, "viser_app.app.ViserApp.setup_task"]], "setup_visualization() (viser_app.app.viserapp method)": [[36, "viser_app.app.ViserApp.setup_visualization"]], "simulation_cycle_callback() (viser_app.app.viserapp method)": [[36, "viser_app.app.ViserApp.simulation_cycle_callback"]], "simulation_reset_callback() (viser_app.app.viserapp method)": [[36, "viser_app.app.ViserApp.simulation_reset_callback"]], "task_selection_callback() (viser_app.app.viserapp method)": [[36, "viser_app.app.ViserApp.task_selection_callback"]], "terminate() (viser_app.app.controlprocess method)": [[36, "viser_app.app.ControlProcess.terminate"]], "viser_app.app": [[36, "module-viser_app.app"]], "write_controls() (viser_app.app.controlprocess method)": [[36, "viser_app.app.ControlProcess.write_controls"]], "write_states() (viser_app.app.simulationprocess method)": [[36, "viser_app.app.SimulationProcess.write_states"]], "write_traces() (viser_app.app.controlprocess method)": [[36, "viser_app.app.ControlProcess.write_traces"]], "arm_joint_names (in module viser_app.constants)": [[37, "viser_app.constants.ARM_JOINT_NAMES"]], "arm_link_names (in module viser_app.constants)": [[37, "viser_app.constants.ARM_LINK_NAMES"]], "arm_stowed_pos (in module viser_app.constants)": [[37, "viser_app.constants.ARM_STOWED_POS"]], "arm_unstowed_pos (in module viser_app.constants)": [[37, "viser_app.constants.ARM_UNSTOWED_POS"]], "legs_sitting_pos (in module viser_app.constants)": [[37, "viser_app.constants.LEGS_SITTING_POS"]], "legs_standing_pos (in module viser_app.constants)": [[37, "viser_app.constants.LEGS_STANDING_POS"]], "leg_joint_names (in module viser_app.constants)": [[37, "viser_app.constants.LEG_JOINT_NAMES"]], "leg_link_names (in module viser_app.constants)": [[37, "viser_app.constants.LEG_LINK_NAMES"]], "sitting_stowed_pos (in module viser_app.constants)": [[37, "viser_app.constants.SITTING_STOWED_POS"]], "sitting_unstowed_pos (in module viser_app.constants)": [[37, "viser_app.constants.SITTING_UNSTOWED_POS"]], "spot_angs_vel_slice (in module viser_app.constants)": [[37, "viser_app.constants.SPOT_ANGS_VEL_SLICE"]], "spot_arms_slice (in module viser_app.constants)": [[37, "viser_app.constants.SPOT_ARMS_SLICE"]], "spot_arms_vel_slice (in module viser_app.constants)": [[37, "viser_app.constants.SPOT_ARMS_VEL_SLICE"]], "spot_body_slice (in module viser_app.constants)": [[37, "viser_app.constants.SPOT_BODY_SLICE"]], "spot_body_vel_slice (in module viser_app.constants)": [[37, "viser_app.constants.SPOT_BODY_VEL_SLICE"]], "spot_legs_slice (in module viser_app.constants)": [[37, "viser_app.constants.SPOT_LEGS_SLICE"]], "spot_legs_vel_slice (in module viser_app.constants)": [[37, "viser_app.constants.SPOT_LEGS_VEL_SLICE"]], "spot_quat_slice (in module viser_app.constants)": [[37, "viser_app.constants.SPOT_QUAT_SLICE"]], "spot_state_inds (class in viser_app.constants)": [[37, "viser_app.constants.SPOT_STATE_INDS"]], "standing_height (in module viser_app.constants)": [[37, "viser_app.constants.STANDING_HEIGHT"]], "standing_stowed_pos (in module viser_app.constants)": [[37, "viser_app.constants.STANDING_STOWED_POS"]], "standing_unstowed_pos (in module viser_app.constants)": [[37, "viser_app.constants.STANDING_UNSTOWED_POS"]], "angs_vel_slice (viser_app.constants.spot_state_inds attribute)": [[37, "viser_app.constants.SPOT_STATE_INDS.angs_vel_slice"]], "arms_slice (viser_app.constants.spot_state_inds attribute)": [[37, "viser_app.constants.SPOT_STATE_INDS.arms_slice"]], "arms_vel_slice (viser_app.constants.spot_state_inds attribute)": [[37, "viser_app.constants.SPOT_STATE_INDS.arms_vel_slice"]], "body_vel_slice (viser_app.constants.spot_state_inds attribute)": [[37, "viser_app.constants.SPOT_STATE_INDS.body_vel_slice"]], "legs_slice (viser_app.constants.spot_state_inds attribute)": [[37, "viser_app.constants.SPOT_STATE_INDS.legs_slice"]], "legs_vel_slice (viser_app.constants.spot_state_inds attribute)": [[37, "viser_app.constants.SPOT_STATE_INDS.legs_vel_slice"]], "quat_slice (viser_app.constants.spot_state_inds attribute)": [[37, "viser_app.constants.SPOT_STATE_INDS.quat_slice"]], "viser_app.constants": [[37, "module-viser_app.constants"]], "controller (class in viser_app.controllers.controller)": [[38, "viser_app.controllers.controller.Controller"]], "controllerconfig (class in viser_app.controllers.controller)": [[38, "viser_app.controllers.controller.ControllerConfig"]], "action() (viser_app.controllers.controller.controller method)": [[38, "viser_app.controllers.controller.Controller.action"]], "controls (viser_app.controllers.controller.controller property)": [[38, "viser_app.controllers.controller.Controller.controls"]], "make_models() (viser_app.controllers.controller.controller method)": [[38, "viser_app.controllers.controller.Controller.make_models"]], "reset() (viser_app.controllers.controller.controller method)": [[38, "viser_app.controllers.controller.Controller.reset"]], "rollout_times (viser_app.controllers.controller.controller property)": [[38, "viser_app.controllers.controller.Controller.rollout_times"]], "set_default_controls() (viser_app.controllers.controller.controller method)": [[38, "viser_app.controllers.controller.Controller.set_default_controls"]], "update_action() (viser_app.controllers.controller.controller method)": [[38, "viser_app.controllers.controller.Controller.update_action"]], "viser_app.controllers.controller": [[38, "module-viser_app.controllers.controller"]], "get_registered_controllers() (in module viser_app.controllers)": [[39, "viser_app.controllers.get_registered_controllers"]], "register_controller() (in module viser_app.controllers)": [[39, "viser_app.controllers.register_controller"]], "viser_app.controllers": [[39, "module-viser_app.controllers"]], "max_num_traces (in module viser_app.controllers.sampling_base)": [[40, "viser_app.controllers.sampling_base.MAX_NUM_TRACES"]], "samplingbase (class in viser_app.controllers.sampling_base)": [[40, "viser_app.controllers.sampling_base.SamplingBase"]], "samplingbaseconfig (class in viser_app.controllers.sampling_base)": [[40, "viser_app.controllers.sampling_base.SamplingBaseConfig"]], "action() (viser_app.controllers.sampling_base.samplingbase method)": [[40, "viser_app.controllers.sampling_base.SamplingBase.action"]], "control_freq (viser_app.controllers.sampling_base.samplingbaseconfig attribute)": [[40, "viser_app.controllers.sampling_base.SamplingBaseConfig.control_freq"]], "controls (viser_app.controllers.sampling_base.samplingbase property)": [[40, "viser_app.controllers.sampling_base.SamplingBase.controls"]], "make_models() (viser_app.controllers.sampling_base.samplingbase method)": [[40, "viser_app.controllers.sampling_base.SamplingBase.make_models"]], "make_spline() (in module viser_app.controllers.sampling_base)": [[40, "viser_app.controllers.sampling_base.make_spline"]], "num_nodes (viser_app.controllers.sampling_base.samplingbaseconfig attribute)": [[40, "viser_app.controllers.sampling_base.SamplingBaseConfig.num_nodes"]], "num_rollouts (viser_app.controllers.sampling_base.samplingbaseconfig attribute)": [[40, "viser_app.controllers.sampling_base.SamplingBaseConfig.num_rollouts"]], "reset() (viser_app.controllers.sampling_base.samplingbase method)": [[40, "viser_app.controllers.sampling_base.SamplingBase.reset"]], "rollout_times (viser_app.controllers.sampling_base.samplingbase property)": [[40, "viser_app.controllers.sampling_base.SamplingBase.rollout_times"]], "set_default_controls() (viser_app.controllers.sampling_base.samplingbase method)": [[40, "viser_app.controllers.sampling_base.SamplingBase.set_default_controls"]], "spline (viser_app.controllers.sampling_base.samplingbase property)": [[40, "viser_app.controllers.sampling_base.SamplingBase.spline"]], "spline_order (viser_app.controllers.sampling_base.samplingbaseconfig attribute)": [[40, "viser_app.controllers.sampling_base.SamplingBaseConfig.spline_order"]], "spline_timesteps (viser_app.controllers.sampling_base.samplingbase property)": [[40, "viser_app.controllers.sampling_base.SamplingBase.spline_timesteps"]], "update_action() (viser_app.controllers.sampling_base.samplingbase method)": [[40, "viser_app.controllers.sampling_base.SamplingBase.update_action"]], "update_spline() (viser_app.controllers.sampling_base.samplingbase method)": [[40, "viser_app.controllers.sampling_base.SamplingBase.update_spline"]], "update_traces() (viser_app.controllers.sampling_base.samplingbase method)": [[40, "viser_app.controllers.sampling_base.SamplingBase.update_traces"]], "use_noise_ramp (viser_app.controllers.sampling_base.samplingbaseconfig attribute)": [[40, "viser_app.controllers.sampling_base.SamplingBaseConfig.use_noise_ramp"]], "viser_app.controllers.sampling_base": [[40, "module-viser_app.controllers.sampling_base"]], "default_slider_step_float (in module viser_app.gui)": [[41, "viser_app.gui.DEFAULT_SLIDER_STEP_FLOAT"]], "default_slider_step_int (in module viser_app.gui)": [[41, "viser_app.gui.DEFAULT_SLIDER_STEP_INT"]], "goal_radius (in module viser_app.gui)": [[41, "viser_app.gui.GOAL_RADIUS"]], "ui_config (in module viser_app.gui)": [[41, "viser_app.gui.UI_CONFIG"]], "create_gui_elements() (in module viser_app.gui)": [[41, "viser_app.gui.create_gui_elements"]], "slider() (in module viser_app.gui)": [[41, "viser_app.gui.slider"]], "viser_app.gui": [[41, "module-viser_app.gui"]], "viser_app": [[42, "module-viser_app"]], "controlbufferkeys (class in viser_app.io)": [[43, "viser_app.io.ControlBufferKeys"]], "hardwareiocontext (class in viser_app.io)": [[43, "viser_app.io.HardwareIOContext"]], "hardwarestatebufferkeys (class in viser_app.io)": [[43, "viser_app.io.HardwareStateBufferKeys"]], "iocontext (class in viser_app.io)": [[43, "viser_app.io.IOContext"]], "simulationiocontext (class in viser_app.io)": [[43, "viser_app.io.SimulationIOContext"]], "statebufferkeys (class in viser_app.io)": [[43, "viser_app.io.StateBufferKeys"]], "last_policy_output (viser_app.io.statebufferkeys attribute)": [[43, "viser_app.io.StateBufferKeys.last_policy_output"]], "qpos (viser_app.io.statebufferkeys attribute)": [[43, "viser_app.io.StateBufferKeys.qpos"]], "qvel (viser_app.io.statebufferkeys attribute)": [[43, "viser_app.io.StateBufferKeys.qvel"]], "spline (viser_app.io.controlbufferkeys attribute)": [[43, "viser_app.io.ControlBufferKeys.spline"]], "time (viser_app.io.statebufferkeys attribute)": [[43, "viser_app.io.StateBufferKeys.time"]], "traces (viser_app.io.controlbufferkeys attribute)": [[43, "viser_app.io.ControlBufferKeys.traces"]], "viser_app.io": [[43, "module-viser_app.io"]], "xpos (viser_app.io.statebufferkeys attribute)": [[43, "viser_app.io.StateBufferKeys.xpos"]], "xquat (viser_app.io.statebufferkeys attribute)": [[43, "viser_app.io.StateBufferKeys.xquat"]], "configencoder (class in viser_app.json_serializer)": [[44, "viser_app.json_serializer.ConfigEncoder"]], "decode_config() (in module viser_app.json_serializer)": [[44, "viser_app.json_serializer.decode_config"]], "viser_app.json_serializer": [[44, "module-viser_app.json_serializer"]], "viserprofiler (class in viser_app.profiler)": [[45, "viser_app.profiler.ViserProfiler"]], "viserprofilerconfig (class in viser_app.profiler)": [[45, "viser_app.profiler.ViserProfilerConfig"]], "benchmark_wrapper() (viser_app.profiler.viserprofiler method)": [[45, "viser_app.profiler.ViserProfiler.benchmark_wrapper"]], "viser_app.profiler": [[45, "module-viser_app.profiler"]], "acrobot (class in viser_app.tasks.acrobot)": [[46, "viser_app.tasks.acrobot.Acrobot"]], "acrobotconfig (class in viser_app.tasks.acrobot)": [[46, "viser_app.tasks.acrobot.AcrobotConfig"]], "model_path (in module viser_app.tasks.acrobot)": [[46, "viser_app.tasks.acrobot.MODEL_PATH"]], "cutoff_time (viser_app.tasks.acrobot.acrobotconfig attribute)": [[46, "viser_app.tasks.acrobot.AcrobotConfig.cutoff_time"]], "p_vertical (viser_app.tasks.acrobot.acrobotconfig attribute)": [[46, "viser_app.tasks.acrobot.AcrobotConfig.p_vertical"]], "reset() (viser_app.tasks.acrobot.acrobot method)": [[46, "viser_app.tasks.acrobot.Acrobot.reset"]], "viser_app.tasks.acrobot": [[46, "module-viser_app.tasks.acrobot"]], "w_control (viser_app.tasks.acrobot.acrobotconfig attribute)": [[46, "viser_app.tasks.acrobot.AcrobotConfig.w_control"]], "w_velocity (viser_app.tasks.acrobot.acrobotconfig attribute)": [[46, "viser_app.tasks.acrobot.AcrobotConfig.w_velocity"]], "w_vertical (viser_app.tasks.acrobot.acrobotconfig attribute)": [[46, "viser_app.tasks.acrobot.AcrobotConfig.w_vertical"]], "cartpole (class in viser_app.tasks.cartpole)": [[47, "viser_app.tasks.cartpole.Cartpole"]], "cartpoleconfig (class in viser_app.tasks.cartpole)": [[47, "viser_app.tasks.cartpole.CartpoleConfig"]], "model_path (in module viser_app.tasks.cartpole)": [[47, "viser_app.tasks.cartpole.MODEL_PATH"]], "cutoff_time (viser_app.tasks.cartpole.cartpoleconfig attribute)": [[47, "viser_app.tasks.cartpole.CartpoleConfig.cutoff_time"]], "is_terminated() (viser_app.tasks.cartpole.cartpole method)": [[47, "viser_app.tasks.cartpole.Cartpole.is_terminated"]], "p_centered (viser_app.tasks.cartpole.cartpoleconfig attribute)": [[47, "viser_app.tasks.cartpole.CartpoleConfig.p_centered"]], "p_vertical (viser_app.tasks.cartpole.cartpoleconfig attribute)": [[47, "viser_app.tasks.cartpole.CartpoleConfig.p_vertical"]], "reset() (viser_app.tasks.cartpole.cartpole method)": [[47, "viser_app.tasks.cartpole.Cartpole.reset"]], "viser_app.tasks.cartpole": [[47, "module-viser_app.tasks.cartpole"]], "w_centered (viser_app.tasks.cartpole.cartpoleconfig attribute)": [[47, "viser_app.tasks.cartpole.CartpoleConfig.w_centered"]], "w_control (viser_app.tasks.cartpole.cartpoleconfig attribute)": [[47, "viser_app.tasks.cartpole.CartpoleConfig.w_control"]], "w_velocity (viser_app.tasks.cartpole.cartpoleconfig attribute)": [[47, "viser_app.tasks.cartpole.CartpoleConfig.w_velocity"]], "w_vertical (viser_app.tasks.cartpole.cartpoleconfig attribute)": [[47, "viser_app.tasks.cartpole.CartpoleConfig.w_vertical"]], "quadratic_norm() (in module viser_app.tasks.cost_functions)": [[48, "viser_app.tasks.cost_functions.quadratic_norm"]], "smooth_l1_norm() (in module viser_app.tasks.cost_functions)": [[48, "viser_app.tasks.cost_functions.smooth_l1_norm"]], "viser_app.tasks.cost_functions": [[48, "module-viser_app.tasks.cost_functions"]], "cylinderpush (class in viser_app.tasks.cylinder_push)": [[49, "viser_app.tasks.cylinder_push.CylinderPush"]], "cylinderpushconfig (class in viser_app.tasks.cylinder_push)": [[49, "viser_app.tasks.cylinder_push.CylinderPushConfig"]], "model_path (in module viser_app.tasks.cylinder_push)": [[49, "viser_app.tasks.cylinder_push.MODEL_PATH"]], "cart_goal_position (viser_app.tasks.cylinder_push.cylinderpushconfig attribute)": [[49, "viser_app.tasks.cylinder_push.CylinderPushConfig.cart_goal_position"]], "cutoff_time (viser_app.tasks.cylinder_push.cylinderpushconfig attribute)": [[49, "viser_app.tasks.cylinder_push.CylinderPushConfig.cutoff_time"]], "pusher_goal_offset (viser_app.tasks.cylinder_push.cylinderpushconfig attribute)": [[49, "viser_app.tasks.cylinder_push.CylinderPushConfig.pusher_goal_offset"]], "reset() (viser_app.tasks.cylinder_push.cylinderpush method)": [[49, "viser_app.tasks.cylinder_push.CylinderPush.reset"]], "viser_app.tasks.cylinder_push": [[49, "module-viser_app.tasks.cylinder_push"]], "w_cart_position (viser_app.tasks.cylinder_push.cylinderpushconfig attribute)": [[49, "viser_app.tasks.cylinder_push.CylinderPushConfig.w_cart_position"]], "w_pusher_proximity (viser_app.tasks.cylinder_push.cylinderpushconfig attribute)": [[49, "viser_app.tasks.cylinder_push.CylinderPushConfig.w_pusher_proximity"]], "w_pusher_velocity (viser_app.tasks.cylinder_push.cylinderpushconfig attribute)": [[49, "viser_app.tasks.cylinder_push.CylinderPushConfig.w_pusher_velocity"]], "get_registered_tasks() (in module viser_app.tasks)": [[50, "viser_app.tasks.get_registered_tasks"]], "register_task() (in module viser_app.tasks)": [[50, "viser_app.tasks.register_task"]], "viser_app.tasks": [[50, "module-viser_app.tasks"]], "mujocotask (class in viser_app.tasks.mujoco_task)": [[51, "viser_app.tasks.mujoco_task.MujocoTask"]], "actuator_ctrlrange (viser_app.tasks.mujoco_task.mujocotask property)": [[51, "viser_app.tasks.mujoco_task.MujocoTask.actuator_ctrlrange"]], "create_visualization() (viser_app.tasks.mujoco_task.mujocotask method)": [[51, "viser_app.tasks.mujoco_task.MujocoTask.create_visualization"]], "default_idle_command (viser_app.tasks.mujoco_task.mujocotask property)": [[51, "viser_app.tasks.mujoco_task.MujocoTask.default_idle_command"]], "dt (viser_app.tasks.mujoco_task.mujocotask property)": [[51, "viser_app.tasks.mujoco_task.MujocoTask.dt"]], "is_terminated() (viser_app.tasks.mujoco_task.mujocotask method)": [[51, "viser_app.tasks.mujoco_task.MujocoTask.is_terminated"]], "make_models() (viser_app.tasks.mujoco_task.mujocotask method)": [[51, "viser_app.tasks.mujoco_task.MujocoTask.make_models"]], "nu (viser_app.tasks.mujoco_task.mujocotask property)": [[51, "viser_app.tasks.mujoco_task.MujocoTask.nu"]], "reset() (viser_app.tasks.mujoco_task.mujocotask method)": [[51, "viser_app.tasks.mujoco_task.MujocoTask.reset"]], "rollout() (viser_app.tasks.mujoco_task.mujocotask method)": [[51, "viser_app.tasks.mujoco_task.MujocoTask.rollout"]], "sim_step() (viser_app.tasks.mujoco_task.mujocotask method)": [[51, "viser_app.tasks.mujoco_task.MujocoTask.sim_step"]], "viser_app.tasks.mujoco_task": [[51, "module-viser_app.tasks.mujoco_task"]], "configt (in module viser_app.tasks.task)": [[52, "viser_app.tasks.task.ConfigT"]], "modelt (in module viser_app.tasks.task)": [[52, "viser_app.tasks.task.ModelT"]], "task (class in viser_app.tasks.task)": [[52, "viser_app.tasks.task.Task"]], "taskconfig (class in viser_app.tasks.task)": [[52, "viser_app.tasks.task.TaskConfig"]], "actuator_ctrlrange (viser_app.tasks.task.task property)": [[52, "viser_app.tasks.task.Task.actuator_ctrlrange"]], "additional_task_info (viser_app.tasks.task.task property)": [[52, "viser_app.tasks.task.Task.additional_task_info"]], "create_visualization() (viser_app.tasks.task.task method)": [[52, "viser_app.tasks.task.Task.create_visualization"]], "dt (viser_app.tasks.task.task property)": [[52, "viser_app.tasks.task.Task.dt"]], "is_terminated() (viser_app.tasks.task.task method)": [[52, "viser_app.tasks.task.Task.is_terminated"]], "make_models() (viser_app.tasks.task.task method)": [[52, "viser_app.tasks.task.Task.make_models"]], "reset() (viser_app.tasks.task.task method)": [[52, "viser_app.tasks.task.Task.reset"]], "reward() (viser_app.tasks.task.task method)": [[52, "viser_app.tasks.task.Task.reward"]], "rollout() (viser_app.tasks.task.task method)": [[52, "viser_app.tasks.task.Task.rollout"]], "sim_step() (viser_app.tasks.task.task method)": [[52, "viser_app.tasks.task.Task.sim_step"]], "viser_app.tasks.task": [[52, "module-viser_app.tasks.task"]], "visualization (class in viser_app.visualization)": [[53, "viser_app.visualization.Visualization"]], "remove() (viser_app.visualization.visualization method)": [[53, "viser_app.visualization.Visualization.remove"]], "viser_app.visualization": [[53, "module-viser_app.visualization"]], "mjvisualization (class in visualization)": [[54, "visualization.MjVisualization"]], "visualization_freq (in module visualization)": [[54, "visualization.VISUALIZATION_FREQ"]], "remove() (visualization.mjvisualization method)": [[54, "visualization.MjVisualization.remove"]], "visualization": [[54, "module-visualization"]], "default_colors (in module visuals)": [[55, "visuals.DEFAULT_COLORS"]], "default_prefixes (in module visuals)": [[55, "visuals.DEFAULT_PREFIXES"]], "trajectoryvisualizer (class in visuals)": [[55, "visuals.TrajectoryVisualizer"]], "meshcat (visuals.trajectoryvisualizer property)": [[55, "visuals.TrajectoryVisualizer.meshcat"]], "set_color_of_models() (visuals.trajectoryvisualizer method)": [[55, "visuals.TrajectoryVisualizer.set_color_of_models"]], "set_directives_prefix() (visuals.trajectoryvisualizer method)": [[55, "visuals.TrajectoryVisualizer.set_directives_prefix"]], "setup_and_connect() (visuals.trajectoryvisualizer method)": [[55, "visuals.TrajectoryVisualizer.setup_and_connect"]], "show() (visuals.trajectoryvisualizer method)": [[55, "visuals.TrajectoryVisualizer.show"]], "update_trajectories() (visuals.trajectoryvisualizer method)": [[55, "visuals.TrajectoryVisualizer.update_trajectories"]], "visualize_and_control_model() (in module visuals)": [[55, "visuals.visualize_and_control_model"]], "visualize_trajectories() (visuals.trajectoryvisualizer method)": [[55, "visuals.TrajectoryVisualizer.visualize_trajectories"]], "visuals": [[55, "module-visuals"]]}})