Search.setIndex({"docnames": ["api/benchmarking/benchmarking/index", "api/benchmarking/index", "api/benchmarking/profiling/index", "api/cmaes/index", "api/constants/index", "api/controllers/controller/index", "api/controllers/index", "api/controllers/sampling_base/index", "api/cross_entropy_method/index", "api/dynamics/action_trajectory/index", "api/dynamics/index", "api/dynamics/locomotion_plant/index", "api/dynamics/mujoco_dynamics/index", "api/dynamics/mujoco_utils/index", "api/dynamics/state_helpers/index", "api/environments/base/index", "api/environments/index", "api/environments/tire_state_cache_generator/index", "api/experts/expert/index", "api/experts/expert_sampler/index", "api/experts/index", "api/experts/network/index", "api/experts/primitive/index", "api/experts/primitives/index", "api/experts/primitives/spot_standing_box/index", "api/learning/index", "api/learning/learner/index", "api/learning/networks/index", "api/learning/normalizer/index", "api/learning/replay_buffer/index", "api/mppi/index", "api/particle_filter/index", "api/path_resolvers/index", "api/planner/action_processor/index", "api/planner/action_sampler/index", "api/planner/clipping_method/index", "api/planner/data_collection/index", "api/planner/graph/index", "api/planner/graph_visuals/index", "api/planner/graph_worker/index", "api/planner/index", "api/planner/linear_algebra/index", "api/planner/logger/index", "api/planner/parameter_container/index", "api/planner/planner/index", "api/planner/planner_helpers/index", "api/planner/types/index", "api/predictive_sampling/index", "api/scenes/index", "api/scenes/scene_composer/index", "api/scenes/scene_generator/index", "api/scenes/scene_registry/index", "api/spot_box/index", "api/spot_hand_navigation/index", "api/spot_navigation/index", "api/spot_tire/index", "api/tasks/acrobot/index", "api/tasks/cartpole/index", "api/tasks/cost_functions/index", "api/tasks/cylinder_push/index", "api/tasks/index", "api/tasks/mujoco_task/index", "api/tasks/spot_base/index", "api/tasks/spot_position_control/index", "api/tasks/task/index", "api/viser_app/app/index", "api/viser_app/gui/index", "api/viser_app/index", "api/viser_app/io/index", "api/viser_app/json_serializer/index", "api/viser_app/profiler/index", "api/visuals/index", "api/visuals/meshcat_visualizer/index", "api/visuals/mujoco_visualizer/index", "api/visuals/quaternion_operations/index", "index"], "filenames": ["api/benchmarking/benchmarking/index.rst", "api/benchmarking/index.rst", "api/benchmarking/profiling/index.rst", "api/cmaes/index.rst", "api/constants/index.rst", "api/controllers/controller/index.rst", "api/controllers/index.rst", "api/controllers/sampling_base/index.rst", "api/cross_entropy_method/index.rst", "api/dynamics/action_trajectory/index.rst", "api/dynamics/index.rst", "api/dynamics/locomotion_plant/index.rst", "api/dynamics/mujoco_dynamics/index.rst", "api/dynamics/mujoco_utils/index.rst", "api/dynamics/state_helpers/index.rst", "api/environments/base/index.rst", "api/environments/index.rst", "api/environments/tire_state_cache_generator/index.rst", "api/experts/expert/index.rst", "api/experts/expert_sampler/index.rst", "api/experts/index.rst", "api/experts/network/index.rst", "api/experts/primitive/index.rst", "api/experts/primitives/index.rst", "api/experts/primitives/spot_standing_box/index.rst", "api/learning/index.rst", "api/learning/learner/index.rst", "api/learning/networks/index.rst", "api/learning/normalizer/index.rst", "api/learning/replay_buffer/index.rst", "api/mppi/index.rst", "api/particle_filter/index.rst", "api/path_resolvers/index.rst", "api/planner/action_processor/index.rst", "api/planner/action_sampler/index.rst", "api/planner/clipping_method/index.rst", "api/planner/data_collection/index.rst", "api/planner/graph/index.rst", "api/planner/graph_visuals/index.rst", "api/planner/graph_worker/index.rst", "api/planner/index.rst", "api/planner/linear_algebra/index.rst", "api/planner/logger/index.rst", "api/planner/parameter_container/index.rst", "api/planner/planner/index.rst", "api/planner/planner_helpers/index.rst", "api/planner/types/index.rst", "api/predictive_sampling/index.rst", "api/scenes/index.rst", "api/scenes/scene_composer/index.rst", "api/scenes/scene_generator/index.rst", "api/scenes/scene_registry/index.rst", "api/spot_box/index.rst", "api/spot_hand_navigation/index.rst", "api/spot_navigation/index.rst", "api/spot_tire/index.rst", "api/tasks/acrobot/index.rst", "api/tasks/cartpole/index.rst", "api/tasks/cost_functions/index.rst", "api/tasks/cylinder_push/index.rst", "api/tasks/index.rst", "api/tasks/mujoco_task/index.rst", "api/tasks/spot_base/index.rst", "api/tasks/spot_position_control/index.rst", "api/tasks/task/index.rst", "api/viser_app/app/index.rst", "api/viser_app/gui/index.rst", "api/viser_app/index.rst", "api/viser_app/io/index.rst", "api/viser_app/json_serializer/index.rst", "api/viser_app/profiler/index.rst", "api/visuals/index.rst", "api/visuals/meshcat_visualizer/index.rst", "api/visuals/mujoco_visualizer/index.rst", "api/visuals/quaternion_operations/index.rst", "index.md"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">benchmarking.benchmarking</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">benchmarking</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">benchmarking.profiling</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cmaes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">constants</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">controllers.controller</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">controllers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">controllers.sampling_base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cross_entropy_method</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dynamics.action_trajectory</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dynamics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dynamics.locomotion_plant</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dynamics.mujoco_dynamics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dynamics.mujoco_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dynamics.state_helpers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">environments.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">environments</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">environments.tire_state_cache_generator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">experts.expert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">experts.expert_sampler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">experts</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">experts.network</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">experts.primitive</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">experts.primitives</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">experts.primitives.spot_standing_box</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">learning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">learning.learner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">learning.networks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">learning.normalizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">learning.replay_buffer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mppi</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">particle_filter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">path_resolvers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.action_processor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.action_sampler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.clipping_method</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.data_collection</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.graph_visuals</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.graph_worker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.linear_algebra</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.parameter_container</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.planner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.planner_helpers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.types</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">predictive_sampling</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">scenes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">scenes.scene_composer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">scenes.scene_generator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">scenes.scene_registry</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spot_box</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spot_hand_navigation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spot_navigation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spot_tire</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tasks.acrobot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tasks.cartpole</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tasks.cost_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tasks.cylinder_push</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tasks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tasks.mujoco_task</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tasks.spot_base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tasks.spot_position_control</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tasks.task</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.app</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.gui</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.io</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.json_serializer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.profiler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">visuals</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">visuals.meshcat_visualizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">visuals.mujoco_visualizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">visuals.quaternion_operations</span></code>", "jacta-manipulation"], "terms": {"allow": [0, 2, 7, 45], "user": [0, 2, 46, 72, 73], "planner": [0, 1, 2, 3, 8, 9, 11, 12, 15, 17, 18, 19, 21, 22, 24, 26, 29, 30, 31, 47, 73], "instanc": [0, 1, 2, 49, 65], "class": [0, 3, 4, 5, 7, 8, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 33, 34, 37, 39, 42, 43, 44, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 68, 69, 70, 72, 73], "list": [0, 13, 15, 17, 22, 38, 43, 46, 49, 56, 57, 59, 61, 62, 63, 64, 66, 72, 73, 74], "jactamanipul": [0, 3, 6, 7, 8, 9, 11, 12, 15, 17, 18, 19, 21, 22, 24, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 42, 44, 47, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 73], "seed": [0, 43], "torch": [0, 9, 11, 12, 15, 17, 18, 19, 21, 22, 26, 27, 28, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 73], "inttensor": [0, 12, 15, 18, 19, 21, 22, 33, 34, 37, 39, 41, 42], "none": [0, 2, 3, 5, 6, 7, 8, 11, 12, 15, 17, 22, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 72, 73, 74], "name": [0, 6, 13, 38, 43, 49, 51, 60, 72, 73], "verbos": [0, 26, 39, 44], "bool": [0, 2, 7, 17, 21, 26, 36, 37, 38, 39, 43, 44, 45, 57, 61, 64, 65, 70, 72, 73], "fals": [0, 7, 17, 26, 37, 39, 44, 45, 65, 69, 70, 72, 73], "py": [0, 3, 4, 5, 7, 8, 11, 12, 14, 15, 17, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 33, 34, 37, 39, 42, 43, 44, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 69, 70, 72], "method": [0, 5, 7, 8, 11, 12, 18, 19, 21, 22, 27, 28, 29, 31, 34, 39, 41, 42, 44, 51, 56, 57, 59, 61, 63, 64, 65, 69, 70, 72, 73], "run_benchmark": 0, "iter": [0, 22, 39, 42, 66], "over": [0, 22, 56, 57, 59, 63], "run": [0, 2, 11, 26, 27, 43, 65], "them": [0, 22, 41, 73], "each": [0, 24, 34, 38, 41, 56, 57, 59, 62, 63, 73], "sequenti": 0, "paramet": [0, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 64, 65, 66, 68, 70, 72, 73, 74], "option": [0, 12, 33, 35, 37, 38, 39, 43, 46, 56, 57, 59, 62, 65, 66, 70, 72, 73, 74], "print_result": 0, "print": [0, 39, 65], "distanc": [0, 12, 26, 34, 37, 39, 42, 43, 45, 56, 57, 59, 63], "time": [0, 3, 5, 7, 8, 12, 26, 30, 31, 41, 42, 44, 47, 56, 57, 59, 63], "pre": [0, 26], "prune": [0, 42], "node": [0, 22, 28, 34, 37, 38, 39, 42, 44, 46], "post": [0, 15], "trajectori": [0, 9, 11, 12, 13, 22, 24, 26, 33, 34, 43, 44, 73], "length": [0, 5, 7, 9, 12, 39, 72], "after": [0, 15, 37, 39, 73], "call": [0, 12, 15, 33, 39, 62, 70, 73], "return": [0, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 72, 73, 74], "type": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 72, 73, 74], "visualize_result": 0, "planner_indic": 0, "meshcat": [0, 13, 38, 72, 73], "visual": [0, 38, 61, 64, 65], "result": [0, 9, 12, 13, 44, 65, 74], "profil": [1, 65, 67], "run_exampl": 2, "example_typ": 2, "str": [2, 3, 5, 6, 7, 8, 12, 13, 15, 17, 21, 22, 24, 29, 30, 31, 32, 36, 37, 38, 42, 43, 46, 47, 49, 51, 60, 61, 62, 64, 65, 66, 70, 72, 73], "example_nam": 2, "test_mod": 2, "true": [2, 7, 17, 21, 26, 37, 38, 39, 45, 69, 72, 73], "ani": [2, 3, 5, 7, 8, 15, 27, 28, 30, 31, 43, 46, 47, 49, 51, 56, 57, 61, 62, 64, 66, 70, 72, 73], "perform": [2, 3, 8, 15, 26, 27, 30, 31, 35, 39, 47, 64, 65], "given": [2, 12, 13, 15, 17, 22, 24, 26, 27, 33, 37, 41, 45, 72, 73, 74], "task": [2, 3, 7, 8, 15, 17, 26, 30, 31, 47, 52, 53, 54, 55, 65], "can": [2, 22, 64, 65, 66, 73], "planner_single_go": 2, "planner_multi_go": 2, "planner_explor": 2, "floating_hand": 2, "proximity_optim": 2, "allegro_hand": 2, "test": 2, "mode": [2, 27, 46], "thi": [2, 12, 15, 37, 39, 41, 45, 49, 52, 53, 54, 55, 61, 62, 64, 65, 72, 73, 74], "i": [2, 5, 7, 15, 22, 24, 26, 27, 28, 34, 35, 37, 38, 41, 42, 45, 49, 56, 57, 59, 61, 62, 64, 65, 68, 70, 72, 73, 74], "much": [2, 27], "faster": 2, "won": 2, "t": [2, 7, 41, 72, 74], "fulli": [2, 37], "complet": [2, 22, 27, 49], "cmaesconfig": 3, "base": [3, 5, 7, 8, 11, 16, 17, 21, 22, 24, 27, 28, 29, 30, 31, 33, 34, 37, 39, 43, 45, 46, 47, 49, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 68, 69, 72, 73], "control": [3, 8, 27, 30, 31, 33, 39, 47, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65], "sampling_bas": [3, 6, 8, 30, 31, 47], "samplingbaseconfig": [3, 7, 8, 30, 31, 47], "configur": [3, 8, 17, 24, 30, 31, 47, 56, 57, 59, 63, 64, 70, 73], "sampl": [3, 7, 12, 18, 21, 26, 27, 29, 30, 34, 37, 39, 47, 64], "attribut": [3, 4, 7, 8, 12, 14, 17, 26, 29, 30, 31, 33, 46, 47, 49, 52, 53, 54, 55, 56, 57, 59, 62, 63, 70, 72], "sigma_init": 3, "float": [3, 5, 7, 8, 12, 13, 17, 26, 27, 28, 30, 31, 33, 37, 38, 39, 41, 42, 45, 46, 47, 52, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 72, 73], "valu": [3, 5, 7, 8, 14, 17, 22, 27, 30, 31, 41, 43, 46, 47, 49, 63, 66, 72, 73], "0": [3, 4, 7, 8, 11, 12, 17, 26, 27, 28, 30, 31, 35, 37, 38, 42, 44, 45, 46, 47, 52, 55, 56, 57, 59, 62, 63, 66, 72, 73, 74], "05": [3, 27, 30, 47, 55, 66], "max_it": 3, "int": [3, 5, 7, 8, 9, 12, 13, 14, 17, 22, 26, 27, 28, 34, 37, 38, 39, 41, 42, 43, 44, 52, 53, 54, 55, 61, 62, 64, 66, 72, 73], "20": [3, 7, 45], "config": [3, 5, 7, 8, 17, 30, 31, 47, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 70], "reward_config": [3, 7, 8, 30, 31, 47], "taskconfig": [3, 7, 8, 30, 31, 47, 56, 57, 59, 60, 61, 62, 63, 64, 65], "samplingbas": [3, 7, 8, 30, 31, 47], "object": [3, 7, 8, 12, 14, 18, 19, 21, 22, 26, 30, 31, 34, 45, 46, 47, 49, 64, 68, 69, 72, 73], "hyperparamet": [3, 8, 30, 31, 47], "model": [3, 5, 7, 8, 12, 13, 26, 30, 31, 36, 43, 47, 49, 56, 57, 59, 61, 62, 63, 64, 72, 73], "mujoco": [3, 8, 11, 12, 13, 30, 31, 47, 49, 51, 61, 62, 73], "system": [3, 8, 30, 31, 39, 47, 62, 64], "being": [3, 7, 8, 30, 31, 47], "data": [3, 7, 8, 11, 12, 13, 26, 27, 28, 29, 30, 31, 37, 43, 45, 46, 47, 64, 65, 72], "current": [3, 5, 7, 8, 15, 22, 26, 28, 30, 31, 33, 37, 39, 42, 47, 61, 65, 66, 73], "reward_func": [3, 8, 30, 31, 47], "function": [3, 5, 7, 8, 12, 15, 22, 26, 30, 31, 37, 45, 47, 49, 52, 53, 54, 55, 64, 65, 70, 73, 74], "map": [3, 8, 30, 31, 37, 47, 56, 57, 59, 63, 72, 74], "batch": [3, 7, 8, 29, 30, 31, 47, 56, 57, 59, 63, 74], "state": [3, 5, 7, 8, 11, 12, 14, 15, 17, 22, 26, 27, 28, 30, 31, 33, 34, 37, 43, 44, 46, 47, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 73], "reward": [3, 8, 15, 26, 30, 31, 37, 38, 39, 42, 43, 47, 52, 53, 54, 55, 56, 57, 59, 63, 64], "update_act": [3, 5, 7, 8, 30, 31, 47], "curr_stat": [3, 5, 7, 8, 30, 31, 47], "numpi": [3, 5, 7, 8, 12, 13, 14, 17, 22, 24, 27, 30, 31, 38, 41, 47, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 69, 72, 73, 74], "ndarrai": [3, 5, 7, 8, 13, 14, 17, 22, 24, 30, 31, 38, 41, 47, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 72, 73, 74], "curr_tim": [3, 5, 7, 8, 30, 31, 47], "additional_info": [3, 5, 7, 8, 30, 31, 47, 61, 62, 64], "dict": [3, 5, 6, 7, 8, 11, 12, 14, 15, 22, 24, 27, 28, 30, 31, 39, 43, 47, 49, 60, 61, 62, 64, 70, 72, 73], "rollout": [3, 5, 7, 8, 26, 30, 31, 39, 47, 56, 57, 59, 61, 62, 63, 64], "comput": [3, 8, 12, 22, 27, 30, 31, 33, 41, 47, 74], "from": [3, 5, 7, 8, 11, 12, 13, 26, 27, 29, 30, 31, 33, 34, 36, 37, 39, 43, 44, 45, 47, 49, 56, 57, 59, 64, 66, 72, 73, 74], "action": [3, 5, 7, 8, 9, 11, 12, 15, 18, 19, 21, 22, 24, 26, 27, 30, 31, 33, 34, 35, 37, 38, 39, 41, 42, 44, 46, 47, 74], "best": [3, 8, 30, 31, 37, 38, 39, 42, 47], "polici": [3, 8, 11, 26, 27, 30, 31, 33, 43, 47, 62], "legs_sitting_po": 4, "legs_standing_po": 4, "arm_stowed_po": 4, "arm_unstowed_po": 4, "sitting_stowed_po": 4, "sitting_unstowed_po": 4, "standing_stowed_po": 4, "standing_unstowed_po": 4, "standing_height": 4, "52": 4, "arm_link_nam": 4, "arm_link_sh0": 4, "arm_link_sh1": 4, "arm_link_el0": 4, "arm_link_el1": 4, "arm_link_wr0": 4, "arm_link_wr1": 4, "leg_link_nam": 4, "front_left_hip": 4, "front_left_upper_leg": 4, "front_left_lower_leg": 4, "front_right_hip": 4, "arm_joint_nam": 4, "arm_sh0": 4, "arm_sh1": 4, "arm_el0": 4, "arm_el1": 4, "arm_wr0": 4, "arm_wr1": 4, "arm_f1x": 4, "leg_joint_nam": 4, "joint_front_left_hip_x": 4, "joint_front_left_hip_i": 4, "joint_front_left_kne": 4, "spot_body_slic": 4, "slice": [4, 14, 33, 45], "spot_quat_slic": 4, "spot_legs_slic": 4, "spot_arms_slic": 4, "spot_body_vel_slic": 4, "spot_angs_vel_slic": 4, "spot_legs_vel_slic": 4, "spot_arms_vel_slic": 4, "spot_state_ind": 4, "spot": [4, 14, 17, 24, 33, 49, 52, 53, 54, 55, 62, 63], "": [4, 12, 27, 34, 45, 51], "indic": [4, 12, 15, 37, 38, 39], "where": [4, 42, 57, 66, 73], "relev": 4, "bodi": [4, 12, 13, 49, 63, 73], "part": [4, 12, 24, 72, 73], "ar": [4, 14, 22, 26, 27, 33, 34, 37, 39, 41, 57, 66, 73, 74], "body_slic": 4, "quat_slic": 4, "legs_slic": 4, "arms_slic": 4, "body_vel_slic": 4, "angs_vel_slic": 4, "legs_vel_slic": 4, "arms_vel_slic": 4, "controllerconfig": [5, 6, 7, 65], "spline": [5, 7, 62, 73], "abstract": [5, 7, 62, 64], "all": [5, 7, 12, 15, 28, 37, 39, 41, 51, 66, 68, 72, 73], "implement": [5, 7, 27, 28, 39, 43, 56, 57, 59, 63, 64, 72], "properti": [5, 7, 15, 17, 37, 43, 49, 52, 53, 54, 55, 61, 62, 64, 72, 73], "num_timestep": [5, 7], "abstractmethod": [5, 64], "helper": [5, 7, 65], "recalcul": [5, 7], "number": [5, 7, 37, 38, 39, 42, 46, 52, 53, 54, 55, 61, 73], "timestep": [5, 7, 28, 61, 62, 64], "simul": [5, 7, 12, 15, 34, 37, 61, 62, 64, 65], "rollout_tim": [5, 7], "calcul": [5, 7, 15, 34, 37, 41, 45, 74], "horizon": [5, 7, 8], "contain": [5, 7, 9, 12, 13, 22, 26, 27, 28, 33, 37, 43, 45, 61, 64, 65, 66, 68, 72, 73], "signal": [5, 7], "appli": [5, 7, 12, 41, 46], "make_model": [5, 7, 61, 62, 64], "re": [5, 7, 34, 39, 41], "size": [5, 7, 12, 14, 28, 37, 38, 39, 41, 72, 73], "vector": [5, 7, 9, 11, 12, 33, 35, 39, 41, 62, 64, 74], "num_rollout": [5, 7, 8], "updat": [5, 7, 12, 14, 15, 26, 27, 28, 37, 39, 43, 64, 65, 66, 73], "queri": [5, 7, 15, 21], "set_default_control": [5, 7], "set": [5, 7, 12, 14, 15, 17, 26, 27, 34, 37, 38, 41, 43, 46, 49, 61, 64, 65, 66, 72, 73], "default": [5, 7, 14, 17, 19, 33, 37, 38, 39, 45, 46, 56, 57, 59, 61, 62, 66, 69, 72, 73, 74], "zero": [5, 7, 9, 28, 33, 56, 57, 59, 61, 64], "reset": [5, 7, 12, 15, 22, 26, 29, 34, 37, 38, 39, 42, 43, 44, 52, 53, 54, 55, 56, 57, 59, 61, 63, 64, 65, 73], "get_registered_control": 6, "tupl": [6, 12, 13, 15, 17, 24, 26, 34, 37, 39, 42, 44, 60, 61, 62, 64, 73], "register_control": 6, "controller_typ": 6, "controller_config_typ": 6, "max_num_trac": 7, "5": [7, 8, 11, 31, 37, 45, 46, 52, 59, 72, 74], "1": [7, 8, 11, 12, 17, 24, 27, 30, 31, 35, 37, 38, 41, 45, 46, 47, 52, 55, 56, 57, 59, 63, 66, 72, 73, 74], "num_nod": 7, "32": [7, 8], "spline_ord": 7, "liter": [7, 17], "slinear": 7, "cubic": 7, "control_freq": 7, "use_noise_ramp": 7, "spline_timestep": 7, "creat": [7, 9, 14, 26, 33, 42, 49, 64, 65, 66], "new": [7, 14, 22, 28, 37, 39, 51, 65, 73], "scipi": [7, 61, 62, 64], "interpol": [7, 9, 46, 61, 62, 64], "interp1d": [7, 61, 62, 64], "defin": [7, 56, 57, 59, 61, 62, 63, 64, 72, 74], "update_splin": 7, "update_trac": 7, "trace": [7, 26, 65], "extract": [7, 12, 73], "sensor": [7, 11, 14, 37, 45, 49, 52, 53, 54, 55, 56, 57, 59, 63, 64], "read": [7, 64], "we": [7, 12, 22, 34, 39, 56, 57, 59, 66, 72, 74], "need": [7, 15, 61, 64, 68], "have": [7, 24, 41, 63], "num_spline_point": 7, "line": [7, 38], "segment": [7, 38], "initi": [7, 11, 12, 15, 22, 26, 34, 39, 49, 65, 73], "shape": [7, 28, 57, 64, 74], "x": [7, 27, 28, 41, 72, 73, 74], "num_physics_substep": 7, "nsensordata": [7, 12], "end": [7, 9, 12, 15, 24, 33, 37, 38, 44, 46, 57], "up": [7, 15, 37, 63, 65, 73], "num_elit": [7, 8], "num_trace_sensor": 7, "singl": [7, 39, 74], "2": [7, 8, 11, 17, 24, 38, 46, 62, 64, 72, 73, 74], "first": [7, 9, 12, 41], "last": [7, 12, 15, 34, 37, 39, 41, 46, 72], "point": [7, 38, 46, 73], "3": [7, 11, 13, 17, 24, 27, 38, 41, 45, 46, 55, 72, 74], "3d": [7, 28, 73], "po": [7, 41, 72, 73, 74], "make_splin": 7, "arrai": [7, 9, 12, 14, 27, 28, 33, 41, 43, 64, 69, 73, 74], "knot": 7, "possibli": 7, "m": [7, 13, 41, 72], "order": [7, 9, 24, 33], "us": [7, 9, 12, 15, 26, 28, 33, 37, 49, 61, 62, 64, 66, 73, 74], "same": [7, 22, 34, 39, 41, 61, 66], "extrapol": 7, "whether": [7, 37, 38, 39], "crossentropyconfig": 8, "cross": [8, 31], "entropi": [8, 31], "sigma_min": 8, "sigma_max": 8, "8": [8, 11, 17], "noise_ramp": [8, 47], "crossentropymethod": 8, "The": [8, 9, 13, 17, 24, 27, 28, 31, 32, 33, 35, 37, 41, 45, 56, 57, 59, 61, 72, 73], "submodul": [9, 12, 18, 19, 21, 22], "create_action_trajectori": 9, "controltyp": [9, 46], "start_act": [9, 24, 33, 37], "floattensor": [9, 11, 12, 15, 18, 19, 21, 22, 26, 27, 28, 33, 34, 35, 37, 38, 39, 41, 42, 44, 45, 73], "end_act": [9, 24, 33, 37], "trajectory_step": [9, 33], "hold": [9, 12, 37], "A": [9, 12, 22, 27, 28, 41, 45, 57, 64, 72, 73, 74], "na": [9, 12, 22, 33], "start": [9, 12, 15, 26, 33, 37, 38, 39, 44, 46], "desir": [9, 12, 33, 52, 53, 54, 55, 66], "For": [9, 74], "onli": [9, 12, 15, 27], "held": [9, 33], "entir": 9, "linear": [9, 34, 56, 57, 59, 74], "between": [9, 12, 39, 46, 56, 57, 59, 63, 66], "an": [9, 18, 22, 27, 28, 33, 34, 38, 41, 45, 49, 62, 65, 72, 73, 74], "n": [9, 12, 13, 22, 33, 35, 41, 72], "modul": [10, 16], "action_trajectori": [10, 11, 12], "locomotion_pl": 10, "mujoco_dynam": [10, 11, 17, 18, 19, 21, 22, 24, 26, 34, 37, 39, 44, 73], "mujoco_util": 10, "state_help": 10, "isaac_to_mujoco_ix": 11, "4": [11, 27, 38, 46, 52, 74], "9": [11, 45], "6": [11, 73, 74], "10": [11, 17, 55, 56, 57], "7": [11, 38, 45], "11": 11, "mujoco_to_isaac_ix": 11, "isaac_to_mujoco": 11, "isaac": 11, "tensor": [11, 12, 15, 17, 26, 27, 28, 29, 36, 37, 38, 43, 45, 46, 74], "mujoco_to_isaac": 11, "locomotionpl": 11, "param": [11, 12, 15, 17, 18, 19, 21, 22, 26, 27, 29, 33, 34, 35, 37, 39, 42, 44, 66, 72], "parameter_contain": [11, 12, 15, 17, 18, 19, 21, 22, 26, 29, 34, 37, 39, 40, 42, 44], "parametercontain": [11, 12, 15, 17, 18, 19, 21, 22, 26, 29, 34, 37, 39, 42, 43, 44], "mujocopl": [11, 12, 15, 17, 18, 19, 21, 22, 24, 26, 34, 37, 39, 44, 73], "locomot": [11, 33, 62], "plant": [11, 12, 15, 17, 18, 19, 21, 22, 24, 26, 33, 34, 37, 39, 44, 73], "load_polici": 11, "load": [11, 26, 27, 28, 36, 37, 43, 49, 73], "process_observ": 11, "ob": [11, 27, 28], "velocity_command": 11, "process": [11, 15, 27, 43, 65, 66, 70], "observ": [11, 15, 26, 27, 28], "veloc": [11, 12, 14, 17, 56, 57, 59, 61, 64], "command": [11, 14, 61, 62], "run_polici": 11, "base_command": 11, "leg": [11, 14, 33, 49, 63], "joint": [11, 12, 15, 17, 24, 73], "target": [11, 15, 17, 27, 65, 66], "process_output": 11, "raw_output": 11, "raw": 11, "output": [11, 12, 27, 41], "get_sensor": [11, 12], "get": [11, 12, 17, 27, 29, 32, 33, 37, 39, 42, 46, 49, 51, 52, 53, 54, 55, 61, 64, 72], "info": [11, 12, 15, 39], "histori": 11, "get_joint_dimens": 12, "joint_id": 12, "arraylik": [12, 74], "state_address": 12, "state_length": 12, "correspond": [12, 46, 74], "id": [12, 13, 34, 37, 39, 42], "address": 12, "total": [12, 37], "nq": [12, 34, 73], "decompose_state_dimens": 12, "mjmodel": [12, 13, 61, 73], "decompos": 12, "actuat": [12, 22, 33, 56, 57, 61, 64], "posit": [12, 17, 57, 63, 72, 73, 74], "unactu": 12, "scale_dist": 12, "delta_st": [12, 37], "scale": [12, 15, 26, 35, 38, 39, 41, 43, 46], "cost": 12, "matrix": [12, 37, 41, 72, 74], "xml_model_path": 12, "condit": [12, 15, 57, 64], "appropri": [12, 15], "singular": 12, "parallel": [12, 39], "nx": [12, 73], "num_env": 12, "num_step": [12, 39], "action_time_step": 12, "addit": [12, 26, 61, 64], "inform": [12, 15, 61, 64], "pass": [12, 27], "next": [12, 26], "intermedi": 12, "get_gradi": 12, "gradient": [12, 26, 34, 46], "state_gradients_st": 12, "state_gradients_control": 12, "nu": [12, 39, 52, 53, 54, 55, 61, 64], "sensor_gradients_st": 12, "sensor_gradients_control": 12, "set_stat": 12, "get_stat": 12, "set_act": 12, "get_act": 12, "update_sensor": 12, "measur": 12, "NOT": 12, "accler": 12, "minim": [12, 34, 73], "mj_step1": 12, "see": 12, "link": [12, 38], "below": 12, "more": 12, "detail": 12, "http": [12, 28], "readthedoc": 12, "io": [12, 27, 28, 61, 64, 65, 67], "en": 12, "latest": [12, 36], "program": 12, "html": [12, 73], "highlight": 12, "loop": [12, 15, 65], "final": [12, 63], "scaled_distances_to": 12, "target_st": 12, "state_differ": 12, "s1": 12, "s2": 12, "h": 12, "finit": 12, "differ": [12, 37, 63], "two": 12, "step": [12, 15, 27, 38, 39, 44, 61, 62, 64, 66], "d": [12, 37, 72, 74], "second": [12, 41], "state_addit": 12, "integr": 12, "forward": [12, 27, 62], "get_mass": 12, "retriev": [12, 13, 24], "mass": 12, "get_quat_indic": 12, "store": [12, 15, 29, 36, 42, 65], "quaternion": [12, 17, 72, 74], "field": [12, 65, 66, 70], "normalize_st": 12, "normal": [12, 25, 26, 27, 36, 37, 41], "randomli": [12, 26, 39], "portion": 12, "get_collision_fre": 12, "collis": [12, 37], "free": [12, 37, 46], "exist": 12, "render": [13, 38, 72, 73], "get_body_nam": 13, "bodyid": 13, "get_geom_nam": 13, "geomid": 13, "geom": 13, "get_geometry_rgba": 13, "rgba": [13, 38, 72, 73], "color": [13, 38, 72, 73], "get_mesh_data": 13, "meshid": 13, "vertic": [13, 38, 56, 57, 72], "face": [13, 72], "specifi": [13, 45, 46, 72, 73], "mesh": [13, 72], "index": [13, 26, 37, 38, 45, 57], "np": [13, 17, 38, 45, 72, 73, 74], "slice_union": 14, "union": [14, 36, 37], "multipl": [14, 22, 49, 66, 73, 74], "ensur": [14, 35, 37, 49], "thei": [14, 22, 37, 41], "contigu": 14, "statearrai": 14, "threadedlocomotionpl": 14, "base_po": 14, "base_quat": 14, "fl_leg": 14, "fr_leg": 14, "hl_leg": 14, "hr_leg": 14, "arm": [14, 17, 24, 33, 49, 63, 73], "object_po": 14, "object_quat": 14, "base_lin_vel": 14, "base_ang_vel": 14, "fl_leg_vel": 14, "fr_leg_vel": 14, "hl_leg_vel": 14, "hr_leg_vel": 14, "arm_vel": 14, "object_lin_vel": 14, "object_ang_vel": 14, "legs_vel": 14, "64": 14, "commandarrai": 14, "longitudinal_vel": 14, "lateral_vel": 14, "yaw_vel": 14, "base_rol": 14, "base_pitch": 14, "base_height": 14, "25": [14, 59, 62], "non_veloc": 14, "classmethod": [14, 49], "num_system": 14, "set_default": 14, "kwarg": [14, 24, 39, 70, 72], "as_dict": 14, "convert": [14, 33, 37, 43, 70, 72, 74], "dictionari": [14, 15, 49, 73], "sensorarrai": 14, "body_object": 14, "object_y_axi": 14, "fngr_object": 14, "trace_bodi": 14, "trace_gripp": 14, "dexterityenv": 15, "dexter": [15, 16, 42, 56, 57, 59, 63, 65, 73], "observation_spac": 15, "simplenamespac": 15, "space": [15, 41, 44, 73, 74], "action_spac": 15, "metrics_kei": 15, "kei": [15, 29, 43, 49, 72, 73], "metric": 15, "__post_init__": [15, 17, 26, 29, 51], "setup_pl": 15, "setup_action_processor": 15, "actionprocessor": [15, 33], "setup_buff": [15, 29], "buffer": [15, 26, 29, 65], "tracker": 15, "scale_act": 15, "rang": [15, 39, 41, 46], "uniform_random_act": 15, "gener": [15, 17, 19, 34, 37, 49, 51, 61, 64, 70, 73], "uniform": 15, "random": [15, 19, 27, 34, 37, 46, 56, 57, 59, 63], "get_metr": 15, "onc": [15, 73], "begin": 15, "train": [15, 26, 27], "otherwis": [15, 45], "automat": 15, "when": [15, 24, 37, 65, 66], "individu": [15, 22, 38, 41], "episod": [15, 26, 28], "reset_ix": 15, "ix": 15, "specif": [15, 24, 38, 39, 51, 61, 64, 73], "identifi": 15, "update_joint_target": 15, "step_sim": 15, "dynam": [15, 17, 18, 19, 21, 22, 24, 26, 34, 37, 39, 42, 44, 73], "post_physics_step": 15, "physic": [15, 61, 62, 65], "check_success": 15, "check": [15, 28, 37], "meet": 15, "success": [15, 26], "criteria": 15, "check_failur": 15, "failur": 15, "update_termin": 15, "termin": [15, 24, 26, 37, 57, 61, 64, 65], "task_reward": 15, "update_reward": 15, "process_reset": 15, "update_ob": 15, "preserve_reset_ob": 15, "preserv": [15, 73], "q": [15, 72, 74], "non": [15, 37], "update_info": 15, "reset_st": 15, "env_ix": 15, "set_previous_end_act": 15, "start_stat": [15, 26, 37], "previou": [15, 33, 46], "set_current_st": 15, "set_goal_st": [15, 37], "goal": [15, 26, 27, 28, 34, 37, 38, 39, 44, 46, 52, 53, 54, 55, 59, 63, 72, 73], "set_start_st": [15, 37], "close": [15, 24, 45, 46], "necessari": [15, 22], "cleanup": 15, "tire_state_cache_gener": 16, "tiregeneratorconfig": 17, "cach": [17, 37, 43], "spot_tir": 17, "spot_floating_tir": 17, "cache_s": 17, "10000": 17, "enable_rend": 17, "radius_rang": 17, "distance_rang": 17, "object_z": 17, "linear_velocity_rang": 17, "angular_velocity_rang": 17, "randomize_veloc": 17, "spotarmik": 17, "invers": [17, 74], "kinemat": 17, "actuated_po": [17, 33], "max_iter": 17, "200": 17, "integration_dt": 17, "damp": 17, "0001": 17, "enable_orientation_control": 17, "position_toler": 17, "01": [17, 28, 38, 56, 57, 66, 73], "orientation_toler": 17, "progress_threshold": 17, "max_no_progress_step": 17, "solv": [17, 26], "target_xpo": 17, "target_xquat": 17, "problem": 17, "orient": [17, 45, 63, 72, 73], "angl": [17, 45, 56, 57, 63], "tirestatecachegener": 17, "tire": [17, 55], "default_arm_pos": 17, "pose": [17, 24, 73], "default_base_pos": 17, "default_veloc": 17, "task_nam": 17, "generate_cach": 17, "set_floating_spot_cach": 17, "graph": [18, 19, 21, 22, 26, 34, 38, 39, 40, 42, 43, 44], "expert_act": 18, "node_id": [18, 19, 21, 22, 26, 34, 39, 42], "select": [18, 27, 34, 39, 42, 46, 65], "expertsampl": [18, 19, 21, 22], "accord": [18, 39], "distribtuion": 18, "sampler": [19, 29, 34, 39, 42], "callback": [19, 21, 22, 39, 65, 66], "primit": 20, "spot_standing_box": [20, 23], "expert_sampl": [20, 21, 22], "network": [20, 25, 26, 36], "networksampl": 21, "is_loc": [21, 26, 36], "path": [21, 26, 32, 36, 37, 38, 39, 42, 43, 44, 49, 51, 65, 69, 72], "model_nam": 21, "actor": [21, 26, 27, 36], "pt": 21, "state_norm_nam": 21, "state_norm": [21, 27, 28], "neural": 21, "net": [21, 27], "primitivesampl": 22, "actions_func": 22, "actions_func_kwarg": 22, "higher": 22, "level": 22, "entail": 22, "low": 22, "reach": [22, 39, 45], "some": 22, "subgoal": 22, "It": [22, 37, 73], "meant": 22, "repres": [22, 24, 45, 49, 57, 74], "manipul": [22, 52, 53, 54, 55], "grasp": [22, 24], "push": [22, 59], "etc": 22, "proper": 22, "sequenc": [22, 73], "note": 22, "duplic": 22, "should": [22, 62, 73], "sinc": [22, 56, 57, 59], "stage": 22, "execut": [22, 49, 65], "compute_low_level_act": 22, "todo": 22, "action_tim": [22, 24], "ignor": 22, "whatev": 22, "action_sampl": [22, 39, 40, 44], "overwrit": [22, 72], "here": [22, 66], "clear": 22, "action_seq": 22, "origin": [22, 57, 73], "ongo": 22, "stand": [24, 63], "box": [24, 35, 52, 53, 54, 55, 72], "e": [24, 73], "g": [24, 73], "spot_ik_mujoco": 24, "dx": 24, "ee_bodi": 24, "arm_link_fngr": 24, "ik": 24, "effector": 24, "compute_grasp_pose_for_handle_top": 24, "chang": [24, 37, 65], "handl": [24, 33, 49, 66, 69], "hard": 24, "code": 24, "domain": [24, 46], "compute_grasp_act": 24, "move": [24, 52, 55], "gripper": 24, "ha": [24, 56, 57, 59, 63], "three": 24, "open": 24, "learner": 25, "replay_buff": [25, 26], "encapsul": [26, 27], "deep": [26, 27], "determinist": [26, 27], "ddpg": [26, 27], "algorithm": 26, "critic": [26, 27, 36], "take": [26, 73], "care": 26, "checkpoint": [26, 27, 28], "dure": 26, "well": [26, 27], "replaybuff": [26, 29], "save_loc": 26, "save_cloud": 26, "load_loc": 26, "load_cloud": 26, "construct": [26, 74], "actor_act": 26, "goal_stat": [26, 37, 73], "replai": 26, "relative_distances_to": 26, "current_st": [26, 33], "reward_funct": 26, "update_norm": 26, "plai": [26, 73], "experi": 26, "instead": 26, "everi": 26, "distribut": [26, 28, 37, 39, 41], "equal": 26, "what": 26, "encout": 26, "policy_rollout": [26, 62], "tensordict": [26, 29], "add": [26, 37, 51, 66, 72, 73], "graph_rollout": 26, "set_demonstration_inject": 26, "demonstr": 26, "inject": 26, "num_epoch": 26, "50": 26, "environ": [26, 73], "preprocess_sampl": 26, "preprocess": [26, 28], "train_actor_crit": 26, "discount_factor": 26, "98": 26, "agent": [26, 27], "eval_ag": 26, "evalu": [26, 27, 37, 62], "learner_ev": 26, "averag": [26, 27], "rate": [26, 65], "save_model": [26, 36], "save": [26, 27, 28, 36, 37, 73], "locat": [26, 52, 53, 54, 55], "under": 26, "model_filenam": 26, "load_model": [26, 36, 73], "pathlib": [26, 36, 43, 49, 51, 65], "act": 27, "wrapper": [27, 49, 70], "around": [27, 39], "actual": [27, 39], "provid": [27, 37, 49, 61, 64], "util": [27, 73], "ddp": 27, "vanilla": 27, "soft_upd": 27, "nn": 27, "tau": 27, "soft": 27, "weight": 27, "shift": 27, "factor": 27, "direct": [27, 34, 41], "which": [27, 33, 37, 62, 66, 73, 74], "copi": 27, "how": 27, "valid": [27, 37], "size_": 27, "size_a": 27, "nlayer": 27, "layer_width": 27, "256": 27, "lr": 27, "001": [27, 37], "ep": [27, 28], "action_clip": 27, "select_act": 27, "input": [27, 28, 41, 58, 61, 73, 74], "If": [27, 37, 41, 65, 66, 74], "nois": 27, "choos": [27, 39], "probabl": 27, "self": [27, 28, 43, 46, 64], "clip": [27, 33, 46], "maximum": [27, 41, 45, 66], "__call__": [27, 28, 33, 34], "directli": [27, 37], "backward_step": 27, "loss": 27, "backward": 27, "optim": [27, 34, 46], "without": 27, "eval": 27, "noisi": 27, "update_target": 27, "transfer": 27, "fraction": 27, "f": [27, 28, 49, 74], "bufferedwrit": [27, 28], "continu": [27, 46, 73], "choic": 27, "criticnetwork": 27, "enabl": [28, 39, 45, 65], "keep": 28, "consist": 28, "across": [28, 41], "github": 28, "com": 28, "openai": 28, "baselin": 28, "maintain": 28, "estim": 28, "mean": [28, 72], "varianc": 28, "unit": [28, 74], "alia": 28, "expect": 28, "dimens": [28, 41, 64], "rais": [28, 41], "assertionerror": 28, "fail": 28, "normalize_ob": 28, "fuse": 28, "storage_class": 29, "torchrl": 29, "storag": 29, "sampler_class": 29, "setup_storag": 29, "setup": [29, 65], "setup_sampl": 29, "extend": [29, 34, 39], "__getitem__": [29, 49, 51], "item": 29, "overload": 29, "trajectoryreplaybuff": 29, "mppiconfig": 30, "predict": [30, 47], "sigma": [30, 31, 47], "temperatur": [30, 31], "particlefilterconfig": 31, "particlefilt": 31, "get_package_path": 32, "sourc": 32, "tree": 32, "benedict": [33, 35], "get_start_act": 33, "current_actuated_st": 33, "previous_end_act": 33, "depend": [33, 38], "action_start_mod": 33, "get_end_act": 33, "relative_act": [33, 37, 39], "action_typ": [33, 39], "actiontyp": [33, 34, 39, 42, 46], "absolut": 33, "rel": [33, 37, 39], "action_end_mod": 33, "get_action_trajectori": 33, "get_actuated_st": 33, "make": [33, 61], "callabl": [33, 39, 49, 66, 70], "On": 33, "descript": [33, 37], "spotfloatingactionprocessor": 33, "base_action_ix": 33, "arm_action_ix": 33, "polar": 33, "coordin": [33, 73, 74], "motion": [33, 46], "base_action_to_egocentr": 33, "robot": [33, 45, 49, 73], "world": 33, "frame": [33, 49, 73], "egocentr": 33, "clip_base_act": 33, "base_act": 33, "spotwholebodyactionprocessor": 33, "arm_state_ix": 33, "processor": 33, "wholebodi": 33, "vx": 33, "vy": 33, "vtheta": 33, "power": 33, "separ": [33, 69], "while": 33, "parameter": 33, "actionsampl": [34, 39, 44], "intern": 34, "random_direct": 34, "proximity_direct": 34, "proxim": [34, 37, 46], "continuation_direct": 34, "edg": [34, 38], "goal_direct": 34, "formul": 34, "quadrat": 34, "directions_act": 34, "look": [34, 70], "k": [34, 41], "expand": 34, "combin": [34, 74], "potenti": 34, "project": [34, 41, 42, 74], "eigenspac": [34, 41, 43], "clip_act": 35, "box_scal": 35, "v": [35, 41, 74], "v_min": 35, "v_max": 35, "v_mid": 35, "down": 35, "belong": 35, "version": [35, 72], "v_bar": 35, "about": 35, "centerpoint": 35, "alpha": 35, "save_tensor": 36, "dest_path": 36, "gcp": 36, "bucket": 36, "load_tensor": 36, "src_path": 36, "learn": 36, "either": [36, 39, 62, 73], "local": 36, "find_latest_model_path": 36, "base_path": 36, "find": [36, 39], "directori": [36, 43], "sample_related_sub_goal_st": 37, "relat": 37, "sub": 37, "bound": [37, 52, 53, 54, 55], "num_parallel_search": 37, "state_dimens": 37, "new_goal_st": 37, "assum": [37, 39, 41, 74], "diagon": [37, 72], "covari": [37, 72], "reli": 37, "fact": 37, "entri": 37, "independ": [37, 41], "ident": 37, "sample_feasible_st": 37, "bound_low": 37, "bound_upp": 37, "num_attempt": 37, "feasibl": 37, "within": [37, 41], "lower": [37, 72], "upper": 37, "attempt": 37, "feasible_st": 37, "possibl": 37, "ignore_sampled_state_collis": 37, "found": 37, "sample_random_st": 37, "sample_random_start_st": 37, "paramt": 37, "sample_random_goal_st": 37, "sample_random_sub_goal_st": 37, "node_id_to_search_index_map": 37, "search": [37, 38, 39, 42, 44], "root": [37, 44], "calculate_distance_reward": 37, "calculate_proximity_reward": 37, "calculate_reachability_reward": 37, "minimum_dist": 37, "reachabl": 37, "matric": [37, 41, 74], "delta": 37, "minimum": [37, 66], "add_total_reward": 37, "sum": [37, 56, 57, 59, 63], "check_for_early_termin": 37, "sensordata": [37, 45], "earli": 37, "reachability_cach": 37, "b": [37, 41], "reachability_matric": 37, "add_nod": 37, "root_id": 37, "parent_id": 37, "is_terminal_nod": 37, "is_main_nod": 37, "its": [37, 41, 45, 65, 66], "ad": [37, 66], "term": [37, 56, 57, 59, 63], "connect": 37, "determin": [37, 45], "main": [37, 49, 63, 65], "reset_sub_goal_st": 37, "change_sub_goal_st": 37, "sub_goal_st": 37, "deactivate_nod": 37, "deactiv": 37, "requir": 37, "activate_all_nod": 37, "activ": 37, "inact": 37, "sorted_progress_id": 37, "reward_bas": 37, "search_index": [37, 38, 42, 44], "non_termin": 37, "sort": 37, "get_best_id": 37, "search_indic": [37, 39], "is_worse_than": 37, "comparison_id": 37, "wors": 37, "than": 37, "comparison": 37, "is_better_than": 37, "better": 37, "number_of_nod": 37, "get_active_main_id": 37, "get_root_id": 37, "shortest_path_to": 37, "idx": 37, "start_id": [37, 44], "shortest": [37, 44], "filenam": [37, 72, 73], "file": [37, 43, 49, 51, 70, 72, 73], "add_child_ids_to_nod": 37, "child": [37, 49, 61], "destroi": 37, "gpu": 37, "memori": 37, "rgba_palett": 38, "transpar": [38, 72], "predefin": 38, "color_gradi": 38, "display_point_cloud": 38, "point_siz": 38, "displai": 38, "cloud": 38, "rgb": [38, 72], "num_point": 38, "display_seg": 38, "line_width": 38, "width": [38, 72], "display_colormap_point_cloud": 38, "is_termin": [38, 57, 61, 64], "colormap_point": 38, "num_color_bin": 38, "12": 38, "colormap": 38, "bin": 38, "display_segments_by_categori": 38, "categori": 38, "string": [38, 49, 69], "display_3d_graph": 38, "logger": [38, 39, 40, 44], "vis_scal": 38, "vis_indic": 38, "node_s": 38, "start_goal_s": 38, "06": 38, "edge_s": 38, "best_path_edge_s": 38, "segment_color": 38, "best_path_color": 38, "node_transpar": 38, "display_best_path": 38, "display_reward_colormap": 38, "reset_visu": 38, "vertex": 38, "In": 38, "pixel": 38, "pareto_distribut": 39, "expon": [39, 41], "pareto": [39, 41, 46], "graphwork": [39, 44], "callback_period": 39, "simulationpl": 39, "node_select": 39, "collect": 39, "rank": 39, "Then": 39, "node_extens": 39, "num_action_step": 39, "sof": 39, "must": [39, 62, 66], "extens": [39, 42], "node_prun": 39, "paths_id": 39, "path_id": 39, "remov": [39, 42, 65, 66], "node_replac": 39, "best_indic": 39, "tri": 39, "replac": 39, "predecessor_nod": 39, "direct_nod": 39, "percentage_rang": 39, "stop": 39, "percentag": 39, "get_progress_info": 39, "print_percentag": 39, "progress": [39, 42], "callback_and_progress_check": 39, "change_go": 39, "booltensor": [39, 45], "singlegoalwork": 39, "singlego": 39, "work": 39, "parallelgoalswork": 39, "arg": [39, 70], "parallelgo": 39, "try_to_reallocate_work": 39, "worker_reset_mask": 39, "try": [39, 65], "realloc": 39, "worker": 39, "mask": 39, "update_extension_length": 39, "search_reset_mask": 39, "reset_finished_work": 39, "finish": 39, "update_pareto_paramet": 39, "new_node_id": 39, "commongoalworkerinterfac": 39, "commongoalwork": 39, "relatedgoalwork": 39, "explorerwork": 39, "explorework": 39, "rolloutwork": 39, "alwai": 39, "inspect_action_typ": 39, "100": [39, 55, 63], "inspect": 39, "tool": 39, "action_processor": 40, "clipping_method": 40, "data_collect": 40, "graph_visu": 40, "graph_work": [40, 44], "linear_algebra": 40, "planner_help": 40, "transformation_matrix": 41, "rot": 41, "4x4": [41, 74], "transform": [41, 72, 74], "rotat": [41, 74], "translat": [41, 74], "like": [41, 72], "3x3": [41, 74], "element": [41, 49, 65, 66], "truncpareto_cdf": 41, "upper_bound": 41, "truncat": 41, "max_scal": 41, "action_rang": 41, "so": 41, "fit": 41, "num_direct": 41, "action_dim": 41, "typic": 41, "one": [41, 70], "dimension": 41, "normalize_multipl": 41, "along": 41, "project_v_on_u": 41, "u": 41, "valueerror": 41, "gram_schmidt": 41, "basis_vector": 41, "orthonorm": 41, "basi": 41, "span": 41, "linearli": 41, "aren": 41, "you": 41, "go": [41, 63], "bad": 41, "column": 41, "project_vectors_on_eigenspac": 41, "orthonormal_basi": 41, "einsum_ij_ij_i": 41, "transpos": [41, 74], "pair": 41, "multipli": 41, "j": 41, "scalar": 41, "einsum_ij_kj_ki": 41, "einsum_ijk_ik_ij": 41, "einsum_ikj_ik_ij": 41, "einsum_jk_ikl_ijl": 41, "l": [41, 74], "einsum_ijk_ikl_ijl": 41, "einsum_ikj_ikl_ijl": 41, "einsum_ijk_ilk_ijl": 41, "log_path": 42, "workspac": 42, "bdai": 42, "log": [42, 65], "log_fil": 42, "get_log_nam": 42, "log_param": 42, "log_search": 42, "iteration_numb": 42, "log_node_select": 42, "strategi": 42, "selectiontyp": [42, 46], "log_action_sampl": 42, "log_node_extens": 42, "best_id": 42, "dynamics_tim": 42, "log_node_prun": 42, "num_removed_nod": 42, "create_distance_log": 42, "create_reward_log": 42, "simple_progress_statist": 42, "simpl": [42, 63], "statist": [42, 70], "simple_path_statist": 42, "selection_strategi": 42, "action_strategi": 42, "yaml_path": 43, "base_yaml_path": 43, "yml": 43, "model_fold": 43, "folder": 43, "examples_directori": 43, "exampl": [43, 72, 73, 74], "xml_folder": 43, "xml": [43, 49, 51, 56, 57, 59, 63], "data_fold": 43, "cache_fold": 43, "state_cache_fold": 43, "graph_cache_fold": 43, "trajectory_cache_fold": 43, "policy_filepath": [43, 62], "filepath": 43, "devic": [43, 46], "__str__": [43, 46], "__getattr__": [43, 49], "__setattr__": [43, 49], "__name": 43, "__valu": 43, "setattr": 43, "__delattr__": 43, "delattr": 43, "__contains__": 43, "load_bas": 43, "yaml": 43, "autofil": 43, "run_autofill_rul": 43, "rule_kei": 43, "rule": 43, "list_of_yaml_arrays_to_tensor": 43, "concat_list_of_arrai": 43, "keypath": 43, "concat": 43, "process_sc": 43, "load_eigenspac": 43, "reset_se": 43, "set_se": 43, "reward_distance_scaling_sqrt": 43, "sqrt": [43, 72], "parse_hardware_paramet": 43, "file_path": 43, "pars": [43, 73], "hardwar": [43, 65], "through": [44, 66], "path_data": 44, "end_id": 44, "shortest_path_data": 44, "closest": 44, "path_trajectori": 44, "shortest_path_trajectori": 44, "plot_search_result": 44, "plot": 44, "is_object_tilt": 45, "tilt_toler": 45, "pi": 45, "y_axis_index": 45, "24": 45, "27": 45, "tilt": 45, "beyond": 45, "toler": 45, "y": [45, 72, 74], "axi": [45, 72], "compar": 45, "consid": 45, "frameyaxi": 45, "radian": 45, "\u03c0": 45, "degre": 45, "is_object_out_of_reach": 45, "reach_toler": 45, "dist_index": 45, "21": 45, "out": [45, 65], "framepo": 45, "meter": 45, "torso_too_close_to_object": 45, "torso_contact_index": 45, "torso": 45, "too": 45, "radiu": [45, 72, 73], "clippingtyp": 46, "enum": 46, "interest": 46, "expert": 46, "exploit": 46, "knowledg": 46, "non_expert": 46, "action_type_directional_map": 46, "actionmod": 46, "relative_to_current_st": 46, "relative_to_previous_end_act": 46, "absolute_act": 46, "zero_order_hold": 46, "first_order_hold": 46, "set_default_device_and_dtyp": 46, "dtype": [46, 66], "float32": 46, "convert_dtyp": 46, "attr": 46, "int_dtyp": 46, "int64": 46, "cast": 46, "integ": [46, 72], "predictivesamplingconfig": 47, "predictivesampl": 47, "scene_compos": 48, "scene_gener": 48, "scene_registri": 48, "spot_sensor": 48, "overrid": [49, 61, 69], "mjbodywrapp": 49, "simplifi": 49, "attach": 49, "access": [49, 66], "mjsbodi": 49, "child_bodi": 49, "deleg": 49, "wrap": 49, "except": [49, 65], "modelel": 49, "includ": [49, 72], "manag": [49, 66, 68], "xml_content": 49, "worldbodi": 49, "header_includ": 49, "from_fil": 49, "xml_path": 49, "from_str": 49, "static": [49, 73], "autoload": 49, "decor": [49, 66], "spec": 49, "befor": 49, "to_xml_str": 49, "mjspec": 49, "to_xml_fil": 49, "write": [49, 65], "spotrobot": 49, "compon": 49, "xml_dir": [49, 51], "compos": 49, "contact": 49, "make_default_header_includ": 49, "asset_dir": [49, 51], "components_dir": 51, "output_dir": 51, "sceneregistri": 51, "registri": 51, "scene_kwarg": 51, "regist": 51, "generate_al": 51, "reset_object_pos": [52, 55], "z_axi": [52, 55], "spotboxconfig": 52, "spot_bas": [52, 53, 54, 55, 60], "spotbaseconfig": [52, 53, 54, 55, 62], "default_command": [52, 53, 54, 55, 56, 57, 59, 62, 63], "goal_posit": [52, 53, 54, 55, 62], "w_orient": 52, "w_torso_proxim": [52, 55], "w_gripper_proxim": [52, 55], "orientation_threshold": 52, "spotbox": 52, "spotbas": [52, 53, 54, 55, 62], "actuator_ctrlrang": [52, 53, 54, 55, 61, 64], "spothandnavigationconfig": 53, "spothandnavig": 53, "navig": [53, 54], "spotnavigationconfig": 54, "spotnavig": 54, "tire_height": 55, "515": 55, "tire_go": 55, "spottireconfig": 55, "goal_tire_po": 55, "fall_penalti": [55, 62], "5000": 55, "tire_fallen_threshold": 55, "torso_goal_offset": 55, "gripper_goal_offset": 55, "15": [55, 56, 57, 59], "gripper_goal_altitud": 55, "w_tire_linear_veloc": 55, "w_tire_angular_veloc": 55, "w_leg_proxim": 55, "spottir": 55, "model_path": [56, 57, 59, 61, 63], "scene": [56, 57, 59, 63], "legaci": [56, 57, 59, 63], "acrobotconfig": 56, "w_vertic": [56, 57], "w_veloc": [56, 57], "w_control": [56, 57], "p_vertic": [56, 57], "cutoff_tim": [56, 57, 59, 62], "mujoco_task": [56, 57, 59, 60, 62, 63], "mujocotask": [56, 57, 59, 61, 62, 63], "balanc": [56, 57, 59], "mjpc": [56, 57, 59], "four": [56, 57, 59, 63], "vertical_rew": [56, 57], "penal": [56, 57, 59, 63], "pole": [56, 57], "velocity_rew": [56, 57], "squar": [56, 57, 59], "angular": [56, 57], "control_rew": [56, 57], "penalti": [56, 57, 59], "neg": [56, 57, 59], "max": [56, 57, 59, 66], "cartpoleconfig": 57, "w_center": 57, "p_center": 57, "centered_rew": 57, "cart": [57, 59], "batch_siz": 57, "traj": 57, "small": 57, "enough": 57, "smooth_l1_norm": 58, "p": 58, "quadratic_norm": 58, "cylinderpushconfig": 59, "cylind": [59, 72], "w_pusher_proxim": 59, "w_pusher_veloc": 59, "w_cart_posit": 59, "pusher_goal_offset": 59, "cart_goal_posit": 59, "cylinderpush": 59, "pusher_reward": 59, "pusher": 59, "velocity_reward": 59, "goal_reward": 59, "acrobot": 60, "cartpol": [60, 65], "cost_funct": 60, "cylinder_push": 60, "spot_position_control": 60, "get_registered_task": 60, "register_task": 60, "task_typ": 60, "task_config_typ": 60, "configt": [61, 62, 64], "mjdata": 61, "additional_task_info": [61, 64], "might": [61, 64], "limit": [61, 64], "dt": [61, 62, 64], "default_idle_command": [61, 62], "idl": [61, 62], "create_visu": [61, 64], "server": [61, 64, 65, 66], "viser": [61, 64, 65, 66, 68, 70], "viserserv": [61, 64, 65, 66], "context": [61, 64, 65], "viser_app": [61, 64], "iocontext": [61, 64, 65, 68], "text_handl": [61, 64], "sim_step": [61, 62, 64], "thread": [61, 62, 64, 65, 66], "num_model": [61, 62, 64], "behavior": [61, 64], "default_spot_rollout_cutoff_tim": 62, "2500": 62, "spot_fallen_threshold": 62, "35": 62, "w_goal": 62, "60": 62, "w_proxim": 62, "w_vel": 62, "model_filepath": [62, 73], "instanti": 62, "effect": 62, "physics_substep": 62, "mujoco_extens": 62, "rl": 62, "alloc": 62, "spotpositioncontrolconfig": 63, "w_stand": 63, "w_forward": 63, "w_leg": 63, "w_arm": 63, "spotpositioncontrol": 63, "position_rew": 63, "orientation_rew": 63, "leg_rew": 63, "arm_rew": 63, "slightli": 63, "dataclass": [64, 66], "modelt": 64, "mpc": 64, "lower_lim": 64, "upper_lim": 64, "jacta_manipulation_path": 65, "simulationprocess": 65, "simulationiocontext": [65, 68], "multiprocess": [65, 66, 68], "simulation_loop": 65, "write_st": 65, "sim": 65, "controlprocess": 65, "viserprofil": [65, 70], "fix": 65, "flow": 65, "controllerprocess": 65, "encount": 65, "queue": 65, "gui": [65, 67], "clean": 65, "control_loop": 65, "outer": 65, "frequenc": 65, "set_profiler_record": 65, "record": [65, 70, 73], "turn": 65, "off": 65, "inner": 65, "write_control": 65, "write_trac": 65, "viserapp": 65, "init_control": 65, "predictive_sampl": 65, "init_task": 65, "benchmark_dir": 65, "flip_profile_button_label": 65, "flip": 65, "button": 65, "label": 65, "disabl": 65, "setup_task": 65, "spawn": 65, "setup_visu": [65, 72], "stack": 65, "setup_context": 65, "overwritten": 65, "deploy": 65, "setup_phys": 65, "setup_control": 65, "control_config": 65, "task_config": 65, "control_cycle_callback": 65, "_": 65, "guievent": 65, "logic": 65, "via": [65, 66], "simulation_cycle_callback": 65, "simulation_reset_callback": 65, "control_selection_callback": 65, "event": [65, 66], "doe": 65, "vi": 65, "task_selection_callback": 65, "enable_profiling_callback": 65, "config_download_callback": 65, "download": 65, "default_slider_step_float": 66, "default_slider_step_int": 66, "goal_radiu": 66, "slider": 66, "parameter_nam": 66, "min": 66, "metadata": 66, "annot": 66, "match": 66, "other": 66, "variabl": 66, "constant": 66, "create_gui_el": 66, "config_dict": 66, "dictproxi": 66, "config_updated_ev": 66, "synchron": 66, "config_lock": 66, "lock": 66, "guiinputhandl": 66, "recurs": 66, "want": 66, "share": 66, "flag": 66, "prevent": 66, "guihandl": 66, "destruct": 66, "app": [67, 68], "json_seri": 67, "syncmanag": 68, "o": 68, "hardwareiocontext": 68, "configencod": 69, "skipkei": 69, "ensure_ascii": 69, "check_circular": 69, "allow_nan": 69, "sort_kei": 69, "indent": 69, "json": 69, "jsonencod": 69, "custom": 69, "encod": 69, "obj": [69, 72], "decode_config": 69, "decod": 69, "viserprofilerconfig": 70, "track": 70, "tracked_field": 70, "logfil": 70, "speed": 70, "benchmark_funct": 70, "input_funct": 70, "benchmark": 70, "benchmark_wrapp": 70, "meshcat_visu": 71, "mujoco_visu": 71, "quaternion_oper": 71, "rgb_int_to_hex": 72, "hexadecim": 72, "rgb_float_to_hex": 72, "rgba_overwrit": 72, "model_rgba": 72, "user_rgba": 72, "meshphysicalmateri": 72, "16777215": 72, "reflect": 72, "side": 72, "opac": [72, 73], "linewidth": 72, "wirefram": 72, "wireframelinewidth": 72, "vertexcolor": 72, "geometri": 72, "genericmateri": 72, "materi": 72, "high": 72, "meshtoonmateri": 72, "poster": 72, "setpropertycapit": 72, "capit": 72, "letter": 72, "bypass": 72, "bug": 72, "__slots__": 72, "set_property_capit": 72, "close_window": 72, "plane": 72, "height": 72, "widthseg": 72, "heightseg": 72, "releas": 72, "pypi": 72, "object_data": 72, "set_color": 72, "axes_vis": 72, "grid_vis": 72, "zoom": 72, "camera_po": 72, "top_color": 72, "bottom_color": 72, "negative_shadow": 72, "positive_shadow": 72, "camera": 72, "background": 72, "shadow": 72, "add_object": 72, "add_ground": 72, "ground": 72, "add_plan": 72, "quat": [72, 73, 74], "add_spher": 72, "sphere": 72, "add_cylind": 72, "align": 72, "z": [72, 74], "add_box": 72, "add_capsul": 72, "capsul": 72, "add_ellipsoid": 72, "ellipsoid": 72, "confidence_interval_mod": 72, "orthogon": [72, 74], "eigenvector": 72, "sqrt_d": 72, "eigenvalu": 72, "diag": 72, "With": 72, "add_mesh_by_nam": 72, "add_mesh": 72, "triangular": 72, "set_object": 72, "default_color": 73, "typealia": 73, "mujocorender": 73, "time_step": 73, "collision_geometry_opac": 73, "mujocomeshcatrender": 73, "anim": 73, "state_trajectori": 73, "show_goal": 73, "OR": 73, "framer": 73, "trajectory_nam": 73, "force_reload": 73, "trajectorynam": 73, "alreadi": 73, "set_model": 73, "joint_posit": 73, "delet": 73, "initialize_mark": 73, "marker_info": 73, "marker": 73, "update_mark": 73, "marker_pos": 73, "add_mark": 73, "02": 73, "set_mark": 73, "animate_mark": 73, "frame_index": 73, "init_point": 73, "n_point": 73, "update_point": 73, "initialize_candidate_trajectori": 73, "n_candid": 73, "n_eval": 73, "candid": 73, "update_candidate_trajectori": 73, "init_ee_posit": 73, "update_ee_posit": 73, "show_trajectori": 73, "goal_nam": 73, "show": 73, "extract_joint_posit": 73, "show_box_go": 73, "alongsid": 73, "num_fram": 73, "wait_for_input": 73, "messag": 73, "press": 73, "enter": 73, "wait": 73, "get_html": 73, "represent": 73, "meshcat_record": 73, "quaternion_invers": 74, "w": 74, "quaternion_to_transformation_matrix": 74, "pose_to_transformation_matrix": 74, "skew_symmetr": 74, "r": 74, "skew": 74, "symmetr": 74, "nx3": 74, "nx3x3": 74, "array_lik": 74, "qo": 74, "left_act": 74, "left": 74, "oper": 74, "q_2": 74, "q_1": 74, "nx4": 74, "nx4x4": 74, "q1": 74, "q2": 74, "dot": 74, "right_act": 74, "right": 74, "action_invers": 74, "effici": 74, "vector_project": 74, "imaginari": 74, "support": 74, "project_act": 74, "onto": 74, "rotation_matrix": 74, "quaternion_to_quaternion_map_jacobian": 74, "argument_quaternion": 74, "map_jacobian": 74, "result_quaternion": 74, "jacobian": 74, "tangent": 74, "canon": 74, "df": 74, "dq": 74}, "objects": {"": [[1, 0, 0, "-", "benchmarking"], [3, 0, 0, "-", "cmaes"], [4, 0, 0, "-", "constants"], [6, 0, 0, "-", "controllers"], [8, 0, 0, "-", "cross_entropy_method"], [10, 0, 0, "-", "dynamics"], [16, 0, 0, "-", "environments"], [20, 0, 0, "-", "experts"], [25, 0, 0, "-", "learning"], [30, 0, 0, "-", "mppi"], [31, 0, 0, "-", "particle_filter"], [32, 0, 0, "-", "path_resolvers"], [40, 0, 0, "-", "planner"], [47, 0, 0, "-", "predictive_sampling"], [48, 0, 0, "-", "scenes"], [52, 0, 0, "-", "spot_box"], [53, 0, 0, "-", "spot_hand_navigation"], [54, 0, 0, "-", "spot_navigation"], [55, 0, 0, "-", "spot_tire"], [60, 0, 0, "-", "tasks"], [67, 0, 0, "-", "viser_app"], [71, 0, 0, "-", "visuals"]], "benchmarking": [[0, 0, 0, "-", "benchmarking"], [2, 0, 0, "-", "profiling"]], "benchmarking.benchmarking": [[0, 1, 1, "", "Benchmark"]], "benchmarking.benchmarking.Benchmark": [[0, 2, 1, "", "print_results"], [0, 2, 1, "", "visualize_results"]], "benchmarking.profiling": [[2, 3, 1, "", "run_example"]], "cmaes": [[3, 1, 1, "", "CMAES"], [3, 1, 1, "", "CMAESConfig"]], "cmaes.CMAES": [[3, 2, 1, "", "action"], [3, 2, 1, "", "update_action"]], "cmaes.CMAESConfig": [[3, 4, 1, "", "max_iter"]], "constants": [[4, 5, 1, "", "ARM_JOINT_NAMES"], [4, 5, 1, "", "ARM_LINK_NAMES"], [4, 5, 1, "", "ARM_STOWED_POS"], [4, 5, 1, "", "ARM_UNSTOWED_POS"], [4, 5, 1, "", "LEGS_SITTING_POS"], [4, 5, 1, "", "LEGS_STANDING_POS"], [4, 5, 1, "", "LEG_JOINT_NAMES"], [4, 5, 1, "", "LEG_LINK_NAMES"], [4, 5, 1, "", "SITTING_STOWED_POS"], [4, 5, 1, "", "SITTING_UNSTOWED_POS"], [4, 5, 1, "", "SPOT_ANGS_VEL_SLICE"], [4, 5, 1, "", "SPOT_ARMS_SLICE"], [4, 5, 1, "", "SPOT_ARMS_VEL_SLICE"], [4, 5, 1, "", "SPOT_BODY_SLICE"], [4, 5, 1, "", "SPOT_BODY_VEL_SLICE"], [4, 5, 1, "", "SPOT_LEGS_SLICE"], [4, 5, 1, "", "SPOT_LEGS_VEL_SLICE"], [4, 5, 1, "", "SPOT_QUAT_SLICE"], [4, 1, 1, "", "SPOT_STATE_INDS"], [4, 5, 1, "", "STANDING_HEIGHT"], [4, 5, 1, "", "STANDING_STOWED_POS"], [4, 5, 1, "", "STANDING_UNSTOWED_POS"]], "constants.SPOT_STATE_INDS": [[4, 4, 1, "", "angs_vel_slice"], [4, 4, 1, "", "arms_slice"], [4, 4, 1, "", "arms_vel_slice"], [4, 4, 1, "", "body_vel_slice"], [4, 4, 1, "", "legs_slice"], [4, 4, 1, "", "legs_vel_slice"], [4, 4, 1, "", "quat_slice"]], "controllers": [[5, 0, 0, "-", "controller"], [6, 3, 1, "", "get_registered_controllers"], [6, 3, 1, "", "register_controller"], [7, 0, 0, "-", "sampling_base"]], "controllers.controller": [[5, 1, 1, "", "Controller"], [5, 1, 1, "", "ControllerConfig"]], "controllers.controller.Controller": [[5, 2, 1, "", "action"], [5, 6, 1, "", "controls"], [5, 2, 1, "", "make_models"], [5, 2, 1, "", "reset"], [5, 6, 1, "", "rollout_times"], [5, 2, 1, "", "set_default_controls"], [5, 2, 1, "", "update_action"]], "controllers.sampling_base": [[7, 5, 1, "", "MAX_NUM_TRACES"], [7, 1, 1, "", "SamplingBase"], [7, 1, 1, "", "SamplingBaseConfig"], [7, 3, 1, "", "make_spline"]], "controllers.sampling_base.SamplingBase": [[7, 2, 1, "", "action"], [7, 6, 1, "", "controls"], [7, 2, 1, "", "make_models"], [7, 2, 1, "", "reset"], [7, 6, 1, "", "rollout_times"], [7, 2, 1, "", "set_default_controls"], [7, 6, 1, "", "spline"], [7, 6, 1, "", "spline_timesteps"], [7, 2, 1, "", "update_action"], [7, 2, 1, "", "update_spline"], [7, 2, 1, "", "update_traces"]], "controllers.sampling_base.SamplingBaseConfig": [[7, 4, 1, "", "control_freq"], [7, 4, 1, "", "num_nodes"], [7, 4, 1, "", "num_rollouts"], [7, 4, 1, "", "spline_order"], [7, 4, 1, "", "use_noise_ramp"]], "cross_entropy_method": [[8, 1, 1, "", "CrossEntropyConfig"], [8, 1, 1, "", "CrossEntropyMethod"]], "cross_entropy_method.CrossEntropyConfig": [[8, 4, 1, "", "horizon"], [8, 4, 1, "", "noise_ramp"], [8, 4, 1, "", "num_elites"], [8, 4, 1, "", "num_rollouts"], [8, 4, 1, "", "sigma_max"]], "cross_entropy_method.CrossEntropyMethod": [[8, 2, 1, "", "action"], [8, 2, 1, "", "update_action"]], "dynamics": [[9, 0, 0, "-", "action_trajectory"], [11, 0, 0, "-", "locomotion_plant"], [12, 0, 0, "-", "mujoco_dynamics"], [13, 0, 0, "-", "mujoco_utils"], [14, 0, 0, "-", "state_helpers"]], "dynamics.action_trajectory": [[9, 3, 1, "", "create_action_trajectories"], [9, 3, 1, "", "create_action_trajectory"]], "dynamics.locomotion_plant": [[11, 1, 1, "", "LocomotionPlant"], [11, 3, 1, "", "isaac_to_mujoco"], [11, 5, 1, "", "isaac_to_mujoco_ixs"], [11, 3, 1, "", "mujoco_to_isaac"], [11, 5, 1, "", "mujoco_to_isaac_ixs"]], "dynamics.locomotion_plant.LocomotionPlant": [[11, 2, 1, "", "dynamics"], [11, 2, 1, "", "get_sensor"], [11, 2, 1, "", "load_policy"], [11, 2, 1, "", "process_observations"], [11, 2, 1, "", "process_output"], [11, 2, 1, "", "run_policy"]], "dynamics.mujoco_dynamics": [[12, 1, 1, "", "MujocoPlant"], [12, 3, 1, "", "decompose_state_dimensions"], [12, 3, 1, "", "get_joint_dimensions"], [12, 3, 1, "", "scale_distances"]], "dynamics.mujoco_dynamics.MujocoPlant": [[12, 2, 1, "", "dynamics"], [12, 2, 1, "", "get_action"], [12, 2, 1, "", "get_collision_free"], [12, 2, 1, "", "get_gradients"], [12, 2, 1, "", "get_mass"], [12, 2, 1, "", "get_quat_indices"], [12, 2, 1, "", "get_sensor"], [12, 2, 1, "", "get_state"], [12, 2, 1, "", "initialize"], [12, 2, 1, "", "normalize_state"], [12, 2, 1, "", "scaled_distances_to"], [12, 2, 1, "", "set_action"], [12, 2, 1, "", "set_state"], [12, 2, 1, "", "state_addition"], [12, 2, 1, "", "state_difference"], [12, 2, 1, "", "update_sensor"]], "dynamics.mujoco_utils": [[13, 3, 1, "", "get_body_name"], [13, 3, 1, "", "get_geom_name"], [13, 3, 1, "", "get_geometry_rgba"], [13, 3, 1, "", "get_mesh_data"]], "dynamics.state_helpers": [[14, 1, 1, "", "CommandArray"], [14, 1, 1, "", "SensorArray"], [14, 1, 1, "", "StateArray"], [14, 3, 1, "", "slice_union"]], "dynamics.state_helpers.CommandArray": [[14, 4, 1, "", "arm"], [14, 2, 1, "", "as_dict"], [14, 4, 1, "", "base_height"], [14, 4, 1, "", "base_pitch"], [14, 4, 1, "", "base_roll"], [14, 2, 1, "", "create"], [14, 4, 1, "", "fl_leg"], [14, 4, 1, "", "fr_leg"], [14, 4, 1, "", "hl_leg"], [14, 4, 1, "", "hr_leg"], [14, 4, 1, "", "lateral_vel"], [14, 4, 1, "", "legs"], [14, 4, 1, "", "non_velocities"], [14, 2, 1, "", "set_defaults"], [14, 4, 1, "", "size"], [14, 2, 1, "", "update"], [14, 4, 1, "", "velocities"], [14, 4, 1, "", "yaw_vel"]], "dynamics.state_helpers.SensorArray": [[14, 4, 1, "", "fngr_object"], [14, 4, 1, "", "object_y_axis"], [14, 4, 1, "", "trace_body"], [14, 4, 1, "", "trace_gripper"]], "dynamics.state_helpers.StateArray": [[14, 4, 1, "", "arm"], [14, 4, 1, "", "arm_vel"], [14, 4, 1, "", "base_ang_vel"], [14, 4, 1, "", "base_lin_vel"], [14, 4, 1, "", "base_quat"], [14, 4, 1, "", "fl_leg"], [14, 4, 1, "", "fl_leg_vel"], [14, 4, 1, "", "fr_leg"], [14, 4, 1, "", "fr_leg_vel"], [14, 4, 1, "", "hl_leg"], [14, 4, 1, "", "hl_leg_vel"], [14, 4, 1, "", "hr_leg"], [14, 4, 1, "", "hr_leg_vel"], [14, 4, 1, "", "legs"], [14, 4, 1, "", "legs_vel"], [14, 4, 1, "", "object_ang_vel"], [14, 4, 1, "", "object_lin_vel"], [14, 4, 1, "", "object_pos"], [14, 4, 1, "", "object_quat"], [14, 4, 1, "", "size"]], "environments": [[15, 0, 0, "-", "base"], [17, 0, 0, "-", "tire_state_cache_generator"]], "environments.base": [[15, 1, 1, "", "DexterityEnv"]], "environments.base.DexterityEnv": [[15, 2, 1, "", "__post_init__"], [15, 6, 1, "", "action_space"], [15, 2, 1, "", "check_failure"], [15, 2, 1, "", "check_success"], [15, 2, 1, "", "close"], [15, 2, 1, "", "get_metrics"], [15, 6, 1, "", "metrics_keys"], [15, 4, 1, "", "params"], [15, 2, 1, "", "post_physics_step"], [15, 2, 1, "", "preserve_reset_obs"], [15, 2, 1, "", "process_resets"], [15, 2, 1, "", "reset"], [15, 2, 1, "", "reset_ixs"], [15, 2, 1, "", "reset_states"], [15, 2, 1, "", "scale_actions"], [15, 2, 1, "", "set_current_states"], [15, 2, 1, "", "set_goal_states"], [15, 2, 1, "", "set_previous_end_actions"], [15, 2, 1, "", "set_start_states"], [15, 2, 1, "", "setup_action_processor"], [15, 2, 1, "", "setup_buffers"], [15, 2, 1, "", "setup_plant"], [15, 2, 1, "", "step"], [15, 2, 1, "", "step_sim"], [15, 2, 1, "", "task_rewards"], [15, 2, 1, "", "uniform_random_action"], [15, 2, 1, "", "update_info"], [15, 2, 1, "", "update_joint_targets"], [15, 2, 1, "", "update_obs"], [15, 2, 1, "", "update_rewards"], [15, 2, 1, "", "update_terminations"]], "environments.tire_state_cache_generator": [[17, 1, 1, "", "SpotArmIK"], [17, 1, 1, "", "TireGeneratorConfig"], [17, 1, 1, "", "TireStateCacheGenerator"]], "environments.tire_state_cache_generator.SpotArmIK": [[17, 2, 1, "", "__post_init__"], [17, 4, 1, "", "actuated_pos"], [17, 4, 1, "", "damping"], [17, 4, 1, "", "enable_orientation_control"], [17, 4, 1, "", "integration_dt"], [17, 4, 1, "", "max_iterations"], [17, 4, 1, "", "max_no_progress_steps"], [17, 4, 1, "", "orientation_tolerance"], [17, 4, 1, "", "params"], [17, 4, 1, "", "position_tolerance"], [17, 4, 1, "", "progress_threshold"], [17, 2, 1, "", "solve"]], "environments.tire_state_cache_generator.TireGeneratorConfig": [[17, 4, 1, "", "angular_velocity_range"], [17, 4, 1, "", "cache_size"], [17, 4, 1, "", "distance_range"], [17, 4, 1, "", "enable_rendering"], [17, 4, 1, "", "linear_velocity_range"], [17, 4, 1, "", "object_z"], [17, 4, 1, "", "radius_range"], [17, 4, 1, "", "randomize_velocity"]], "environments.tire_state_cache_generator.TireStateCacheGenerator": [[17, 2, 1, "", "__post_init__"], [17, 4, 1, "", "config"], [17, 6, 1, "", "default_base_pose"], [17, 6, 1, "", "default_velocities"], [17, 2, 1, "", "generate_cache"], [17, 2, 1, "", "set_floating_spot_cache"], [17, 4, 1, "", "task_name"]], "experts": [[18, 0, 0, "-", "expert"], [19, 0, 0, "-", "expert_sampler"], [21, 0, 0, "-", "network"], [22, 0, 0, "-", "primitive"], [23, 0, 0, "-", "primitives"]], "experts.expert": [[18, 1, 1, "", "Expert"]], "experts.expert_sampler": [[19, 1, 1, "", "ExpertSampler"]], "experts.network": [[21, 1, 1, "", "NetworkSampler"]], "experts.primitive": [[22, 1, 1, "", "PrimitiveSampler"]], "experts.primitive.PrimitiveSampler": [[22, 2, 1, "", "compute_low_level_actions"], [22, 2, 1, "", "reset"]], "experts.primitives": [[24, 0, 0, "-", "spot_standing_box"]], "experts.primitives.spot_standing_box": [[24, 3, 1, "", "compute_grasp_actions"], [24, 3, 1, "", "compute_grasp_pose_for_handle_top"], [24, 3, 1, "", "spot_ik_mujoco"]], "learning": [[26, 0, 0, "-", "learner"], [27, 0, 0, "-", "networks"], [28, 0, 0, "-", "normalizer"], [29, 0, 0, "-", "replay_buffer"]], "learning.learner": [[26, 1, 1, "", "Learner"]], "learning.learner.Learner": [[26, 2, 1, "", "__post_init__"], [26, 2, 1, "", "actor_actions"], [26, 2, 1, "", "eval_agent"], [26, 4, 1, "", "graph"], [26, 2, 1, "", "graph_rollout"], [26, 4, 1, "", "load_cloud"], [26, 4, 1, "", "load_local"], [26, 2, 1, "", "load_models"], [26, 4, 1, "", "params"], [26, 2, 1, "", "policy_rollout"], [26, 2, 1, "", "preprocess_sample"], [26, 2, 1, "", "relative_distances_to"], [26, 4, 1, "", "replay_buffer"], [26, 2, 1, "", "reset"], [26, 2, 1, "", "reward_function"], [26, 4, 1, "", "save_cloud"], [26, 4, 1, "", "save_local"], [26, 2, 1, "", "save_models"], [26, 2, 1, "", "set_demonstration_injection"], [26, 2, 1, "", "train"], [26, 2, 1, "", "train_actor_critic"], [26, 2, 1, "", "update_norm"], [26, 4, 1, "", "verbose"]], "learning.networks": [[27, 1, 1, "", "Actor"], [27, 1, 1, "", "Critic"], [27, 1, 1, "", "CriticNetwork"], [27, 1, 1, "", "DDP"], [27, 3, 1, "", "soft_update"]], "learning.networks.Actor": [[27, 2, 1, "", "__call__"], [27, 2, 1, "", "backward_step"], [27, 2, 1, "", "eval"], [27, 2, 1, "", "load"], [27, 2, 1, "", "save"], [27, 2, 1, "", "target"], [27, 2, 1, "", "train"], [27, 2, 1, "", "update_target"]], "learning.networks.Critic": [[27, 2, 1, "", "backward_step"], [27, 2, 1, "", "load"], [27, 2, 1, "", "save"], [27, 2, 1, "", "target"], [27, 2, 1, "", "update_target"]], "learning.normalizer": [[28, 1, 1, "", "Normalizer"]], "learning.normalizer.Normalizer": [[28, 2, 1, "", "load"], [28, 2, 1, "", "normalize"], [28, 2, 1, "", "normalize_obs"], [28, 2, 1, "", "save"], [28, 2, 1, "", "update"]], "learning.replay_buffer": [[29, 1, 1, "", "ReplayBuffer"], [29, 1, 1, "", "TrajectoryReplayBuffer"]], "learning.replay_buffer.ReplayBuffer": [[29, 2, 1, "", "__getitem__"], [29, 2, 1, "", "__post_init__"], [29, 2, 1, "", "extend"], [29, 2, 1, "", "reset"], [29, 2, 1, "", "sample"], [29, 4, 1, "", "sampler_class"], [29, 2, 1, "", "setup_buffer"], [29, 2, 1, "", "setup_sampler"], [29, 2, 1, "", "setup_storage"], [29, 4, 1, "", "storage_class"]], "learning.replay_buffer.TrajectoryReplayBuffer": [[29, 2, 1, "", "sample"], [29, 2, 1, "", "setup_buffer"]], "mppi": [[30, 1, 1, "", "MPPI"], [30, 1, 1, "", "MPPIConfig"]], "mppi.MPPI": [[30, 2, 1, "", "action"], [30, 2, 1, "", "update_action"]], "mppi.MPPIConfig": [[30, 4, 1, "", "temperature"]], "particle_filter": [[31, 1, 1, "", "ParticleFilter"], [31, 1, 1, "", "ParticleFilterConfig"]], "particle_filter.ParticleFilter": [[31, 2, 1, "", "action"], [31, 2, 1, "", "update_action"]], "particle_filter.ParticleFilterConfig": [[31, 4, 1, "", "temperature"]], "path_resolvers": [[32, 3, 1, "", "get_package_path"]], "planner": [[33, 0, 0, "-", "action_processor"], [34, 0, 0, "-", "action_sampler"], [35, 0, 0, "-", "clipping_method"], [36, 0, 0, "-", "data_collection"], [37, 0, 0, "-", "graph"], [38, 0, 0, "-", "graph_visuals"], [39, 0, 0, "-", "graph_worker"], [41, 0, 0, "-", "linear_algebra"], [42, 0, 0, "-", "logger"], [43, 0, 0, "-", "parameter_container"], [44, 0, 0, "-", "planner"], [45, 0, 0, "-", "planner_helpers"], [46, 0, 0, "-", "types"]], "planner.action_processor": [[33, 1, 1, "", "ActionProcessor"], [33, 1, 1, "", "SpotFloatingActionProcessor"], [33, 1, 1, "", "SpotWholebodyActionProcessor"]], "planner.action_processor.ActionProcessor": [[33, 2, 1, "", "__call__"], [33, 4, 1, "", "actuated_pos"], [33, 2, 1, "", "get_action_trajectories"], [33, 2, 1, "", "get_actuated_states"], [33, 2, 1, "", "get_end_actions"], [33, 2, 1, "", "get_start_actions"]], "planner.action_processor.SpotFloatingActionProcessor": [[33, 4, 1, "", "arm_action_ixs"], [33, 2, 1, "", "base_action_to_egocentric"], [33, 2, 1, "", "clip_base_actions"], [33, 2, 1, "", "get_end_actions"]], "planner.action_processor.SpotWholebodyActionProcessor": [[33, 4, 1, "", "arm_action_ixs"], [33, 4, 1, "", "arm_state_ixs"], [33, 2, 1, "", "get_action_trajectories"], [33, 2, 1, "", "get_actuated_states"], [33, 2, 1, "", "get_start_actions"]], "planner.action_sampler": [[34, 1, 1, "", "ActionSampler"]], "planner.action_sampler.ActionSampler": [[34, 2, 1, "", "__call__"], [34, 2, 1, "", "continuation_directions"], [34, 2, 1, "", "directions_actions"], [34, 2, 1, "", "goal_directions"], [34, 2, 1, "", "initialize"], [34, 2, 1, "", "proximity_directions"], [34, 2, 1, "", "random_directions"]], "planner.clipping_method": [[35, 3, 1, "", "box_scaling"], [35, 3, 1, "", "clip_actions"]], "planner.data_collection": [[36, 3, 1, "", "find_latest_model_path"], [36, 3, 1, "", "load_model"], [36, 3, 1, "", "load_tensor"], [36, 3, 1, "", "save_model"], [36, 3, 1, "", "save_tensor"]], "planner.graph": [[37, 1, 1, "", "Graph"], [37, 3, 1, "", "sample_feasible_states"], [37, 3, 1, "", "sample_random_goal_states"], [37, 3, 1, "", "sample_random_start_states"], [37, 3, 1, "", "sample_random_states"], [37, 3, 1, "", "sample_random_sub_goal_states"], [37, 3, 1, "", "sample_related_sub_goal_states"]], "planner.graph.Graph": [[37, 2, 1, "", "activate_all_nodes"], [37, 2, 1, "", "add_child_ids_to_node"], [37, 2, 1, "", "add_nodes"], [37, 2, 1, "", "add_total_rewards"], [37, 2, 1, "", "calculate_distance_rewards"], [37, 2, 1, "", "calculate_proximity_rewards"], [37, 2, 1, "", "calculate_reachability_rewards"], [37, 2, 1, "", "change_sub_goal_states"], [37, 2, 1, "", "check_for_early_termination"], [37, 2, 1, "", "deactivate_nodes"], [37, 2, 1, "", "destroy"], [37, 2, 1, "", "get_active_main_ids"], [37, 2, 1, "", "get_best_id"], [37, 2, 1, "", "get_root_ids"], [37, 2, 1, "", "is_better_than"], [37, 2, 1, "", "is_worse_than"], [37, 2, 1, "", "load"], [37, 2, 1, "", "number_of_nodes"], [37, 2, 1, "", "reachability_cache"], [37, 2, 1, "", "reset"], [37, 2, 1, "", "reset_sub_goal_states"], [37, 2, 1, "", "save"], [37, 2, 1, "", "set_goal_state"], [37, 2, 1, "", "set_start_states"], [37, 2, 1, "", "shortest_path_to"], [37, 2, 1, "", "sorted_progress_ids"]], "planner.graph_visuals": [[38, 3, 1, "", "color_gradient"], [38, 3, 1, "", "display_3d_graph"], [38, 3, 1, "", "display_colormap_point_cloud"], [38, 3, 1, "", "display_point_cloud"], [38, 3, 1, "", "display_segments"], [38, 3, 1, "", "display_segments_by_category"], [38, 3, 1, "", "rgba_palette"]], "planner.graph_worker": [[39, 1, 1, "", "CommonGoalWorkerInterface"], [39, 1, 1, "", "ExplorerWorker"], [39, 1, 1, "", "GraphWorker"], [39, 1, 1, "", "ParallelGoalsWorker"], [39, 1, 1, "", "RelatedGoalWorker"], [39, 1, 1, "", "RolloutWorker"], [39, 1, 1, "", "SingleGoalWorker"], [39, 3, 1, "", "inspect_action_type"], [39, 3, 1, "", "pareto_distribution"]], "planner.graph_worker.GraphWorker": [[39, 2, 1, "", "callback_and_progress_check"], [39, 2, 1, "", "get_progress_info"], [39, 2, 1, "", "node_extension"], [39, 2, 1, "", "node_pruning"], [39, 2, 1, "", "node_replacement"], [39, 2, 1, "", "node_selection"], [39, 2, 1, "", "percentage_range"]], "planner.graph_worker.ParallelGoalsWorker": [[39, 2, 1, "", "reset_finished_workers"], [39, 2, 1, "", "update_extension_lengths"], [39, 2, 1, "", "update_pareto_parameters"], [39, 2, 1, "", "work"]], "planner.linear_algebra": [[41, 3, 1, "", "einsum_ij_ij_i"], [41, 3, 1, "", "einsum_ij_kj_ki"], [41, 3, 1, "", "einsum_ijk_ik_ij"], [41, 3, 1, "", "einsum_ijk_ikl_ijl"], [41, 3, 1, "", "einsum_ijk_ilk_ijl"], [41, 3, 1, "", "einsum_ikj_ik_ij"], [41, 3, 1, "", "einsum_ikj_ikl_ijl"], [41, 3, 1, "", "einsum_jk_ikl_ijl"], [41, 3, 1, "", "gram_schmidt"], [41, 3, 1, "", "max_scaling"], [41, 3, 1, "", "normalize"], [41, 3, 1, "", "normalize_multiple"], [41, 3, 1, "", "project_v_on_u"], [41, 3, 1, "", "project_vectors_on_eigenspace"], [41, 3, 1, "", "transformation_matrix"], [41, 3, 1, "", "truncpareto_cdf"]], "planner.logger": [[42, 1, 1, "", "Logger"]], "planner.logger.Logger": [[42, 2, 1, "", "create_distance_log"], [42, 2, 1, "", "create_reward_log"], [42, 2, 1, "", "get_log_name"], [42, 2, 1, "", "log_action_sampler"], [42, 2, 1, "", "log_node_extension"], [42, 2, 1, "", "log_node_pruning"], [42, 2, 1, "", "log_node_selection"], [42, 2, 1, "", "log_params"], [42, 2, 1, "", "log_search"], [42, 2, 1, "", "simple_path_statistics"], [42, 2, 1, "", "simple_progress_statistics"]], "planner.parameter_container": [[43, 1, 1, "", "ParameterContainer"], [43, 3, 1, "", "parse_hardware_parameters"]], "planner.parameter_container.ParameterContainer": [[43, 2, 1, "", "__contains__"], [43, 2, 1, "", "__delattr__"], [43, 2, 1, "", "__getattr__"], [43, 2, 1, "", "__setattr__"], [43, 2, 1, "", "__str__"], [43, 2, 1, "", "autofill"], [43, 6, 1, "", "cache_folder"], [43, 2, 1, "", "concat_list_of_arrays"], [43, 6, 1, "", "data_folder"], [43, 6, 1, "", "device"], [43, 6, 1, "", "examples_directory"], [43, 6, 1, "", "graph_cache_folder"], [43, 2, 1, "", "list_of_yaml_arrays_to_tensor"], [43, 2, 1, "", "load_base"], [43, 2, 1, "", "load_eigenspaces"], [43, 6, 1, "", "policy_filepath"], [43, 2, 1, "", "process_scaling"], [43, 2, 1, "", "reset_seed"], [43, 2, 1, "", "reward_distance_scaling_sqrt"], [43, 2, 1, "", "run_autofill_rule"], [43, 2, 1, "", "set_seed"], [43, 6, 1, "", "state_cache_folder"], [43, 6, 1, "", "trajectory_cache_folder"], [43, 2, 1, "", "update"], [43, 6, 1, "", "xml_folder"]], "planner.planner": [[44, 1, 1, "", "Planner"]], "planner.planner.Planner": [[44, 2, 1, "", "path_data"], [44, 2, 1, "", "path_trajectory"], [44, 2, 1, "", "plot_search_results"], [44, 2, 1, "", "search"], [44, 2, 1, "", "shortest_path_data"], [44, 2, 1, "", "shortest_path_trajectory"]], "planner.planner_helpers": [[45, 3, 1, "", "is_object_out_of_reach"], [45, 3, 1, "", "is_object_tilted"], [45, 3, 1, "", "torso_too_close_to_object"]], "planner.types": [[46, 5, 1, "", "ACTION_TYPE_DIRECTIONAL_MAP"], [46, 1, 1, "", "ActionMode"], [46, 1, 1, "", "ActionType"], [46, 1, 1, "", "ClippingType"], [46, 1, 1, "", "ControlType"], [46, 1, 1, "", "SelectionType"], [46, 3, 1, "", "convert_dtype"], [46, 3, 1, "", "set_default_device_and_dtype"]], "planner.types.ActionMode": [[46, 4, 1, "", "ABSOLUTE_ACTION"], [46, 4, 1, "", "RELATIVE_TO_PREVIOUS_END_ACTION"], [46, 2, 1, "", "__str__"]], "planner.types.ActionType": [[46, 4, 1, "", "CONTINUATION"], [46, 4, 1, "", "EXPERT"], [46, 4, 1, "", "GOAL"], [46, 4, 1, "", "NON_EXPERT"], [46, 4, 1, "", "PROXIMITY"], [46, 4, 1, "", "RANGED"], [46, 2, 1, "", "__str__"]], "planner.types.ClippingType": [[46, 4, 1, "", "SCALE"], [46, 2, 1, "", "__str__"]], "planner.types.ControlType": [[46, 4, 1, "", "FIRST_ORDER_HOLD"], [46, 2, 1, "", "__str__"]], "planner.types.SelectionType": [[46, 4, 1, "", "LAST"], [46, 2, 1, "", "__str__"]], "predictive_sampling": [[47, 1, 1, "", "PredictiveSampling"], [47, 1, 1, "", "PredictiveSamplingConfig"]], "predictive_sampling.PredictiveSampling": [[47, 2, 1, "", "action"], [47, 2, 1, "", "update_action"]], "predictive_sampling.PredictiveSamplingConfig": [[47, 4, 1, "", "noise_ramp"]], "scenes": [[49, 0, 0, "-", "scene_composer"], [50, 0, 0, "-", "scene_generator"], [51, 0, 0, "-", "scene_registry"], [48, 5, 1, "", "spot_sensors"]], "scenes.scene_composer": [[49, 1, 1, "", "ModelElement"], [49, 1, 1, "", "Scene"], [49, 1, 1, "", "SpotRobot"], [49, 3, 1, "", "make_default_header_includes"], [49, 1, 1, "", "mjBodyWrapper"], [49, 3, 1, "", "override"]], "scenes.scene_composer.ModelElement": [[49, 2, 1, "", "__getitem__"], [49, 2, 1, "", "autoload"], [49, 2, 1, "", "from_file"], [49, 2, 1, "", "from_string"], [49, 4, 1, "", "header_includes"], [49, 2, 1, "", "load"], [49, 4, 1, "", "name"], [49, 2, 1, "", "to_xml_file"], [49, 2, 1, "", "to_xml_string"], [49, 4, 1, "", "xml_content"]], "scenes.scene_composer.Scene": [[49, 4, 1, "", "contacts"], [49, 4, 1, "", "elements"], [49, 2, 1, "", "load"], [49, 4, 1, "", "sensors"], [49, 4, 1, "", "xml_dir"]], "scenes.scene_composer.SpotRobot": [[49, 2, 1, "", "load"], [49, 4, 1, "", "name"], [49, 4, 1, "", "xml_dir"]], "scenes.scene_composer.mjBodyWrapper": [[49, 2, 1, "", "__getattr__"], [49, 2, 1, "", "__setattr__"], [49, 2, 1, "", "attach"]], "scenes.scene_registry": [[51, 5, 1, "", "ASSET_DIR"], [51, 5, 1, "", "COMPONENTS_DIR"], [51, 5, 1, "", "OUTPUT_DIR"], [51, 1, 1, "", "SceneRegistry"], [51, 5, 1, "", "XML_DIR"], [51, 5, 1, "", "scene_registry"]], "scenes.scene_registry.SceneRegistry": [[51, 2, 1, "", "__getitem__"], [51, 2, 1, "", "add"], [51, 2, 1, "", "generate"], [51, 2, 1, "", "generate_all"]], "spot_box": [[52, 5, 1, "", "RESET_OBJECT_POSE"], [52, 1, 1, "", "SpotBox"], [52, 1, 1, "", "SpotBoxConfig"], [52, 5, 1, "", "Z_AXIS"]], "spot_box.SpotBox": [[52, 6, 1, "", "actuator_ctrlrange"], [52, 2, 1, "", "reset"], [52, 2, 1, "", "reward"]], "spot_box.SpotBoxConfig": [[52, 4, 1, "", "goal_position"], [52, 4, 1, "", "orientation_threshold"], [52, 4, 1, "", "w_gripper_proximity"], [52, 4, 1, "", "w_orientation"], [52, 4, 1, "", "w_torso_proximity"]], "spot_hand_navigation": [[53, 1, 1, "", "SpotHandNavigation"], [53, 1, 1, "", "SpotHandNavigationConfig"]], "spot_hand_navigation.SpotHandNavigation": [[53, 6, 1, "", "actuator_ctrlrange"], [53, 2, 1, "", "reset"], [53, 2, 1, "", "reward"]], "spot_hand_navigation.SpotHandNavigationConfig": [[53, 4, 1, "", "goal_position"]], "spot_navigation": [[54, 1, 1, "", "SpotNavigation"], [54, 1, 1, "", "SpotNavigationConfig"]], "spot_navigation.SpotNavigation": [[54, 6, 1, "", "actuator_ctrlrange"], [54, 2, 1, "", "reset"], [54, 2, 1, "", "reward"]], "spot_navigation.SpotNavigationConfig": [[54, 4, 1, "", "goal_position"]], "spot_tire": [[55, 5, 1, "", "RESET_OBJECT_POSE"], [55, 1, 1, "", "SpotTire"], [55, 1, 1, "", "SpotTireConfig"], [55, 5, 1, "", "TIRE_GOAL"], [55, 5, 1, "", "TIRE_HEIGHT"], [55, 5, 1, "", "Z_AXIS"]], "spot_tire.SpotTire": [[55, 6, 1, "", "actuator_ctrlrange"], [55, 2, 1, "", "reset"], [55, 2, 1, "", "reward"]], "spot_tire.SpotTireConfig": [[55, 4, 1, "", "fall_penalty"], [55, 4, 1, "", "goal_position"], [55, 4, 1, "", "goal_tire_pos"], [55, 4, 1, "", "gripper_goal_altitude"], [55, 4, 1, "", "gripper_goal_offset"], [55, 4, 1, "", "tire_fallen_threshold"], [55, 4, 1, "", "torso_goal_offset"], [55, 4, 1, "", "w_gripper_proximity"], [55, 4, 1, "", "w_leg_proximity"], [55, 4, 1, "", "w_tire_angular_velocity"], [55, 4, 1, "", "w_tire_linear_velocity"], [55, 4, 1, "", "w_torso_proximity"]], "tasks": [[56, 0, 0, "-", "acrobot"], [57, 0, 0, "-", "cartpole"], [58, 0, 0, "-", "cost_functions"], [59, 0, 0, "-", "cylinder_push"], [60, 3, 1, "", "get_registered_tasks"], [61, 0, 0, "-", "mujoco_task"], [60, 3, 1, "", "register_task"], [62, 0, 0, "-", "spot_base"], [63, 0, 0, "-", "spot_position_control"], [64, 0, 0, "-", "task"]], "tasks.acrobot": [[56, 1, 1, "", "Acrobot"], [56, 1, 1, "", "AcrobotConfig"], [56, 5, 1, "", "MODEL_PATH"]], "tasks.acrobot.Acrobot": [[56, 2, 1, "", "reset"]], "tasks.acrobot.AcrobotConfig": [[56, 4, 1, "", "cutoff_time"], [56, 4, 1, "", "p_vertical"], [56, 4, 1, "", "w_control"], [56, 4, 1, "", "w_velocity"], [56, 4, 1, "", "w_vertical"]], "tasks.cartpole": [[57, 1, 1, "", "Cartpole"], [57, 1, 1, "", "CartpoleConfig"], [57, 5, 1, "", "MODEL_PATH"]], "tasks.cartpole.Cartpole": [[57, 2, 1, "", "is_terminated"], [57, 2, 1, "", "reset"]], "tasks.cartpole.CartpoleConfig": [[57, 4, 1, "", "cutoff_time"], [57, 4, 1, "", "p_centered"], [57, 4, 1, "", "p_vertical"], [57, 4, 1, "", "w_centered"], [57, 4, 1, "", "w_control"], [57, 4, 1, "", "w_velocity"], [57, 4, 1, "", "w_vertical"]], "tasks.cost_functions": [[58, 3, 1, "", "quadratic_norm"], [58, 3, 1, "", "smooth_l1_norm"]], "tasks.cylinder_push": [[59, 1, 1, "", "CylinderPush"], [59, 1, 1, "", "CylinderPushConfig"], [59, 5, 1, "", "MODEL_PATH"]], "tasks.cylinder_push.CylinderPush": [[59, 2, 1, "", "reset"]], "tasks.cylinder_push.CylinderPushConfig": [[59, 4, 1, "", "cart_goal_position"], [59, 4, 1, "", "cutoff_time"], [59, 4, 1, "", "pusher_goal_offset"], [59, 4, 1, "", "w_cart_position"], [59, 4, 1, "", "w_pusher_proximity"], [59, 4, 1, "", "w_pusher_velocity"]], "tasks.mujoco_task": [[61, 1, 1, "", "MujocoTask"]], "tasks.mujoco_task.MujocoTask": [[61, 6, 1, "", "actuator_ctrlrange"], [61, 2, 1, "", "create_visualization"], [61, 6, 1, "", "default_idle_command"], [61, 6, 1, "", "dt"], [61, 2, 1, "", "is_terminated"], [61, 2, 1, "", "make_models"], [61, 6, 1, "", "nu"], [61, 2, 1, "", "reset"], [61, 2, 1, "", "rollout"], [61, 2, 1, "", "sim_step"]], "tasks.spot_base": [[62, 5, 1, "", "ConfigT"], [62, 5, 1, "", "DEFAULT_SPOT_ROLLOUT_CUTOFF_TIME"], [62, 5, 1, "", "GOAL_POSITIONS"], [62, 1, 1, "", "SpotBase"], [62, 1, 1, "", "SpotBaseConfig"]], "tasks.spot_base.SpotBase": [[62, 6, 1, "", "default_idle_command"], [62, 2, 1, "", "make_models"], [62, 2, 1, "", "rollout"], [62, 2, 1, "", "sim_step"]], "tasks.spot_base.SpotBaseConfig": [[62, 4, 1, "", "cutoff_time"], [62, 4, 1, "", "fall_penalty"], [62, 4, 1, "", "spot_fallen_threshold"], [62, 4, 1, "", "w_goal"], [62, 4, 1, "", "w_proximity"], [62, 4, 1, "", "w_vel"]], "tasks.spot_position_control": [[63, 5, 1, "", "MODEL_PATH"], [63, 1, 1, "", "SpotPositionControl"], [63, 1, 1, "", "SpotPositionControlConfig"]], "tasks.spot_position_control.SpotPositionControl": [[63, 2, 1, "", "reset"]], "tasks.spot_position_control.SpotPositionControlConfig": [[63, 4, 1, "", "default_command"], [63, 4, 1, "", "w_arms"], [63, 4, 1, "", "w_forward"], [63, 4, 1, "", "w_legs"]], "tasks.task": [[64, 5, 1, "", "ConfigT"], [64, 5, 1, "", "ModelT"], [64, 1, 1, "", "Task"], [64, 1, 1, "", "TaskConfig"]], "tasks.task.Task": [[64, 6, 1, "", "actuator_ctrlrange"], [64, 6, 1, "", "additional_task_info"], [64, 2, 1, "", "create_visualization"], [64, 6, 1, "", "dt"], [64, 2, 1, "", "is_terminated"], [64, 2, 1, "", "make_models"], [64, 2, 1, "", "reset"], [64, 2, 1, "", "reward"], [64, 2, 1, "", "rollout"], [64, 2, 1, "", "sim_step"]], "viser_app": [[65, 0, 0, "-", "app"], [66, 0, 0, "-", "gui"], [68, 0, 0, "-", "io"], [69, 0, 0, "-", "json_serializer"], [70, 0, 0, "-", "profiler"]], "viser_app.app": [[65, 1, 1, "", "ControlProcess"], [65, 5, 1, "", "JACTA_MANIPULATION_PATH"], [65, 1, 1, "", "SimulationProcess"], [65, 1, 1, "", "ViserApp"]], "viser_app.app.ControlProcess": [[65, 2, 1, "", "control_loop"], [65, 2, 1, "", "remove"], [65, 2, 1, "", "set_profiler_recording"], [65, 2, 1, "", "terminate"], [65, 2, 1, "", "write_controls"], [65, 2, 1, "", "write_traces"]], "viser_app.app.SimulationProcess": [[65, 2, 1, "", "reset"], [65, 2, 1, "", "write_states"]], "viser_app.app.ViserApp": [[65, 2, 1, "", "config_download_callback"], [65, 2, 1, "", "control_cycle_callback"], [65, 2, 1, "", "control_selection_callback"], [65, 2, 1, "", "enable_profiling_callback"], [65, 2, 1, "", "setup_context"], [65, 2, 1, "", "setup_controller"], [65, 2, 1, "", "setup_physics"], [65, 2, 1, "", "setup_task"], [65, 2, 1, "", "setup_visualization"], [65, 2, 1, "", "simulation_cycle_callback"], [65, 2, 1, "", "simulation_reset_callback"], [65, 2, 1, "", "task_selection_callback"]], "viser_app.gui": [[66, 5, 1, "", "DEFAULT_SLIDER_STEP_FLOAT"], [66, 5, 1, "", "DEFAULT_SLIDER_STEP_INT"], [66, 5, 1, "", "GOAL_RADIUS"], [66, 3, 1, "", "create_gui_elements"], [66, 3, 1, "", "slider"]], "viser_app.io": [[68, 1, 1, "", "HardwareIOContext"], [68, 1, 1, "", "IOContext"], [68, 1, 1, "", "SimulationIOContext"]], "viser_app.json_serializer": [[69, 1, 1, "", "ConfigEncoder"], [69, 3, 1, "", "decode_config"]], "viser_app.profiler": [[70, 1, 1, "", "ViserProfiler"], [70, 1, 1, "", "ViserProfilerConfig"]], "viser_app.profiler.ViserProfiler": [[70, 2, 1, "", "benchmark_wrapper"]], "visuals": [[72, 0, 0, "-", "meshcat_visualizer"], [73, 0, 0, "-", "mujoco_visualizer"], [74, 0, 0, "-", "quaternion_operations"]], "visuals.meshcat_visualizer": [[72, 1, 1, "", "MeshPhysicalMaterial"], [72, 1, 1, "", "MeshToonMaterial"], [72, 1, 1, "", "Plane"], [72, 1, 1, "", "SetPropertyCapital"], [72, 3, 1, "", "add_box"], [72, 3, 1, "", "add_capsule"], [72, 3, 1, "", "add_cylinder"], [72, 3, 1, "", "add_ellipsoid"], [72, 3, 1, "", "add_ground"], [72, 3, 1, "", "add_mesh"], [72, 3, 1, "", "add_mesh_by_name"], [72, 3, 1, "", "add_object"], [72, 3, 1, "", "add_plane"], [72, 3, 1, "", "add_sphere"], [72, 3, 1, "", "close_window"], [72, 3, 1, "", "rgb_float_to_hex"], [72, 3, 1, "", "rgb_int_to_hex"], [72, 3, 1, "", "rgba_overwrite"], [72, 3, 1, "", "set_color"], [72, 3, 1, "", "set_object"], [72, 3, 1, "", "set_property_capital"], [72, 3, 1, "", "setup_visualizer"]], "visuals.meshcat_visualizer.SetPropertyCapital": [[72, 2, 1, "", "lower"]], "visuals.mujoco_visualizer": [[73, 5, 1, "", "DEFAULT_COLORS"], [73, 1, 1, "", "MujocoRenderer"], [73, 5, 1, "", "RGBA"], [73, 5, 1, "", "Trajectory"]], "visuals.mujoco_visualizer.MujocoRenderer": [[73, 2, 1, "", "add_marker"], [73, 2, 1, "", "animate_marker"], [73, 2, 1, "", "extract_joint_positions"], [73, 6, 1, "", "framerate"], [73, 2, 1, "", "get_html"], [73, 2, 1, "", "init_ee_position"], [73, 2, 1, "", "init_points"], [73, 2, 1, "", "initialize_candidate_trajectories"], [73, 2, 1, "", "initialize_markers"], [73, 2, 1, "", "load_model"], [73, 2, 1, "", "play"], [73, 2, 1, "", "render"], [73, 2, 1, "", "reset"], [73, 2, 1, "", "save"], [73, 2, 1, "", "set_marker"], [73, 2, 1, "", "set_model"], [73, 2, 1, "", "show"], [73, 2, 1, "", "show_box_goal"], [73, 2, 1, "", "show_goal"], [73, 2, 1, "", "show_trajectory"], [73, 2, 1, "", "update_candidate_trajectories"], [73, 2, 1, "", "update_ee_position"], [73, 2, 1, "", "update_markers"], [73, 2, 1, "", "update_points"], [73, 2, 1, "", "wait_for_input"]], "visuals.quaternion_operations": [[74, 3, 1, "", "action_inverse"], [74, 3, 1, "", "left_action"], [74, 3, 1, "", "pose_to_transformation_matrix"], [74, 3, 1, "", "project_action"], [74, 3, 1, "", "quaternion_inverse"], [74, 3, 1, "", "quaternion_to_quaternion_map_jacobian"], [74, 3, 1, "", "quaternion_to_transformation_matrix"], [74, 3, 1, "", "right_action"], [74, 3, 1, "", "rotation_matrix"], [74, 3, 1, "", "skew_symmetric"], [74, 3, 1, "", "vector_projection"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:data", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "titleterms": {"benchmark": [0, 1, 2], "modul": [0, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74], "content": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74], "submodul": [1, 6, 10, 16, 20, 23, 25, 40, 48, 60, 67, 71], "profil": [2, 70], "cmae": 3, "constant": 4, "control": [5, 6, 7], "packag": [6, 48, 60], "sampling_bas": 7, "cross_entropy_method": 8, "dynam": [9, 10, 11, 12, 13, 14], "action_trajectori": 9, "locomotion_pl": 11, "mujoco_dynam": 12, "todo": 12, "slecleach": 12, "add": 12, "support": 12, "acceler": 12, "base": [12, 15], "sensor": 12, "mujoco_util": 13, "state_help": 14, "environ": [15, 16, 17], "tire_state_cache_gener": 17, "expert": [18, 19, 20, 21, 22, 23, 24], "expert_sampl": 19, "subpackag": 20, "network": [21, 27], "primit": [22, 23, 24], "spot_standing_box": 24, "learn": [25, 26, 27, 28, 29], "learner": 26, "normal": 28, "replay_buff": 29, "mppi": 30, "particle_filt": 31, "path_resolv": 32, "planner": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "action_processor": 33, "action_sampl": 34, "clipping_method": 35, "data_collect": 36, "graph": 37, "graph_visu": 38, "graph_work": 39, "linear_algebra": 41, "logger": 42, "parameter_contain": 43, "planner_help": 45, "type": 46, "predictive_sampl": 47, "scene": [48, 49, 50, 51], "scene_compos": 49, "scene_gener": 50, "scene_registri": 51, "spot_box": 52, "spot_hand_navig": 53, "spot_navig": 54, "spot_tir": 55, "task": [56, 57, 58, 59, 60, 61, 62, 63, 64], "acrobot": 56, "cartpol": 57, "cost_funct": 58, "cylinder_push": 59, "mujoco_task": 61, "spot_bas": 62, "spot_position_control": 63, "viser_app": [65, 66, 67, 68, 69, 70], "app": 65, "gui": 66, "io": 68, "json_seri": 69, "visual": [71, 72, 73, 74], "meshcat_visu": 72, "mujoco_visu": 73, "quaternion_oper": 74, "jacta": 75, "manipul": 75}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"benchmarking.benchmarking": [[0, "module-benchmarking.benchmarking"]], "Module Contents": [[0, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [21, "module-contents"], [22, "module-contents"], [24, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [49, "module-contents"], [51, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [57, "module-contents"], [58, "module-contents"], [59, "module-contents"], [61, "module-contents"], [62, "module-contents"], [63, "module-contents"], [64, "module-contents"], [65, "module-contents"], [66, "module-contents"], [68, "module-contents"], [69, "module-contents"], [70, "module-contents"], [72, "module-contents"], [73, "module-contents"], [74, "module-contents"]], "benchmarking": [[1, "module-benchmarking"]], "Submodules": [[1, "submodules"], [6, "submodules"], [10, "submodules"], [16, "submodules"], [20, "submodules"], [23, "submodules"], [25, "submodules"], [40, "submodules"], [48, "submodules"], [60, "submodules"], [67, "submodules"], [71, "submodules"]], "benchmarking.profiling": [[2, "module-benchmarking.profiling"]], "cmaes": [[3, "module-cmaes"]], "constants": [[4, "module-constants"]], "controllers.controller": [[5, "module-controllers.controller"]], "controllers": [[6, "module-controllers"]], "Package Contents": [[6, "package-contents"], [48, "package-contents"], [60, "package-contents"]], "controllers.sampling_base": [[7, "module-controllers.sampling_base"]], "cross_entropy_method": [[8, "module-cross_entropy_method"]], "dynamics.action_trajectory": [[9, "module-dynamics.action_trajectory"]], "dynamics": [[10, "module-dynamics"]], "dynamics.locomotion_plant": [[11, "module-dynamics.locomotion_plant"]], "dynamics.mujoco_dynamics": [[12, "module-dynamics.mujoco_dynamics"]], "TODO: slecleach add support for acceleration-based sensors": [[12, "todo-slecleach-add-support-for-acceleration-based-sensors"]], "dynamics.mujoco_utils": [[13, "module-dynamics.mujoco_utils"]], "dynamics.state_helpers": [[14, "module-dynamics.state_helpers"]], "environments.base": [[15, "module-environments.base"]], "environments": [[16, "module-environments"]], "environments.tire_state_cache_generator": [[17, "module-environments.tire_state_cache_generator"]], "experts.expert": [[18, "module-experts.expert"]], "experts.expert_sampler": [[19, "module-experts.expert_sampler"]], "experts": [[20, "module-experts"]], "Subpackages": [[20, "subpackages"]], "experts.network": [[21, "module-experts.network"]], "experts.primitive": [[22, "module-experts.primitive"]], "experts.primitives": [[23, "module-experts.primitives"]], "experts.primitives.spot_standing_box": [[24, "module-experts.primitives.spot_standing_box"]], "learning": [[25, "module-learning"]], "learning.learner": [[26, "module-learning.learner"]], "learning.networks": [[27, "module-learning.networks"]], "learning.normalizer": [[28, "module-learning.normalizer"]], "learning.replay_buffer": [[29, "module-learning.replay_buffer"]], "mppi": [[30, "module-mppi"]], "particle_filter": [[31, "module-particle_filter"]], "path_resolvers": [[32, "module-path_resolvers"]], "planner.action_processor": [[33, "module-planner.action_processor"]], "planner.action_sampler": [[34, "module-planner.action_sampler"]], "planner.clipping_method": [[35, "module-planner.clipping_method"]], "planner.data_collection": [[36, "module-planner.data_collection"]], "planner.graph": [[37, "module-planner.graph"]], "planner.graph_visuals": [[38, "module-planner.graph_visuals"]], "planner.graph_worker": [[39, "module-planner.graph_worker"]], "planner": [[40, "module-planner"]], "planner.linear_algebra": [[41, "module-planner.linear_algebra"]], "planner.logger": [[42, "module-planner.logger"]], "planner.parameter_container": [[43, "module-planner.parameter_container"]], "planner.planner": [[44, "module-planner.planner"]], "planner.planner_helpers": [[45, "module-planner.planner_helpers"]], "planner.types": [[46, "module-planner.types"]], "predictive_sampling": [[47, "module-predictive_sampling"]], "scenes": [[48, "module-scenes"]], "scenes.scene_composer": [[49, "module-scenes.scene_composer"]], "scenes.scene_generator": [[50, "module-scenes.scene_generator"]], "scenes.scene_registry": [[51, "module-scenes.scene_registry"]], "spot_box": [[52, "module-spot_box"]], "spot_hand_navigation": [[53, "module-spot_hand_navigation"]], "spot_navigation": [[54, "module-spot_navigation"]], "spot_tire": [[55, "module-spot_tire"]], "tasks.acrobot": [[56, "module-tasks.acrobot"]], "tasks.cartpole": [[57, "module-tasks.cartpole"]], "tasks.cost_functions": [[58, "module-tasks.cost_functions"]], "tasks.cylinder_push": [[59, "module-tasks.cylinder_push"]], "tasks": [[60, "module-tasks"]], "tasks.mujoco_task": [[61, "module-tasks.mujoco_task"]], "tasks.spot_base": [[62, "module-tasks.spot_base"]], "tasks.spot_position_control": [[63, "module-tasks.spot_position_control"]], "tasks.task": [[64, "module-tasks.task"]], "viser_app.app": [[65, "module-viser_app.app"]], "viser_app.gui": [[66, "module-viser_app.gui"]], "viser_app": [[67, "module-viser_app"]], "viser_app.io": [[68, "module-viser_app.io"]], "viser_app.json_serializer": [[69, "module-viser_app.json_serializer"]], "viser_app.profiler": [[70, "module-viser_app.profiler"]], "visuals": [[71, "module-visuals"]], "visuals.meshcat_visualizer": [[72, "module-visuals.meshcat_visualizer"]], "visuals.mujoco_visualizer": [[73, "module-visuals.mujoco_visualizer"]], "visuals.quaternion_operations": [[74, "module-visuals.quaternion_operations"]], "jacta-manipulation": [[75, "jacta-manipulation"]]}, "indexentries": {"benchmark (class in benchmarking.benchmarking)": [[0, "benchmarking.benchmarking.Benchmark"]], "benchmarking.benchmarking": [[0, "module-benchmarking.benchmarking"]], "module": [[0, "module-benchmarking.benchmarking"], [1, "module-benchmarking"], [2, "module-benchmarking.profiling"], [3, "module-cmaes"], [4, "module-constants"], [5, "module-controllers.controller"], [6, "module-controllers"], [7, "module-controllers.sampling_base"], [8, "module-cross_entropy_method"], [9, "module-dynamics.action_trajectory"], [10, "module-dynamics"], [11, "module-dynamics.locomotion_plant"], [12, "module-dynamics.mujoco_dynamics"], [13, "module-dynamics.mujoco_utils"], [14, "module-dynamics.state_helpers"], [15, "module-environments.base"], [16, "module-environments"], [17, "module-environments.tire_state_cache_generator"], [18, "module-experts.expert"], [19, "module-experts.expert_sampler"], [20, "module-experts"], [21, "module-experts.network"], [22, "module-experts.primitive"], [23, "module-experts.primitives"], [24, "module-experts.primitives.spot_standing_box"], [25, "module-learning"], [26, "module-learning.learner"], [27, "module-learning.networks"], [28, "module-learning.normalizer"], [29, "module-learning.replay_buffer"], [30, "module-mppi"], [31, "module-particle_filter"], [32, "module-path_resolvers"], [33, "module-planner.action_processor"], [34, "module-planner.action_sampler"], [35, "module-planner.clipping_method"], [36, "module-planner.data_collection"], [37, "module-planner.graph"], [38, "module-planner.graph_visuals"], [39, "module-planner.graph_worker"], [40, "module-planner"], [41, "module-planner.linear_algebra"], [42, "module-planner.logger"], [43, "module-planner.parameter_container"], [44, "module-planner.planner"], [45, "module-planner.planner_helpers"], [46, "module-planner.types"], [47, "module-predictive_sampling"], [48, "module-scenes"], [49, "module-scenes.scene_composer"], [50, "module-scenes.scene_generator"], [51, "module-scenes.scene_registry"], [52, "module-spot_box"], [53, "module-spot_hand_navigation"], [54, "module-spot_navigation"], [55, "module-spot_tire"], [56, "module-tasks.acrobot"], [57, "module-tasks.cartpole"], [58, "module-tasks.cost_functions"], [59, "module-tasks.cylinder_push"], [60, "module-tasks"], [61, "module-tasks.mujoco_task"], [62, "module-tasks.spot_base"], [63, "module-tasks.spot_position_control"], [64, "module-tasks.task"], [65, "module-viser_app.app"], [66, "module-viser_app.gui"], [67, "module-viser_app"], [68, "module-viser_app.io"], [69, "module-viser_app.json_serializer"], [70, "module-viser_app.profiler"], [71, "module-visuals"], [72, "module-visuals.meshcat_visualizer"], [73, "module-visuals.mujoco_visualizer"], [74, "module-visuals.quaternion_operations"]], "print_results() (benchmarking.benchmarking.benchmark method)": [[0, "benchmarking.benchmarking.Benchmark.print_results"]], "visualize_results() (benchmarking.benchmarking.benchmark method)": [[0, "benchmarking.benchmarking.Benchmark.visualize_results"]], "benchmarking": [[1, "module-benchmarking"]], "benchmarking.profiling": [[2, "module-benchmarking.profiling"]], "run_example() (in module benchmarking.profiling)": [[2, "benchmarking.profiling.run_example"]], "cmaes (class in cmaes)": [[3, "cmaes.CMAES"]], "cmaesconfig (class in cmaes)": [[3, "cmaes.CMAESConfig"]], "action() (cmaes.cmaes method)": [[3, "cmaes.CMAES.action"]], "cmaes": [[3, "module-cmaes"]], "max_iter (cmaes.cmaesconfig attribute)": [[3, "cmaes.CMAESConfig.max_iter"]], "update_action() (cmaes.cmaes method)": [[3, "cmaes.CMAES.update_action"]], "arm_joint_names (in module constants)": [[4, "constants.ARM_JOINT_NAMES"]], "arm_link_names (in module constants)": [[4, "constants.ARM_LINK_NAMES"]], "arm_stowed_pos (in module constants)": [[4, "constants.ARM_STOWED_POS"]], "arm_unstowed_pos (in module constants)": [[4, "constants.ARM_UNSTOWED_POS"]], "legs_sitting_pos (in module constants)": [[4, "constants.LEGS_SITTING_POS"]], "legs_standing_pos (in module constants)": [[4, "constants.LEGS_STANDING_POS"]], "leg_joint_names (in module constants)": [[4, "constants.LEG_JOINT_NAMES"]], "leg_link_names (in module constants)": [[4, "constants.LEG_LINK_NAMES"]], "sitting_stowed_pos (in module constants)": [[4, "constants.SITTING_STOWED_POS"]], "sitting_unstowed_pos (in module constants)": [[4, "constants.SITTING_UNSTOWED_POS"]], "spot_angs_vel_slice (in module constants)": [[4, "constants.SPOT_ANGS_VEL_SLICE"]], "spot_arms_slice (in module constants)": [[4, "constants.SPOT_ARMS_SLICE"]], "spot_arms_vel_slice (in module constants)": [[4, "constants.SPOT_ARMS_VEL_SLICE"]], "spot_body_slice (in module constants)": [[4, "constants.SPOT_BODY_SLICE"]], "spot_body_vel_slice (in module constants)": [[4, "constants.SPOT_BODY_VEL_SLICE"]], "spot_legs_slice (in module constants)": [[4, "constants.SPOT_LEGS_SLICE"]], "spot_legs_vel_slice (in module constants)": [[4, "constants.SPOT_LEGS_VEL_SLICE"]], "spot_quat_slice (in module constants)": [[4, "constants.SPOT_QUAT_SLICE"]], "spot_state_inds (class in constants)": [[4, "constants.SPOT_STATE_INDS"]], "standing_height (in module constants)": [[4, "constants.STANDING_HEIGHT"]], "standing_stowed_pos (in module constants)": [[4, "constants.STANDING_STOWED_POS"]], "standing_unstowed_pos (in module constants)": [[4, "constants.STANDING_UNSTOWED_POS"]], "angs_vel_slice (constants.spot_state_inds attribute)": [[4, "constants.SPOT_STATE_INDS.angs_vel_slice"]], "arms_slice (constants.spot_state_inds attribute)": [[4, "constants.SPOT_STATE_INDS.arms_slice"]], "arms_vel_slice (constants.spot_state_inds attribute)": [[4, "constants.SPOT_STATE_INDS.arms_vel_slice"]], "body_vel_slice (constants.spot_state_inds attribute)": [[4, "constants.SPOT_STATE_INDS.body_vel_slice"]], "constants": [[4, "module-constants"]], "legs_slice (constants.spot_state_inds attribute)": [[4, "constants.SPOT_STATE_INDS.legs_slice"]], "legs_vel_slice (constants.spot_state_inds attribute)": [[4, "constants.SPOT_STATE_INDS.legs_vel_slice"]], "quat_slice (constants.spot_state_inds attribute)": [[4, "constants.SPOT_STATE_INDS.quat_slice"]], "controller (class in controllers.controller)": [[5, "controllers.controller.Controller"]], "controllerconfig (class in controllers.controller)": [[5, "controllers.controller.ControllerConfig"]], "action() (controllers.controller.controller method)": [[5, "controllers.controller.Controller.action"]], "controllers.controller": [[5, "module-controllers.controller"]], "controls (controllers.controller.controller property)": [[5, "controllers.controller.Controller.controls"]], "make_models() (controllers.controller.controller method)": [[5, "controllers.controller.Controller.make_models"]], "reset() (controllers.controller.controller method)": [[5, "controllers.controller.Controller.reset"]], "rollout_times (controllers.controller.controller property)": [[5, "controllers.controller.Controller.rollout_times"]], "set_default_controls() (controllers.controller.controller method)": [[5, "controllers.controller.Controller.set_default_controls"]], "update_action() (controllers.controller.controller method)": [[5, "controllers.controller.Controller.update_action"]], "controllers": [[6, "module-controllers"]], "get_registered_controllers() (in module controllers)": [[6, "controllers.get_registered_controllers"]], "register_controller() (in module controllers)": [[6, "controllers.register_controller"]], "max_num_traces (in module controllers.sampling_base)": [[7, "controllers.sampling_base.MAX_NUM_TRACES"]], "samplingbase (class in controllers.sampling_base)": [[7, "controllers.sampling_base.SamplingBase"]], "samplingbaseconfig (class in controllers.sampling_base)": [[7, "controllers.sampling_base.SamplingBaseConfig"]], "action() (controllers.sampling_base.samplingbase method)": [[7, "controllers.sampling_base.SamplingBase.action"]], "control_freq (controllers.sampling_base.samplingbaseconfig attribute)": [[7, "controllers.sampling_base.SamplingBaseConfig.control_freq"]], "controllers.sampling_base": [[7, "module-controllers.sampling_base"]], "controls (controllers.sampling_base.samplingbase property)": [[7, "controllers.sampling_base.SamplingBase.controls"]], "make_models() (controllers.sampling_base.samplingbase method)": [[7, "controllers.sampling_base.SamplingBase.make_models"]], "make_spline() (in module controllers.sampling_base)": [[7, "controllers.sampling_base.make_spline"]], "num_nodes (controllers.sampling_base.samplingbaseconfig attribute)": [[7, "controllers.sampling_base.SamplingBaseConfig.num_nodes"]], "num_rollouts (controllers.sampling_base.samplingbaseconfig attribute)": [[7, "controllers.sampling_base.SamplingBaseConfig.num_rollouts"]], "reset() (controllers.sampling_base.samplingbase method)": [[7, "controllers.sampling_base.SamplingBase.reset"]], "rollout_times (controllers.sampling_base.samplingbase property)": [[7, "controllers.sampling_base.SamplingBase.rollout_times"]], "set_default_controls() (controllers.sampling_base.samplingbase method)": [[7, "controllers.sampling_base.SamplingBase.set_default_controls"]], "spline (controllers.sampling_base.samplingbase property)": [[7, "controllers.sampling_base.SamplingBase.spline"]], "spline_order (controllers.sampling_base.samplingbaseconfig attribute)": [[7, "controllers.sampling_base.SamplingBaseConfig.spline_order"]], "spline_timesteps (controllers.sampling_base.samplingbase property)": [[7, "controllers.sampling_base.SamplingBase.spline_timesteps"]], "update_action() (controllers.sampling_base.samplingbase method)": [[7, "controllers.sampling_base.SamplingBase.update_action"]], "update_spline() (controllers.sampling_base.samplingbase method)": [[7, "controllers.sampling_base.SamplingBase.update_spline"]], "update_traces() (controllers.sampling_base.samplingbase method)": [[7, "controllers.sampling_base.SamplingBase.update_traces"]], "use_noise_ramp (controllers.sampling_base.samplingbaseconfig attribute)": [[7, "controllers.sampling_base.SamplingBaseConfig.use_noise_ramp"]], "crossentropyconfig (class in cross_entropy_method)": [[8, "cross_entropy_method.CrossEntropyConfig"]], "crossentropymethod (class in cross_entropy_method)": [[8, "cross_entropy_method.CrossEntropyMethod"]], "action() (cross_entropy_method.crossentropymethod method)": [[8, "cross_entropy_method.CrossEntropyMethod.action"]], "cross_entropy_method": [[8, "module-cross_entropy_method"]], "horizon (cross_entropy_method.crossentropyconfig attribute)": [[8, "cross_entropy_method.CrossEntropyConfig.horizon"]], "noise_ramp (cross_entropy_method.crossentropyconfig attribute)": [[8, "cross_entropy_method.CrossEntropyConfig.noise_ramp"]], "num_elites (cross_entropy_method.crossentropyconfig attribute)": [[8, "cross_entropy_method.CrossEntropyConfig.num_elites"]], "num_rollouts (cross_entropy_method.crossentropyconfig attribute)": [[8, "cross_entropy_method.CrossEntropyConfig.num_rollouts"]], "sigma_max (cross_entropy_method.crossentropyconfig attribute)": [[8, "cross_entropy_method.CrossEntropyConfig.sigma_max"]], "update_action() (cross_entropy_method.crossentropymethod method)": [[8, "cross_entropy_method.CrossEntropyMethod.update_action"]], "create_action_trajectories() (in module dynamics.action_trajectory)": [[9, "dynamics.action_trajectory.create_action_trajectories"]], "create_action_trajectory() (in module dynamics.action_trajectory)": [[9, "dynamics.action_trajectory.create_action_trajectory"]], "dynamics.action_trajectory": [[9, "module-dynamics.action_trajectory"]], "dynamics": [[10, "module-dynamics"]], "locomotionplant (class in dynamics.locomotion_plant)": [[11, "dynamics.locomotion_plant.LocomotionPlant"]], "dynamics() (dynamics.locomotion_plant.locomotionplant method)": [[11, "dynamics.locomotion_plant.LocomotionPlant.dynamics"]], "dynamics.locomotion_plant": [[11, "module-dynamics.locomotion_plant"]], "get_sensor() (dynamics.locomotion_plant.locomotionplant method)": [[11, "dynamics.locomotion_plant.LocomotionPlant.get_sensor"]], "isaac_to_mujoco() (in module dynamics.locomotion_plant)": [[11, "dynamics.locomotion_plant.isaac_to_mujoco"]], "isaac_to_mujoco_ixs (in module dynamics.locomotion_plant)": [[11, "dynamics.locomotion_plant.isaac_to_mujoco_ixs"]], "load_policy() (dynamics.locomotion_plant.locomotionplant method)": [[11, "dynamics.locomotion_plant.LocomotionPlant.load_policy"]], "mujoco_to_isaac() (in module dynamics.locomotion_plant)": [[11, "dynamics.locomotion_plant.mujoco_to_isaac"]], "mujoco_to_isaac_ixs (in module dynamics.locomotion_plant)": [[11, "dynamics.locomotion_plant.mujoco_to_isaac_ixs"]], "process_observations() (dynamics.locomotion_plant.locomotionplant method)": [[11, "dynamics.locomotion_plant.LocomotionPlant.process_observations"]], "process_output() (dynamics.locomotion_plant.locomotionplant method)": [[11, "dynamics.locomotion_plant.LocomotionPlant.process_output"]], "run_policy() (dynamics.locomotion_plant.locomotionplant method)": [[11, "dynamics.locomotion_plant.LocomotionPlant.run_policy"]], "mujocoplant (class in dynamics.mujoco_dynamics)": [[12, "dynamics.mujoco_dynamics.MujocoPlant"]], "decompose_state_dimensions() (in module dynamics.mujoco_dynamics)": [[12, "dynamics.mujoco_dynamics.decompose_state_dimensions"]], "dynamics() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.dynamics"]], "dynamics.mujoco_dynamics": [[12, "module-dynamics.mujoco_dynamics"]], "get_action() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.get_action"]], "get_collision_free() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.get_collision_free"]], "get_gradients() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.get_gradients"]], "get_joint_dimensions() (in module dynamics.mujoco_dynamics)": [[12, "dynamics.mujoco_dynamics.get_joint_dimensions"]], "get_mass() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.get_mass"]], "get_quat_indices() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.get_quat_indices"]], "get_sensor() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.get_sensor"]], "get_state() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.get_state"]], "initialize() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.initialize"]], "normalize_state() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.normalize_state"]], "scale_distances() (in module dynamics.mujoco_dynamics)": [[12, "dynamics.mujoco_dynamics.scale_distances"]], "scaled_distances_to() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.scaled_distances_to"]], "set_action() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.set_action"]], "set_state() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.set_state"]], "state_addition() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.state_addition"]], "state_difference() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.state_difference"]], "update_sensor() (dynamics.mujoco_dynamics.mujocoplant method)": [[12, "dynamics.mujoco_dynamics.MujocoPlant.update_sensor"]], "dynamics.mujoco_utils": [[13, "module-dynamics.mujoco_utils"]], "get_body_name() (in module dynamics.mujoco_utils)": [[13, "dynamics.mujoco_utils.get_body_name"]], "get_geom_name() (in module dynamics.mujoco_utils)": [[13, "dynamics.mujoco_utils.get_geom_name"]], "get_geometry_rgba() (in module dynamics.mujoco_utils)": [[13, "dynamics.mujoco_utils.get_geometry_rgba"]], "get_mesh_data() (in module dynamics.mujoco_utils)": [[13, "dynamics.mujoco_utils.get_mesh_data"]], "commandarray (class in dynamics.state_helpers)": [[14, "dynamics.state_helpers.CommandArray"]], "sensorarray (class in dynamics.state_helpers)": [[14, "dynamics.state_helpers.SensorArray"]], "statearray (class in dynamics.state_helpers)": [[14, "dynamics.state_helpers.StateArray"]], "arm (dynamics.state_helpers.commandarray attribute)": [[14, "dynamics.state_helpers.CommandArray.arm"]], "arm (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.arm"]], "arm_vel (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.arm_vel"]], "as_dict() (dynamics.state_helpers.commandarray class method)": [[14, "dynamics.state_helpers.CommandArray.as_dict"]], "base_ang_vel (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.base_ang_vel"]], "base_height (dynamics.state_helpers.commandarray attribute)": [[14, "dynamics.state_helpers.CommandArray.base_height"]], "base_lin_vel (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.base_lin_vel"]], "base_pitch (dynamics.state_helpers.commandarray attribute)": [[14, "dynamics.state_helpers.CommandArray.base_pitch"]], "base_quat (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.base_quat"]], "base_roll (dynamics.state_helpers.commandarray attribute)": [[14, "dynamics.state_helpers.CommandArray.base_roll"]], "create() (dynamics.state_helpers.commandarray class method)": [[14, "dynamics.state_helpers.CommandArray.create"]], "dynamics.state_helpers": [[14, "module-dynamics.state_helpers"]], "fl_leg (dynamics.state_helpers.commandarray attribute)": [[14, "dynamics.state_helpers.CommandArray.fl_leg"]], "fl_leg (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.fl_leg"]], "fl_leg_vel (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.fl_leg_vel"]], "fngr_object (dynamics.state_helpers.sensorarray attribute)": [[14, "dynamics.state_helpers.SensorArray.fngr_object"]], "fr_leg (dynamics.state_helpers.commandarray attribute)": [[14, "dynamics.state_helpers.CommandArray.fr_leg"]], "fr_leg (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.fr_leg"]], "fr_leg_vel (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.fr_leg_vel"]], "hl_leg (dynamics.state_helpers.commandarray attribute)": [[14, "dynamics.state_helpers.CommandArray.hl_leg"]], "hl_leg (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.hl_leg"]], "hl_leg_vel (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.hl_leg_vel"]], "hr_leg (dynamics.state_helpers.commandarray attribute)": [[14, "dynamics.state_helpers.CommandArray.hr_leg"]], "hr_leg (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.hr_leg"]], "hr_leg_vel (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.hr_leg_vel"]], "lateral_vel (dynamics.state_helpers.commandarray attribute)": [[14, "dynamics.state_helpers.CommandArray.lateral_vel"]], "legs (dynamics.state_helpers.commandarray attribute)": [[14, "dynamics.state_helpers.CommandArray.legs"]], "legs (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.legs"]], "legs_vel (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.legs_vel"]], "non_velocities (dynamics.state_helpers.commandarray attribute)": [[14, "dynamics.state_helpers.CommandArray.non_velocities"]], "object_ang_vel (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.object_ang_vel"]], "object_lin_vel (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.object_lin_vel"]], "object_pos (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.object_pos"]], "object_quat (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.object_quat"]], "object_y_axis (dynamics.state_helpers.sensorarray attribute)": [[14, "dynamics.state_helpers.SensorArray.object_y_axis"]], "set_defaults() (dynamics.state_helpers.commandarray class method)": [[14, "dynamics.state_helpers.CommandArray.set_defaults"]], "size (dynamics.state_helpers.commandarray attribute)": [[14, "dynamics.state_helpers.CommandArray.size"]], "size (dynamics.state_helpers.statearray attribute)": [[14, "dynamics.state_helpers.StateArray.size"]], "slice_union() (in module dynamics.state_helpers)": [[14, "dynamics.state_helpers.slice_union"]], "trace_body (dynamics.state_helpers.sensorarray attribute)": [[14, "dynamics.state_helpers.SensorArray.trace_body"]], "trace_gripper (dynamics.state_helpers.sensorarray attribute)": [[14, "dynamics.state_helpers.SensorArray.trace_gripper"]], "update() (dynamics.state_helpers.commandarray class method)": [[14, "dynamics.state_helpers.CommandArray.update"]], "velocities (dynamics.state_helpers.commandarray attribute)": [[14, "dynamics.state_helpers.CommandArray.velocities"]], "yaw_vel (dynamics.state_helpers.commandarray attribute)": [[14, "dynamics.state_helpers.CommandArray.yaw_vel"]], "dexterityenv (class in environments.base)": [[15, "environments.base.DexterityEnv"]], "__post_init__() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.__post_init__"]], "action_space (environments.base.dexterityenv property)": [[15, "environments.base.DexterityEnv.action_space"]], "check_failure() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.check_failure"]], "check_success() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.check_success"]], "close() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.close"]], "environments.base": [[15, "module-environments.base"]], "get_metrics() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.get_metrics"]], "metrics_keys (environments.base.dexterityenv property)": [[15, "environments.base.DexterityEnv.metrics_keys"]], "params (environments.base.dexterityenv attribute)": [[15, "environments.base.DexterityEnv.params"]], "post_physics_step() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.post_physics_step"]], "preserve_reset_obs() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.preserve_reset_obs"]], "process_resets() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.process_resets"]], "reset() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.reset"]], "reset_ixs() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.reset_ixs"]], "reset_states() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.reset_states"]], "scale_actions() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.scale_actions"]], "set_current_states() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.set_current_states"]], "set_goal_states() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.set_goal_states"]], "set_previous_end_actions() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.set_previous_end_actions"]], "set_start_states() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.set_start_states"]], "setup_action_processor() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.setup_action_processor"]], "setup_buffers() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.setup_buffers"]], "setup_plant() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.setup_plant"]], "step() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.step"]], "step_sim() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.step_sim"]], "task_rewards() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.task_rewards"]], "uniform_random_action() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.uniform_random_action"]], "update_info() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.update_info"]], "update_joint_targets() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.update_joint_targets"]], "update_obs() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.update_obs"]], "update_rewards() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.update_rewards"]], "update_terminations() (environments.base.dexterityenv method)": [[15, "environments.base.DexterityEnv.update_terminations"]], "environments": [[16, "module-environments"]], "spotarmik (class in environments.tire_state_cache_generator)": [[17, "environments.tire_state_cache_generator.SpotArmIK"]], "tiregeneratorconfig (class in environments.tire_state_cache_generator)": [[17, "environments.tire_state_cache_generator.TireGeneratorConfig"]], "tirestatecachegenerator (class in environments.tire_state_cache_generator)": [[17, "environments.tire_state_cache_generator.TireStateCacheGenerator"]], "__post_init__() (environments.tire_state_cache_generator.spotarmik method)": [[17, "environments.tire_state_cache_generator.SpotArmIK.__post_init__"]], "__post_init__() (environments.tire_state_cache_generator.tirestatecachegenerator method)": [[17, "environments.tire_state_cache_generator.TireStateCacheGenerator.__post_init__"]], "actuated_pos (environments.tire_state_cache_generator.spotarmik attribute)": [[17, "environments.tire_state_cache_generator.SpotArmIK.actuated_pos"]], "angular_velocity_range (environments.tire_state_cache_generator.tiregeneratorconfig attribute)": [[17, "environments.tire_state_cache_generator.TireGeneratorConfig.angular_velocity_range"]], "cache_size (environments.tire_state_cache_generator.tiregeneratorconfig attribute)": [[17, "environments.tire_state_cache_generator.TireGeneratorConfig.cache_size"]], "config (environments.tire_state_cache_generator.tirestatecachegenerator attribute)": [[17, "environments.tire_state_cache_generator.TireStateCacheGenerator.config"]], "damping (environments.tire_state_cache_generator.spotarmik attribute)": [[17, "environments.tire_state_cache_generator.SpotArmIK.damping"]], "default_base_pose (environments.tire_state_cache_generator.tirestatecachegenerator property)": [[17, "environments.tire_state_cache_generator.TireStateCacheGenerator.default_base_pose"]], "default_velocities (environments.tire_state_cache_generator.tirestatecachegenerator property)": [[17, "environments.tire_state_cache_generator.TireStateCacheGenerator.default_velocities"]], "distance_range (environments.tire_state_cache_generator.tiregeneratorconfig attribute)": [[17, "environments.tire_state_cache_generator.TireGeneratorConfig.distance_range"]], "enable_orientation_control (environments.tire_state_cache_generator.spotarmik attribute)": [[17, "environments.tire_state_cache_generator.SpotArmIK.enable_orientation_control"]], "enable_rendering (environments.tire_state_cache_generator.tiregeneratorconfig attribute)": [[17, "environments.tire_state_cache_generator.TireGeneratorConfig.enable_rendering"]], "environments.tire_state_cache_generator": [[17, "module-environments.tire_state_cache_generator"]], "generate_cache() (environments.tire_state_cache_generator.tirestatecachegenerator method)": [[17, "environments.tire_state_cache_generator.TireStateCacheGenerator.generate_cache"]], "integration_dt (environments.tire_state_cache_generator.spotarmik attribute)": [[17, "environments.tire_state_cache_generator.SpotArmIK.integration_dt"]], "linear_velocity_range (environments.tire_state_cache_generator.tiregeneratorconfig attribute)": [[17, "environments.tire_state_cache_generator.TireGeneratorConfig.linear_velocity_range"]], "max_iterations (environments.tire_state_cache_generator.spotarmik attribute)": [[17, "environments.tire_state_cache_generator.SpotArmIK.max_iterations"]], "max_no_progress_steps (environments.tire_state_cache_generator.spotarmik attribute)": [[17, "environments.tire_state_cache_generator.SpotArmIK.max_no_progress_steps"]], "object_z (environments.tire_state_cache_generator.tiregeneratorconfig attribute)": [[17, "environments.tire_state_cache_generator.TireGeneratorConfig.object_z"]], "orientation_tolerance (environments.tire_state_cache_generator.spotarmik attribute)": [[17, "environments.tire_state_cache_generator.SpotArmIK.orientation_tolerance"]], "params (environments.tire_state_cache_generator.spotarmik attribute)": [[17, "environments.tire_state_cache_generator.SpotArmIK.params"]], "position_tolerance (environments.tire_state_cache_generator.spotarmik attribute)": [[17, "environments.tire_state_cache_generator.SpotArmIK.position_tolerance"]], "progress_threshold (environments.tire_state_cache_generator.spotarmik attribute)": [[17, "environments.tire_state_cache_generator.SpotArmIK.progress_threshold"]], "radius_range (environments.tire_state_cache_generator.tiregeneratorconfig attribute)": [[17, "environments.tire_state_cache_generator.TireGeneratorConfig.radius_range"]], "randomize_velocity (environments.tire_state_cache_generator.tiregeneratorconfig attribute)": [[17, "environments.tire_state_cache_generator.TireGeneratorConfig.randomize_velocity"]], "set_floating_spot_cache() (environments.tire_state_cache_generator.tirestatecachegenerator method)": [[17, "environments.tire_state_cache_generator.TireStateCacheGenerator.set_floating_spot_cache"]], "solve() (environments.tire_state_cache_generator.spotarmik method)": [[17, "environments.tire_state_cache_generator.SpotArmIK.solve"]], "task_name (environments.tire_state_cache_generator.tirestatecachegenerator attribute)": [[17, "environments.tire_state_cache_generator.TireStateCacheGenerator.task_name"]], "expert (class in experts.expert)": [[18, "experts.expert.Expert"]], "experts.expert": [[18, "module-experts.expert"]], "expertsampler (class in experts.expert_sampler)": [[19, "experts.expert_sampler.ExpertSampler"]], "experts.expert_sampler": [[19, "module-experts.expert_sampler"]], "experts": [[20, "module-experts"]], "networksampler (class in experts.network)": [[21, "experts.network.NetworkSampler"]], "experts.network": [[21, "module-experts.network"]], "primitivesampler (class in experts.primitive)": [[22, "experts.primitive.PrimitiveSampler"]], "compute_low_level_actions() (experts.primitive.primitivesampler method)": [[22, "experts.primitive.PrimitiveSampler.compute_low_level_actions"]], "experts.primitive": [[22, "module-experts.primitive"]], "reset() (experts.primitive.primitivesampler method)": [[22, "experts.primitive.PrimitiveSampler.reset"]], "experts.primitives": [[23, "module-experts.primitives"]], "compute_grasp_actions() (in module experts.primitives.spot_standing_box)": [[24, "experts.primitives.spot_standing_box.compute_grasp_actions"]], "compute_grasp_pose_for_handle_top() (in module experts.primitives.spot_standing_box)": [[24, "experts.primitives.spot_standing_box.compute_grasp_pose_for_handle_top"]], "experts.primitives.spot_standing_box": [[24, "module-experts.primitives.spot_standing_box"]], "spot_ik_mujoco() (in module experts.primitives.spot_standing_box)": [[24, "experts.primitives.spot_standing_box.spot_ik_mujoco"]], "learning": [[25, "module-learning"]], "learner (class in learning.learner)": [[26, "learning.learner.Learner"]], "__post_init__() (learning.learner.learner method)": [[26, "learning.learner.Learner.__post_init__"]], "actor_actions() (learning.learner.learner method)": [[26, "learning.learner.Learner.actor_actions"]], "eval_agent() (learning.learner.learner method)": [[26, "learning.learner.Learner.eval_agent"]], "graph (learning.learner.learner attribute)": [[26, "learning.learner.Learner.graph"]], "graph_rollout() (learning.learner.learner method)": [[26, "learning.learner.Learner.graph_rollout"]], "learning.learner": [[26, "module-learning.learner"]], "load_cloud (learning.learner.learner attribute)": [[26, "learning.learner.Learner.load_cloud"]], "load_local (learning.learner.learner attribute)": [[26, "learning.learner.Learner.load_local"]], "load_models() (learning.learner.learner method)": [[26, "learning.learner.Learner.load_models"]], "params (learning.learner.learner attribute)": [[26, "learning.learner.Learner.params"]], "policy_rollout() (learning.learner.learner method)": [[26, "learning.learner.Learner.policy_rollout"]], "preprocess_sample() (learning.learner.learner method)": [[26, "learning.learner.Learner.preprocess_sample"]], "relative_distances_to() (learning.learner.learner method)": [[26, "learning.learner.Learner.relative_distances_to"]], "replay_buffer (learning.learner.learner attribute)": [[26, "learning.learner.Learner.replay_buffer"]], "reset() (learning.learner.learner method)": [[26, "learning.learner.Learner.reset"]], "reward_function() (learning.learner.learner method)": [[26, "learning.learner.Learner.reward_function"]], "save_cloud (learning.learner.learner attribute)": [[26, "learning.learner.Learner.save_cloud"]], "save_local (learning.learner.learner attribute)": [[26, "learning.learner.Learner.save_local"]], "save_models() (learning.learner.learner method)": [[26, "learning.learner.Learner.save_models"]], "set_demonstration_injection() (learning.learner.learner method)": [[26, "learning.learner.Learner.set_demonstration_injection"]], "train() (learning.learner.learner method)": [[26, "learning.learner.Learner.train"]], "train_actor_critic() (learning.learner.learner method)": [[26, "learning.learner.Learner.train_actor_critic"]], "update_norm() (learning.learner.learner method)": [[26, "learning.learner.Learner.update_norm"]], "verbose (learning.learner.learner attribute)": [[26, "learning.learner.Learner.verbose"]], "actor (class in learning.networks)": [[27, "learning.networks.Actor"]], "critic (class in learning.networks)": [[27, "learning.networks.Critic"]], "criticnetwork (class in learning.networks)": [[27, "learning.networks.CriticNetwork"]], "ddp (class in learning.networks)": [[27, "learning.networks.DDP"]], "__call__() (learning.networks.actor method)": [[27, "learning.networks.Actor.__call__"]], "backward_step() (learning.networks.actor method)": [[27, "learning.networks.Actor.backward_step"]], "backward_step() (learning.networks.critic method)": [[27, "learning.networks.Critic.backward_step"]], "eval() (learning.networks.actor method)": [[27, "learning.networks.Actor.eval"]], "learning.networks": [[27, "module-learning.networks"]], "load() (learning.networks.actor method)": [[27, "learning.networks.Actor.load"]], "load() (learning.networks.critic method)": [[27, "learning.networks.Critic.load"]], "save() (learning.networks.actor method)": [[27, "learning.networks.Actor.save"]], "save() (learning.networks.critic method)": [[27, "learning.networks.Critic.save"]], "soft_update() (in module learning.networks)": [[27, "learning.networks.soft_update"]], "target() (learning.networks.actor method)": [[27, "learning.networks.Actor.target"]], "target() (learning.networks.critic method)": [[27, "learning.networks.Critic.target"]], "train() (learning.networks.actor method)": [[27, "learning.networks.Actor.train"]], "update_target() (learning.networks.actor method)": [[27, "learning.networks.Actor.update_target"]], "update_target() (learning.networks.critic method)": [[27, "learning.networks.Critic.update_target"]], "normalizer (class in learning.normalizer)": [[28, "learning.normalizer.Normalizer"]], "learning.normalizer": [[28, "module-learning.normalizer"]], "load() (learning.normalizer.normalizer method)": [[28, "learning.normalizer.Normalizer.load"]], "normalize() (learning.normalizer.normalizer method)": [[28, "learning.normalizer.Normalizer.normalize"]], "normalize_obs() (learning.normalizer.normalizer method)": [[28, "learning.normalizer.Normalizer.normalize_obs"]], "save() (learning.normalizer.normalizer method)": [[28, "learning.normalizer.Normalizer.save"]], "update() (learning.normalizer.normalizer method)": [[28, "learning.normalizer.Normalizer.update"]], "replaybuffer (class in learning.replay_buffer)": [[29, "learning.replay_buffer.ReplayBuffer"]], "trajectoryreplaybuffer (class in learning.replay_buffer)": [[29, "learning.replay_buffer.TrajectoryReplayBuffer"]], "__getitem__() (learning.replay_buffer.replaybuffer method)": [[29, "learning.replay_buffer.ReplayBuffer.__getitem__"]], "__post_init__() (learning.replay_buffer.replaybuffer method)": [[29, "learning.replay_buffer.ReplayBuffer.__post_init__"]], "extend() (learning.replay_buffer.replaybuffer method)": [[29, "learning.replay_buffer.ReplayBuffer.extend"]], "learning.replay_buffer": [[29, "module-learning.replay_buffer"]], "reset() (learning.replay_buffer.replaybuffer method)": [[29, "learning.replay_buffer.ReplayBuffer.reset"]], "sample() (learning.replay_buffer.replaybuffer method)": [[29, "learning.replay_buffer.ReplayBuffer.sample"]], "sample() (learning.replay_buffer.trajectoryreplaybuffer method)": [[29, "learning.replay_buffer.TrajectoryReplayBuffer.sample"]], "sampler_class (learning.replay_buffer.replaybuffer attribute)": [[29, "learning.replay_buffer.ReplayBuffer.sampler_class"]], "setup_buffer() (learning.replay_buffer.replaybuffer method)": [[29, "learning.replay_buffer.ReplayBuffer.setup_buffer"]], "setup_buffer() (learning.replay_buffer.trajectoryreplaybuffer method)": [[29, "learning.replay_buffer.TrajectoryReplayBuffer.setup_buffer"]], "setup_sampler() (learning.replay_buffer.replaybuffer method)": [[29, "learning.replay_buffer.ReplayBuffer.setup_sampler"]], "setup_storage() (learning.replay_buffer.replaybuffer method)": [[29, "learning.replay_buffer.ReplayBuffer.setup_storage"]], "storage_class (learning.replay_buffer.replaybuffer attribute)": [[29, "learning.replay_buffer.ReplayBuffer.storage_class"]], "mppi (class in mppi)": [[30, "mppi.MPPI"]], "mppiconfig (class in mppi)": [[30, "mppi.MPPIConfig"]], "action() (mppi.mppi method)": [[30, "mppi.MPPI.action"]], "mppi": [[30, "module-mppi"]], "temperature (mppi.mppiconfig attribute)": [[30, "mppi.MPPIConfig.temperature"]], "update_action() (mppi.mppi method)": [[30, "mppi.MPPI.update_action"]], "particlefilter (class in particle_filter)": [[31, "particle_filter.ParticleFilter"]], "particlefilterconfig (class in particle_filter)": [[31, "particle_filter.ParticleFilterConfig"]], "action() (particle_filter.particlefilter method)": [[31, "particle_filter.ParticleFilter.action"]], "particle_filter": [[31, "module-particle_filter"]], "temperature (particle_filter.particlefilterconfig attribute)": [[31, "particle_filter.ParticleFilterConfig.temperature"]], "update_action() (particle_filter.particlefilter method)": [[31, "particle_filter.ParticleFilter.update_action"]], "get_package_path() (in module path_resolvers)": [[32, "path_resolvers.get_package_path"]], "path_resolvers": [[32, "module-path_resolvers"]], "actionprocessor (class in planner.action_processor)": [[33, "planner.action_processor.ActionProcessor"]], "spotfloatingactionprocessor (class in planner.action_processor)": [[33, "planner.action_processor.SpotFloatingActionProcessor"]], "spotwholebodyactionprocessor (class in planner.action_processor)": [[33, "planner.action_processor.SpotWholebodyActionProcessor"]], "__call__() (planner.action_processor.actionprocessor method)": [[33, "planner.action_processor.ActionProcessor.__call__"]], "actuated_pos (planner.action_processor.actionprocessor attribute)": [[33, "planner.action_processor.ActionProcessor.actuated_pos"]], "arm_action_ixs (planner.action_processor.spotfloatingactionprocessor attribute)": [[33, "planner.action_processor.SpotFloatingActionProcessor.arm_action_ixs"]], "arm_action_ixs (planner.action_processor.spotwholebodyactionprocessor attribute)": [[33, "planner.action_processor.SpotWholebodyActionProcessor.arm_action_ixs"]], "arm_state_ixs (planner.action_processor.spotwholebodyactionprocessor attribute)": [[33, "planner.action_processor.SpotWholebodyActionProcessor.arm_state_ixs"]], "base_action_to_egocentric() (planner.action_processor.spotfloatingactionprocessor method)": [[33, "planner.action_processor.SpotFloatingActionProcessor.base_action_to_egocentric"]], "clip_base_actions() (planner.action_processor.spotfloatingactionprocessor method)": [[33, "planner.action_processor.SpotFloatingActionProcessor.clip_base_actions"]], "get_action_trajectories() (planner.action_processor.actionprocessor method)": [[33, "planner.action_processor.ActionProcessor.get_action_trajectories"]], "get_action_trajectories() (planner.action_processor.spotwholebodyactionprocessor method)": [[33, "planner.action_processor.SpotWholebodyActionProcessor.get_action_trajectories"]], "get_actuated_states() (planner.action_processor.actionprocessor method)": [[33, "planner.action_processor.ActionProcessor.get_actuated_states"]], "get_actuated_states() (planner.action_processor.spotwholebodyactionprocessor method)": [[33, "planner.action_processor.SpotWholebodyActionProcessor.get_actuated_states"]], "get_end_actions() (planner.action_processor.actionprocessor method)": [[33, "planner.action_processor.ActionProcessor.get_end_actions"]], "get_end_actions() (planner.action_processor.spotfloatingactionprocessor method)": [[33, "planner.action_processor.SpotFloatingActionProcessor.get_end_actions"]], "get_start_actions() (planner.action_processor.actionprocessor method)": [[33, "planner.action_processor.ActionProcessor.get_start_actions"]], "get_start_actions() (planner.action_processor.spotwholebodyactionprocessor method)": [[33, "planner.action_processor.SpotWholebodyActionProcessor.get_start_actions"]], "planner.action_processor": [[33, "module-planner.action_processor"]], "actionsampler (class in planner.action_sampler)": [[34, "planner.action_sampler.ActionSampler"]], "__call__() (planner.action_sampler.actionsampler method)": [[34, "planner.action_sampler.ActionSampler.__call__"]], "continuation_directions() (planner.action_sampler.actionsampler method)": [[34, "planner.action_sampler.ActionSampler.continuation_directions"]], "directions_actions() (planner.action_sampler.actionsampler method)": [[34, "planner.action_sampler.ActionSampler.directions_actions"]], "goal_directions() (planner.action_sampler.actionsampler method)": [[34, "planner.action_sampler.ActionSampler.goal_directions"]], "initialize() (planner.action_sampler.actionsampler method)": [[34, "planner.action_sampler.ActionSampler.initialize"]], "planner.action_sampler": [[34, "module-planner.action_sampler"]], "proximity_directions() (planner.action_sampler.actionsampler method)": [[34, "planner.action_sampler.ActionSampler.proximity_directions"]], "random_directions() (planner.action_sampler.actionsampler method)": [[34, "planner.action_sampler.ActionSampler.random_directions"]], "box_scaling() (in module planner.clipping_method)": [[35, "planner.clipping_method.box_scaling"]], "clip_actions() (in module planner.clipping_method)": [[35, "planner.clipping_method.clip_actions"]], "planner.clipping_method": [[35, "module-planner.clipping_method"]], "find_latest_model_path() (in module planner.data_collection)": [[36, "planner.data_collection.find_latest_model_path"]], "load_model() (in module planner.data_collection)": [[36, "planner.data_collection.load_model"]], "load_tensor() (in module planner.data_collection)": [[36, "planner.data_collection.load_tensor"]], "planner.data_collection": [[36, "module-planner.data_collection"]], "save_model() (in module planner.data_collection)": [[36, "planner.data_collection.save_model"]], "save_tensor() (in module planner.data_collection)": [[36, "planner.data_collection.save_tensor"]], "graph (class in planner.graph)": [[37, "planner.graph.Graph"]], "activate_all_nodes() (planner.graph.graph method)": [[37, "planner.graph.Graph.activate_all_nodes"]], "add_child_ids_to_node() (planner.graph.graph method)": [[37, "planner.graph.Graph.add_child_ids_to_node"]], "add_nodes() (planner.graph.graph method)": [[37, "planner.graph.Graph.add_nodes"]], "add_total_rewards() (planner.graph.graph method)": [[37, "planner.graph.Graph.add_total_rewards"]], "calculate_distance_rewards() (planner.graph.graph method)": [[37, "planner.graph.Graph.calculate_distance_rewards"]], "calculate_proximity_rewards() (planner.graph.graph method)": [[37, "planner.graph.Graph.calculate_proximity_rewards"]], "calculate_reachability_rewards() (planner.graph.graph method)": [[37, "planner.graph.Graph.calculate_reachability_rewards"]], "change_sub_goal_states() (planner.graph.graph method)": [[37, "planner.graph.Graph.change_sub_goal_states"]], "check_for_early_termination() (planner.graph.graph method)": [[37, "planner.graph.Graph.check_for_early_termination"]], "deactivate_nodes() (planner.graph.graph method)": [[37, "planner.graph.Graph.deactivate_nodes"]], "destroy() (planner.graph.graph method)": [[37, "planner.graph.Graph.destroy"]], "get_active_main_ids() (planner.graph.graph method)": [[37, "planner.graph.Graph.get_active_main_ids"]], "get_best_id() (planner.graph.graph method)": [[37, "planner.graph.Graph.get_best_id"]], "get_root_ids() (planner.graph.graph method)": [[37, "planner.graph.Graph.get_root_ids"]], "is_better_than() (planner.graph.graph method)": [[37, "planner.graph.Graph.is_better_than"]], "is_worse_than() (planner.graph.graph method)": [[37, "planner.graph.Graph.is_worse_than"]], "load() (planner.graph.graph method)": [[37, "planner.graph.Graph.load"]], "number_of_nodes() (planner.graph.graph method)": [[37, "planner.graph.Graph.number_of_nodes"]], "planner.graph": [[37, "module-planner.graph"]], "reachability_cache() (planner.graph.graph method)": [[37, "planner.graph.Graph.reachability_cache"]], "reset() (planner.graph.graph method)": [[37, "planner.graph.Graph.reset"]], "reset_sub_goal_states() (planner.graph.graph method)": [[37, "planner.graph.Graph.reset_sub_goal_states"]], "sample_feasible_states() (in module planner.graph)": [[37, "planner.graph.sample_feasible_states"]], "sample_random_goal_states() (in module planner.graph)": [[37, "planner.graph.sample_random_goal_states"]], "sample_random_start_states() (in module planner.graph)": [[37, "planner.graph.sample_random_start_states"]], "sample_random_states() (in module planner.graph)": [[37, "planner.graph.sample_random_states"]], "sample_random_sub_goal_states() (in module planner.graph)": [[37, "planner.graph.sample_random_sub_goal_states"]], "sample_related_sub_goal_states() (in module planner.graph)": [[37, "planner.graph.sample_related_sub_goal_states"]], "save() (planner.graph.graph method)": [[37, "planner.graph.Graph.save"]], "set_goal_state() (planner.graph.graph method)": [[37, "planner.graph.Graph.set_goal_state"]], "set_start_states() (planner.graph.graph method)": [[37, "planner.graph.Graph.set_start_states"]], "shortest_path_to() (planner.graph.graph method)": [[37, "planner.graph.Graph.shortest_path_to"]], "sorted_progress_ids() (planner.graph.graph method)": [[37, "planner.graph.Graph.sorted_progress_ids"]], "color_gradient() (in module planner.graph_visuals)": [[38, "planner.graph_visuals.color_gradient"]], "display_3d_graph() (in module planner.graph_visuals)": [[38, "planner.graph_visuals.display_3d_graph"]], "display_colormap_point_cloud() (in module planner.graph_visuals)": [[38, "planner.graph_visuals.display_colormap_point_cloud"]], "display_point_cloud() (in module planner.graph_visuals)": [[38, "planner.graph_visuals.display_point_cloud"]], "display_segments() (in module planner.graph_visuals)": [[38, "planner.graph_visuals.display_segments"]], "display_segments_by_category() (in module planner.graph_visuals)": [[38, "planner.graph_visuals.display_segments_by_category"]], "planner.graph_visuals": [[38, "module-planner.graph_visuals"]], "rgba_palette() (in module planner.graph_visuals)": [[38, "planner.graph_visuals.rgba_palette"]], "commongoalworkerinterface (class in planner.graph_worker)": [[39, "planner.graph_worker.CommonGoalWorkerInterface"]], "explorerworker (class in planner.graph_worker)": [[39, "planner.graph_worker.ExplorerWorker"]], "graphworker (class in planner.graph_worker)": [[39, "planner.graph_worker.GraphWorker"]], "parallelgoalsworker (class in planner.graph_worker)": [[39, "planner.graph_worker.ParallelGoalsWorker"]], "relatedgoalworker (class in planner.graph_worker)": [[39, "planner.graph_worker.RelatedGoalWorker"]], "rolloutworker (class in planner.graph_worker)": [[39, "planner.graph_worker.RolloutWorker"]], "singlegoalworker (class in planner.graph_worker)": [[39, "planner.graph_worker.SingleGoalWorker"]], "callback_and_progress_check() (planner.graph_worker.graphworker method)": [[39, "planner.graph_worker.GraphWorker.callback_and_progress_check"]], "get_progress_info() (planner.graph_worker.graphworker method)": [[39, "planner.graph_worker.GraphWorker.get_progress_info"]], "inspect_action_type() (in module planner.graph_worker)": [[39, "planner.graph_worker.inspect_action_type"]], "node_extension() (planner.graph_worker.graphworker method)": [[39, "planner.graph_worker.GraphWorker.node_extension"]], "node_pruning() (planner.graph_worker.graphworker method)": [[39, "planner.graph_worker.GraphWorker.node_pruning"]], "node_replacement() (planner.graph_worker.graphworker method)": [[39, "planner.graph_worker.GraphWorker.node_replacement"]], "node_selection() (planner.graph_worker.graphworker method)": [[39, "planner.graph_worker.GraphWorker.node_selection"]], "pareto_distribution() (in module planner.graph_worker)": [[39, "planner.graph_worker.pareto_distribution"]], "percentage_range() (planner.graph_worker.graphworker method)": [[39, "planner.graph_worker.GraphWorker.percentage_range"]], "planner.graph_worker": [[39, "module-planner.graph_worker"]], "reset_finished_workers() (planner.graph_worker.parallelgoalsworker method)": [[39, "planner.graph_worker.ParallelGoalsWorker.reset_finished_workers"]], "update_extension_lengths() (planner.graph_worker.parallelgoalsworker method)": [[39, "planner.graph_worker.ParallelGoalsWorker.update_extension_lengths"]], "update_pareto_parameters() (planner.graph_worker.parallelgoalsworker method)": [[39, "planner.graph_worker.ParallelGoalsWorker.update_pareto_parameters"]], "work() (planner.graph_worker.parallelgoalsworker method)": [[39, "planner.graph_worker.ParallelGoalsWorker.work"]], "planner": [[40, "module-planner"]], "einsum_ij_ij_i() (in module planner.linear_algebra)": [[41, "planner.linear_algebra.einsum_ij_ij_i"]], "einsum_ij_kj_ki() (in module planner.linear_algebra)": [[41, "planner.linear_algebra.einsum_ij_kj_ki"]], "einsum_ijk_ik_ij() (in module planner.linear_algebra)": [[41, "planner.linear_algebra.einsum_ijk_ik_ij"]], "einsum_ijk_ikl_ijl() (in module planner.linear_algebra)": [[41, "planner.linear_algebra.einsum_ijk_ikl_ijl"]], "einsum_ijk_ilk_ijl() (in module planner.linear_algebra)": [[41, "planner.linear_algebra.einsum_ijk_ilk_ijl"]], "einsum_ikj_ik_ij() (in module planner.linear_algebra)": [[41, "planner.linear_algebra.einsum_ikj_ik_ij"]], "einsum_ikj_ikl_ijl() (in module planner.linear_algebra)": [[41, "planner.linear_algebra.einsum_ikj_ikl_ijl"]], "einsum_jk_ikl_ijl() (in module planner.linear_algebra)": [[41, "planner.linear_algebra.einsum_jk_ikl_ijl"]], "gram_schmidt() (in module planner.linear_algebra)": [[41, "planner.linear_algebra.gram_schmidt"]], "max_scaling() (in module planner.linear_algebra)": [[41, "planner.linear_algebra.max_scaling"]], "normalize() (in module planner.linear_algebra)": [[41, "planner.linear_algebra.normalize"]], "normalize_multiple() (in module planner.linear_algebra)": [[41, "planner.linear_algebra.normalize_multiple"]], "planner.linear_algebra": [[41, "module-planner.linear_algebra"]], "project_v_on_u() (in module planner.linear_algebra)": [[41, "planner.linear_algebra.project_v_on_u"]], "project_vectors_on_eigenspace() (in module planner.linear_algebra)": [[41, "planner.linear_algebra.project_vectors_on_eigenspace"]], "transformation_matrix() (in module planner.linear_algebra)": [[41, "planner.linear_algebra.transformation_matrix"]], "truncpareto_cdf() (in module planner.linear_algebra)": [[41, "planner.linear_algebra.truncpareto_cdf"]], "logger (class in planner.logger)": [[42, "planner.logger.Logger"]], "create_distance_log() (planner.logger.logger method)": [[42, "planner.logger.Logger.create_distance_log"]], "create_reward_log() (planner.logger.logger method)": [[42, "planner.logger.Logger.create_reward_log"]], "get_log_name() (planner.logger.logger method)": [[42, "planner.logger.Logger.get_log_name"]], "log_action_sampler() (planner.logger.logger method)": [[42, "planner.logger.Logger.log_action_sampler"]], "log_node_extension() (planner.logger.logger method)": [[42, "planner.logger.Logger.log_node_extension"]], "log_node_pruning() (planner.logger.logger method)": [[42, "planner.logger.Logger.log_node_pruning"]], "log_node_selection() (planner.logger.logger method)": [[42, "planner.logger.Logger.log_node_selection"]], "log_params() (planner.logger.logger method)": [[42, "planner.logger.Logger.log_params"]], "log_search() (planner.logger.logger method)": [[42, "planner.logger.Logger.log_search"]], "planner.logger": [[42, "module-planner.logger"]], "simple_path_statistics() (planner.logger.logger method)": [[42, "planner.logger.Logger.simple_path_statistics"]], "simple_progress_statistics() (planner.logger.logger method)": [[42, "planner.logger.Logger.simple_progress_statistics"]], "parametercontainer (class in planner.parameter_container)": [[43, "planner.parameter_container.ParameterContainer"]], "__contains__() (planner.parameter_container.parametercontainer method)": [[43, "planner.parameter_container.ParameterContainer.__contains__"]], "__delattr__() (planner.parameter_container.parametercontainer method)": [[43, "planner.parameter_container.ParameterContainer.__delattr__"]], "__getattr__() (planner.parameter_container.parametercontainer method)": [[43, "planner.parameter_container.ParameterContainer.__getattr__"]], "__setattr__() (planner.parameter_container.parametercontainer method)": [[43, "planner.parameter_container.ParameterContainer.__setattr__"]], "__str__() (planner.parameter_container.parametercontainer method)": [[43, "planner.parameter_container.ParameterContainer.__str__"]], "autofill() (planner.parameter_container.parametercontainer method)": [[43, "planner.parameter_container.ParameterContainer.autofill"]], "cache_folder (planner.parameter_container.parametercontainer property)": [[43, "planner.parameter_container.ParameterContainer.cache_folder"]], "concat_list_of_arrays() (planner.parameter_container.parametercontainer method)": [[43, "planner.parameter_container.ParameterContainer.concat_list_of_arrays"]], "data_folder (planner.parameter_container.parametercontainer property)": [[43, "planner.parameter_container.ParameterContainer.data_folder"]], "device (planner.parameter_container.parametercontainer property)": [[43, "planner.parameter_container.ParameterContainer.device"]], "examples_directory (planner.parameter_container.parametercontainer property)": [[43, "planner.parameter_container.ParameterContainer.examples_directory"]], "graph_cache_folder (planner.parameter_container.parametercontainer property)": [[43, "planner.parameter_container.ParameterContainer.graph_cache_folder"]], "list_of_yaml_arrays_to_tensor() (planner.parameter_container.parametercontainer method)": [[43, "planner.parameter_container.ParameterContainer.list_of_yaml_arrays_to_tensor"]], "load_base() (planner.parameter_container.parametercontainer method)": [[43, "planner.parameter_container.ParameterContainer.load_base"]], "load_eigenspaces() (planner.parameter_container.parametercontainer method)": [[43, "planner.parameter_container.ParameterContainer.load_eigenspaces"]], "parse_hardware_parameters() (in module planner.parameter_container)": [[43, "planner.parameter_container.parse_hardware_parameters"]], "planner.parameter_container": [[43, "module-planner.parameter_container"]], "policy_filepath (planner.parameter_container.parametercontainer property)": [[43, "planner.parameter_container.ParameterContainer.policy_filepath"]], "process_scaling() (planner.parameter_container.parametercontainer method)": [[43, "planner.parameter_container.ParameterContainer.process_scaling"]], "reset_seed() (planner.parameter_container.parametercontainer method)": [[43, "planner.parameter_container.ParameterContainer.reset_seed"]], "reward_distance_scaling_sqrt() (planner.parameter_container.parametercontainer method)": [[43, "planner.parameter_container.ParameterContainer.reward_distance_scaling_sqrt"]], "run_autofill_rule() (planner.parameter_container.parametercontainer method)": [[43, "planner.parameter_container.ParameterContainer.run_autofill_rule"]], "set_seed() (planner.parameter_container.parametercontainer method)": [[43, "planner.parameter_container.ParameterContainer.set_seed"]], "state_cache_folder (planner.parameter_container.parametercontainer property)": [[43, "planner.parameter_container.ParameterContainer.state_cache_folder"]], "trajectory_cache_folder (planner.parameter_container.parametercontainer property)": [[43, "planner.parameter_container.ParameterContainer.trajectory_cache_folder"]], "update() (planner.parameter_container.parametercontainer method)": [[43, "planner.parameter_container.ParameterContainer.update"]], "xml_folder (planner.parameter_container.parametercontainer property)": [[43, "planner.parameter_container.ParameterContainer.xml_folder"]], "planner (class in planner.planner)": [[44, "planner.planner.Planner"]], "path_data() (planner.planner.planner method)": [[44, "planner.planner.Planner.path_data"]], "path_trajectory() (planner.planner.planner method)": [[44, "planner.planner.Planner.path_trajectory"]], "planner.planner": [[44, "module-planner.planner"]], "plot_search_results() (planner.planner.planner method)": [[44, "planner.planner.Planner.plot_search_results"]], "search() (planner.planner.planner method)": [[44, "planner.planner.Planner.search"]], "shortest_path_data() (planner.planner.planner method)": [[44, "planner.planner.Planner.shortest_path_data"]], "shortest_path_trajectory() (planner.planner.planner method)": [[44, "planner.planner.Planner.shortest_path_trajectory"]], "is_object_out_of_reach() (in module planner.planner_helpers)": [[45, "planner.planner_helpers.is_object_out_of_reach"]], "is_object_tilted() (in module planner.planner_helpers)": [[45, "planner.planner_helpers.is_object_tilted"]], "planner.planner_helpers": [[45, "module-planner.planner_helpers"]], "torso_too_close_to_object() (in module planner.planner_helpers)": [[45, "planner.planner_helpers.torso_too_close_to_object"]], "absolute_action (planner.types.actionmode attribute)": [[46, "planner.types.ActionMode.ABSOLUTE_ACTION"]], "action_type_directional_map (in module planner.types)": [[46, "planner.types.ACTION_TYPE_DIRECTIONAL_MAP"]], "actionmode (class in planner.types)": [[46, "planner.types.ActionMode"]], "actiontype (class in planner.types)": [[46, "planner.types.ActionType"]], "continuation (planner.types.actiontype attribute)": [[46, "planner.types.ActionType.CONTINUATION"]], "clippingtype (class in planner.types)": [[46, "planner.types.ClippingType"]], "controltype (class in planner.types)": [[46, "planner.types.ControlType"]], "expert (planner.types.actiontype attribute)": [[46, "planner.types.ActionType.EXPERT"]], "first_order_hold (planner.types.controltype attribute)": [[46, "planner.types.ControlType.FIRST_ORDER_HOLD"]], "goal (planner.types.actiontype attribute)": [[46, "planner.types.ActionType.GOAL"]], "last (planner.types.selectiontype attribute)": [[46, "planner.types.SelectionType.LAST"]], "non_expert (planner.types.actiontype attribute)": [[46, "planner.types.ActionType.NON_EXPERT"]], "proximity (planner.types.actiontype attribute)": [[46, "planner.types.ActionType.PROXIMITY"]], "ranged (planner.types.actiontype attribute)": [[46, "planner.types.ActionType.RANGED"]], "relative_to_previous_end_action (planner.types.actionmode attribute)": [[46, "planner.types.ActionMode.RELATIVE_TO_PREVIOUS_END_ACTION"]], "scale (planner.types.clippingtype attribute)": [[46, "planner.types.ClippingType.SCALE"]], "selectiontype (class in planner.types)": [[46, "planner.types.SelectionType"]], "__str__() (planner.types.actionmode method)": [[46, "planner.types.ActionMode.__str__"]], "__str__() (planner.types.actiontype method)": [[46, "planner.types.ActionType.__str__"]], "__str__() (planner.types.clippingtype method)": [[46, "planner.types.ClippingType.__str__"]], "__str__() (planner.types.controltype method)": [[46, "planner.types.ControlType.__str__"]], "__str__() (planner.types.selectiontype method)": [[46, "planner.types.SelectionType.__str__"]], "convert_dtype() (in module planner.types)": [[46, "planner.types.convert_dtype"]], "planner.types": [[46, "module-planner.types"]], "set_default_device_and_dtype() (in module planner.types)": [[46, "planner.types.set_default_device_and_dtype"]], "predictivesampling (class in predictive_sampling)": [[47, "predictive_sampling.PredictiveSampling"]], "predictivesamplingconfig (class in predictive_sampling)": [[47, "predictive_sampling.PredictiveSamplingConfig"]], "action() (predictive_sampling.predictivesampling method)": [[47, "predictive_sampling.PredictiveSampling.action"]], "noise_ramp (predictive_sampling.predictivesamplingconfig attribute)": [[47, "predictive_sampling.PredictiveSamplingConfig.noise_ramp"]], "predictive_sampling": [[47, "module-predictive_sampling"]], "update_action() (predictive_sampling.predictivesampling method)": [[47, "predictive_sampling.PredictiveSampling.update_action"]], "scenes": [[48, "module-scenes"]], "spot_sensors (in module scenes)": [[48, "scenes.spot_sensors"]], "modelelement (class in scenes.scene_composer)": [[49, "scenes.scene_composer.ModelElement"]], "scene (class in scenes.scene_composer)": [[49, "scenes.scene_composer.Scene"]], "spotrobot (class in scenes.scene_composer)": [[49, "scenes.scene_composer.SpotRobot"]], "__getattr__() (scenes.scene_composer.mjbodywrapper method)": [[49, "scenes.scene_composer.mjBodyWrapper.__getattr__"]], "__getitem__() (scenes.scene_composer.modelelement method)": [[49, "scenes.scene_composer.ModelElement.__getitem__"]], "__setattr__() (scenes.scene_composer.mjbodywrapper method)": [[49, "scenes.scene_composer.mjBodyWrapper.__setattr__"]], "attach() (scenes.scene_composer.mjbodywrapper method)": [[49, "scenes.scene_composer.mjBodyWrapper.attach"]], "autoload() (scenes.scene_composer.modelelement static method)": [[49, "scenes.scene_composer.ModelElement.autoload"]], "contacts (scenes.scene_composer.scene attribute)": [[49, "scenes.scene_composer.Scene.contacts"]], "elements (scenes.scene_composer.scene attribute)": [[49, "scenes.scene_composer.Scene.elements"]], "from_file() (scenes.scene_composer.modelelement class method)": [[49, "scenes.scene_composer.ModelElement.from_file"]], "from_string() (scenes.scene_composer.modelelement class method)": [[49, "scenes.scene_composer.ModelElement.from_string"]], "header_includes (scenes.scene_composer.modelelement attribute)": [[49, "scenes.scene_composer.ModelElement.header_includes"]], "load() (scenes.scene_composer.modelelement method)": [[49, "scenes.scene_composer.ModelElement.load"]], "load() (scenes.scene_composer.scene method)": [[49, "scenes.scene_composer.Scene.load"]], "load() (scenes.scene_composer.spotrobot method)": [[49, "scenes.scene_composer.SpotRobot.load"]], "make_default_header_includes() (in module scenes.scene_composer)": [[49, "scenes.scene_composer.make_default_header_includes"]], "mjbodywrapper (class in scenes.scene_composer)": [[49, "scenes.scene_composer.mjBodyWrapper"]], "name (scenes.scene_composer.modelelement attribute)": [[49, "scenes.scene_composer.ModelElement.name"]], "name (scenes.scene_composer.spotrobot attribute)": [[49, "scenes.scene_composer.SpotRobot.name"]], "override() (in module scenes.scene_composer)": [[49, "scenes.scene_composer.override"]], "scenes.scene_composer": [[49, "module-scenes.scene_composer"]], "sensors (scenes.scene_composer.scene attribute)": [[49, "scenes.scene_composer.Scene.sensors"]], "to_xml_file() (scenes.scene_composer.modelelement method)": [[49, "scenes.scene_composer.ModelElement.to_xml_file"]], "to_xml_string() (scenes.scene_composer.modelelement method)": [[49, "scenes.scene_composer.ModelElement.to_xml_string"]], "xml_content (scenes.scene_composer.modelelement attribute)": [[49, "scenes.scene_composer.ModelElement.xml_content"]], "xml_dir (scenes.scene_composer.scene attribute)": [[49, "scenes.scene_composer.Scene.xml_dir"]], "xml_dir (scenes.scene_composer.spotrobot attribute)": [[49, "scenes.scene_composer.SpotRobot.xml_dir"]], "scenes.scene_generator": [[50, "module-scenes.scene_generator"]], "asset_dir (in module scenes.scene_registry)": [[51, "scenes.scene_registry.ASSET_DIR"]], "components_dir (in module scenes.scene_registry)": [[51, "scenes.scene_registry.COMPONENTS_DIR"]], "output_dir (in module scenes.scene_registry)": [[51, "scenes.scene_registry.OUTPUT_DIR"]], "sceneregistry (class in scenes.scene_registry)": [[51, "scenes.scene_registry.SceneRegistry"]], "xml_dir (in module scenes.scene_registry)": [[51, "scenes.scene_registry.XML_DIR"]], "__getitem__() (scenes.scene_registry.sceneregistry method)": [[51, "scenes.scene_registry.SceneRegistry.__getitem__"]], "add() (scenes.scene_registry.sceneregistry method)": [[51, "scenes.scene_registry.SceneRegistry.add"]], "generate() (scenes.scene_registry.sceneregistry method)": [[51, "scenes.scene_registry.SceneRegistry.generate"]], "generate_all() (scenes.scene_registry.sceneregistry method)": [[51, "scenes.scene_registry.SceneRegistry.generate_all"]], "scene_registry (in module scenes.scene_registry)": [[51, "scenes.scene_registry.scene_registry"]], "scenes.scene_registry": [[51, "module-scenes.scene_registry"]], "reset_object_pose (in module spot_box)": [[52, "spot_box.RESET_OBJECT_POSE"]], "spotbox (class in spot_box)": [[52, "spot_box.SpotBox"]], "spotboxconfig (class in spot_box)": [[52, "spot_box.SpotBoxConfig"]], "z_axis (in module spot_box)": [[52, "spot_box.Z_AXIS"]], "actuator_ctrlrange (spot_box.spotbox property)": [[52, "spot_box.SpotBox.actuator_ctrlrange"]], "goal_position (spot_box.spotboxconfig attribute)": [[52, "spot_box.SpotBoxConfig.goal_position"]], "orientation_threshold (spot_box.spotboxconfig attribute)": [[52, "spot_box.SpotBoxConfig.orientation_threshold"]], "reset() (spot_box.spotbox method)": [[52, "spot_box.SpotBox.reset"]], "reward() (spot_box.spotbox method)": [[52, "spot_box.SpotBox.reward"]], "spot_box": [[52, "module-spot_box"]], "w_gripper_proximity (spot_box.spotboxconfig attribute)": [[52, "spot_box.SpotBoxConfig.w_gripper_proximity"]], "w_orientation (spot_box.spotboxconfig attribute)": [[52, "spot_box.SpotBoxConfig.w_orientation"]], "w_torso_proximity (spot_box.spotboxconfig attribute)": [[52, "spot_box.SpotBoxConfig.w_torso_proximity"]], "spothandnavigation (class in spot_hand_navigation)": [[53, "spot_hand_navigation.SpotHandNavigation"]], "spothandnavigationconfig (class in spot_hand_navigation)": [[53, "spot_hand_navigation.SpotHandNavigationConfig"]], "actuator_ctrlrange (spot_hand_navigation.spothandnavigation property)": [[53, "spot_hand_navigation.SpotHandNavigation.actuator_ctrlrange"]], "goal_position (spot_hand_navigation.spothandnavigationconfig attribute)": [[53, "spot_hand_navigation.SpotHandNavigationConfig.goal_position"]], "reset() (spot_hand_navigation.spothandnavigation method)": [[53, "spot_hand_navigation.SpotHandNavigation.reset"]], "reward() (spot_hand_navigation.spothandnavigation method)": [[53, "spot_hand_navigation.SpotHandNavigation.reward"]], "spot_hand_navigation": [[53, "module-spot_hand_navigation"]], "spotnavigation (class in spot_navigation)": [[54, "spot_navigation.SpotNavigation"]], "spotnavigationconfig (class in spot_navigation)": [[54, "spot_navigation.SpotNavigationConfig"]], "actuator_ctrlrange (spot_navigation.spotnavigation property)": [[54, "spot_navigation.SpotNavigation.actuator_ctrlrange"]], "goal_position (spot_navigation.spotnavigationconfig attribute)": [[54, "spot_navigation.SpotNavigationConfig.goal_position"]], "reset() (spot_navigation.spotnavigation method)": [[54, "spot_navigation.SpotNavigation.reset"]], "reward() (spot_navigation.spotnavigation method)": [[54, "spot_navigation.SpotNavigation.reward"]], "spot_navigation": [[54, "module-spot_navigation"]], "reset_object_pose (in module spot_tire)": [[55, "spot_tire.RESET_OBJECT_POSE"]], "spottire (class in spot_tire)": [[55, "spot_tire.SpotTire"]], "spottireconfig (class in spot_tire)": [[55, "spot_tire.SpotTireConfig"]], "tire_goal (in module spot_tire)": [[55, "spot_tire.TIRE_GOAL"]], "tire_height (in module spot_tire)": [[55, "spot_tire.TIRE_HEIGHT"]], "z_axis (in module spot_tire)": [[55, "spot_tire.Z_AXIS"]], "actuator_ctrlrange (spot_tire.spottire property)": [[55, "spot_tire.SpotTire.actuator_ctrlrange"]], "fall_penalty (spot_tire.spottireconfig attribute)": [[55, "spot_tire.SpotTireConfig.fall_penalty"]], "goal_position (spot_tire.spottireconfig attribute)": [[55, "spot_tire.SpotTireConfig.goal_position"]], "goal_tire_pos (spot_tire.spottireconfig attribute)": [[55, "spot_tire.SpotTireConfig.goal_tire_pos"]], "gripper_goal_altitude (spot_tire.spottireconfig attribute)": [[55, "spot_tire.SpotTireConfig.gripper_goal_altitude"]], "gripper_goal_offset (spot_tire.spottireconfig attribute)": [[55, "spot_tire.SpotTireConfig.gripper_goal_offset"]], "reset() (spot_tire.spottire method)": [[55, "spot_tire.SpotTire.reset"]], "reward() (spot_tire.spottire method)": [[55, "spot_tire.SpotTire.reward"]], "spot_tire": [[55, "module-spot_tire"]], "tire_fallen_threshold (spot_tire.spottireconfig attribute)": [[55, "spot_tire.SpotTireConfig.tire_fallen_threshold"]], "torso_goal_offset (spot_tire.spottireconfig attribute)": [[55, "spot_tire.SpotTireConfig.torso_goal_offset"]], "w_gripper_proximity (spot_tire.spottireconfig attribute)": [[55, "spot_tire.SpotTireConfig.w_gripper_proximity"]], "w_leg_proximity (spot_tire.spottireconfig attribute)": [[55, "spot_tire.SpotTireConfig.w_leg_proximity"]], "w_tire_angular_velocity (spot_tire.spottireconfig attribute)": [[55, "spot_tire.SpotTireConfig.w_tire_angular_velocity"]], "w_tire_linear_velocity (spot_tire.spottireconfig attribute)": [[55, "spot_tire.SpotTireConfig.w_tire_linear_velocity"]], "w_torso_proximity (spot_tire.spottireconfig attribute)": [[55, "spot_tire.SpotTireConfig.w_torso_proximity"]], "acrobot (class in tasks.acrobot)": [[56, "tasks.acrobot.Acrobot"]], "acrobotconfig (class in tasks.acrobot)": [[56, "tasks.acrobot.AcrobotConfig"]], "model_path (in module tasks.acrobot)": [[56, "tasks.acrobot.MODEL_PATH"]], "cutoff_time (tasks.acrobot.acrobotconfig attribute)": [[56, "tasks.acrobot.AcrobotConfig.cutoff_time"]], "p_vertical (tasks.acrobot.acrobotconfig attribute)": [[56, "tasks.acrobot.AcrobotConfig.p_vertical"]], "reset() (tasks.acrobot.acrobot method)": [[56, "tasks.acrobot.Acrobot.reset"]], "tasks.acrobot": [[56, "module-tasks.acrobot"]], "w_control (tasks.acrobot.acrobotconfig attribute)": [[56, "tasks.acrobot.AcrobotConfig.w_control"]], "w_velocity (tasks.acrobot.acrobotconfig attribute)": [[56, "tasks.acrobot.AcrobotConfig.w_velocity"]], "w_vertical (tasks.acrobot.acrobotconfig attribute)": [[56, "tasks.acrobot.AcrobotConfig.w_vertical"]], "cartpole (class in tasks.cartpole)": [[57, "tasks.cartpole.Cartpole"]], "cartpoleconfig (class in tasks.cartpole)": [[57, "tasks.cartpole.CartpoleConfig"]], "model_path (in module tasks.cartpole)": [[57, "tasks.cartpole.MODEL_PATH"]], "cutoff_time (tasks.cartpole.cartpoleconfig attribute)": [[57, "tasks.cartpole.CartpoleConfig.cutoff_time"]], "is_terminated() (tasks.cartpole.cartpole method)": [[57, "tasks.cartpole.Cartpole.is_terminated"]], "p_centered (tasks.cartpole.cartpoleconfig attribute)": [[57, "tasks.cartpole.CartpoleConfig.p_centered"]], "p_vertical (tasks.cartpole.cartpoleconfig attribute)": [[57, "tasks.cartpole.CartpoleConfig.p_vertical"]], "reset() (tasks.cartpole.cartpole method)": [[57, "tasks.cartpole.Cartpole.reset"]], "tasks.cartpole": [[57, "module-tasks.cartpole"]], "w_centered (tasks.cartpole.cartpoleconfig attribute)": [[57, "tasks.cartpole.CartpoleConfig.w_centered"]], "w_control (tasks.cartpole.cartpoleconfig attribute)": [[57, "tasks.cartpole.CartpoleConfig.w_control"]], "w_velocity (tasks.cartpole.cartpoleconfig attribute)": [[57, "tasks.cartpole.CartpoleConfig.w_velocity"]], "w_vertical (tasks.cartpole.cartpoleconfig attribute)": [[57, "tasks.cartpole.CartpoleConfig.w_vertical"]], "quadratic_norm() (in module tasks.cost_functions)": [[58, "tasks.cost_functions.quadratic_norm"]], "smooth_l1_norm() (in module tasks.cost_functions)": [[58, "tasks.cost_functions.smooth_l1_norm"]], "tasks.cost_functions": [[58, "module-tasks.cost_functions"]], "cylinderpush (class in tasks.cylinder_push)": [[59, "tasks.cylinder_push.CylinderPush"]], "cylinderpushconfig (class in tasks.cylinder_push)": [[59, "tasks.cylinder_push.CylinderPushConfig"]], "model_path (in module tasks.cylinder_push)": [[59, "tasks.cylinder_push.MODEL_PATH"]], "cart_goal_position (tasks.cylinder_push.cylinderpushconfig attribute)": [[59, "tasks.cylinder_push.CylinderPushConfig.cart_goal_position"]], "cutoff_time (tasks.cylinder_push.cylinderpushconfig attribute)": [[59, "tasks.cylinder_push.CylinderPushConfig.cutoff_time"]], "pusher_goal_offset (tasks.cylinder_push.cylinderpushconfig attribute)": [[59, "tasks.cylinder_push.CylinderPushConfig.pusher_goal_offset"]], "reset() (tasks.cylinder_push.cylinderpush method)": [[59, "tasks.cylinder_push.CylinderPush.reset"]], "tasks.cylinder_push": [[59, "module-tasks.cylinder_push"]], "w_cart_position (tasks.cylinder_push.cylinderpushconfig attribute)": [[59, "tasks.cylinder_push.CylinderPushConfig.w_cart_position"]], "w_pusher_proximity (tasks.cylinder_push.cylinderpushconfig attribute)": [[59, "tasks.cylinder_push.CylinderPushConfig.w_pusher_proximity"]], "w_pusher_velocity (tasks.cylinder_push.cylinderpushconfig attribute)": [[59, "tasks.cylinder_push.CylinderPushConfig.w_pusher_velocity"]], "get_registered_tasks() (in module tasks)": [[60, "tasks.get_registered_tasks"]], "register_task() (in module tasks)": [[60, "tasks.register_task"]], "tasks": [[60, "module-tasks"]], "mujocotask (class in tasks.mujoco_task)": [[61, "tasks.mujoco_task.MujocoTask"]], "actuator_ctrlrange (tasks.mujoco_task.mujocotask property)": [[61, "tasks.mujoco_task.MujocoTask.actuator_ctrlrange"]], "create_visualization() (tasks.mujoco_task.mujocotask method)": [[61, "tasks.mujoco_task.MujocoTask.create_visualization"]], "default_idle_command (tasks.mujoco_task.mujocotask property)": [[61, "tasks.mujoco_task.MujocoTask.default_idle_command"]], "dt (tasks.mujoco_task.mujocotask property)": [[61, "tasks.mujoco_task.MujocoTask.dt"]], "is_terminated() (tasks.mujoco_task.mujocotask method)": [[61, "tasks.mujoco_task.MujocoTask.is_terminated"]], "make_models() (tasks.mujoco_task.mujocotask method)": [[61, "tasks.mujoco_task.MujocoTask.make_models"]], "nu (tasks.mujoco_task.mujocotask property)": [[61, "tasks.mujoco_task.MujocoTask.nu"]], "reset() (tasks.mujoco_task.mujocotask method)": [[61, "tasks.mujoco_task.MujocoTask.reset"]], "rollout() (tasks.mujoco_task.mujocotask method)": [[61, "tasks.mujoco_task.MujocoTask.rollout"]], "sim_step() (tasks.mujoco_task.mujocotask method)": [[61, "tasks.mujoco_task.MujocoTask.sim_step"]], "tasks.mujoco_task": [[61, "module-tasks.mujoco_task"]], "configt (in module tasks.spot_base)": [[62, "tasks.spot_base.ConfigT"]], "default_spot_rollout_cutoff_time (in module tasks.spot_base)": [[62, "tasks.spot_base.DEFAULT_SPOT_ROLLOUT_CUTOFF_TIME"]], "goal_positions (in module tasks.spot_base)": [[62, "tasks.spot_base.GOAL_POSITIONS"]], "spotbase (class in tasks.spot_base)": [[62, "tasks.spot_base.SpotBase"]], "spotbaseconfig (class in tasks.spot_base)": [[62, "tasks.spot_base.SpotBaseConfig"]], "cutoff_time (tasks.spot_base.spotbaseconfig attribute)": [[62, "tasks.spot_base.SpotBaseConfig.cutoff_time"]], "default_idle_command (tasks.spot_base.spotbase property)": [[62, "tasks.spot_base.SpotBase.default_idle_command"]], "fall_penalty (tasks.spot_base.spotbaseconfig attribute)": [[62, "tasks.spot_base.SpotBaseConfig.fall_penalty"]], "make_models() (tasks.spot_base.spotbase method)": [[62, "tasks.spot_base.SpotBase.make_models"]], "rollout() (tasks.spot_base.spotbase method)": [[62, "tasks.spot_base.SpotBase.rollout"]], "sim_step() (tasks.spot_base.spotbase method)": [[62, "tasks.spot_base.SpotBase.sim_step"]], "spot_fallen_threshold (tasks.spot_base.spotbaseconfig attribute)": [[62, "tasks.spot_base.SpotBaseConfig.spot_fallen_threshold"]], "tasks.spot_base": [[62, "module-tasks.spot_base"]], "w_goal (tasks.spot_base.spotbaseconfig attribute)": [[62, "tasks.spot_base.SpotBaseConfig.w_goal"]], "w_proximity (tasks.spot_base.spotbaseconfig attribute)": [[62, "tasks.spot_base.SpotBaseConfig.w_proximity"]], "w_vel (tasks.spot_base.spotbaseconfig attribute)": [[62, "tasks.spot_base.SpotBaseConfig.w_vel"]], "model_path (in module tasks.spot_position_control)": [[63, "tasks.spot_position_control.MODEL_PATH"]], "spotpositioncontrol (class in tasks.spot_position_control)": [[63, "tasks.spot_position_control.SpotPositionControl"]], "spotpositioncontrolconfig (class in tasks.spot_position_control)": [[63, "tasks.spot_position_control.SpotPositionControlConfig"]], "default_command (tasks.spot_position_control.spotpositioncontrolconfig attribute)": [[63, "tasks.spot_position_control.SpotPositionControlConfig.default_command"]], "reset() (tasks.spot_position_control.spotpositioncontrol method)": [[63, "tasks.spot_position_control.SpotPositionControl.reset"]], "tasks.spot_position_control": [[63, "module-tasks.spot_position_control"]], "w_arms (tasks.spot_position_control.spotpositioncontrolconfig attribute)": [[63, "tasks.spot_position_control.SpotPositionControlConfig.w_arms"]], "w_forward (tasks.spot_position_control.spotpositioncontrolconfig attribute)": [[63, "tasks.spot_position_control.SpotPositionControlConfig.w_forward"]], "w_legs (tasks.spot_position_control.spotpositioncontrolconfig attribute)": [[63, "tasks.spot_position_control.SpotPositionControlConfig.w_legs"]], "configt (in module tasks.task)": [[64, "tasks.task.ConfigT"]], "modelt (in module tasks.task)": [[64, "tasks.task.ModelT"]], "task (class in tasks.task)": [[64, "tasks.task.Task"]], "taskconfig (class in tasks.task)": [[64, "tasks.task.TaskConfig"]], "actuator_ctrlrange (tasks.task.task property)": [[64, "tasks.task.Task.actuator_ctrlrange"]], "additional_task_info (tasks.task.task property)": [[64, "tasks.task.Task.additional_task_info"]], "create_visualization() (tasks.task.task method)": [[64, "tasks.task.Task.create_visualization"]], "dt (tasks.task.task property)": [[64, "tasks.task.Task.dt"]], "is_terminated() (tasks.task.task method)": [[64, "tasks.task.Task.is_terminated"]], "make_models() (tasks.task.task method)": [[64, "tasks.task.Task.make_models"]], "reset() (tasks.task.task method)": [[64, "tasks.task.Task.reset"]], "reward() (tasks.task.task method)": [[64, "tasks.task.Task.reward"]], "rollout() (tasks.task.task method)": [[64, "tasks.task.Task.rollout"]], "sim_step() (tasks.task.task method)": [[64, "tasks.task.Task.sim_step"]], "tasks.task": [[64, "module-tasks.task"]], "controlprocess (class in viser_app.app)": [[65, "viser_app.app.ControlProcess"]], "jacta_manipulation_path (in module viser_app.app)": [[65, "viser_app.app.JACTA_MANIPULATION_PATH"]], "simulationprocess (class in viser_app.app)": [[65, "viser_app.app.SimulationProcess"]], "viserapp (class in viser_app.app)": [[65, "viser_app.app.ViserApp"]], "config_download_callback() (viser_app.app.viserapp method)": [[65, "viser_app.app.ViserApp.config_download_callback"]], "control_cycle_callback() (viser_app.app.viserapp method)": [[65, "viser_app.app.ViserApp.control_cycle_callback"]], "control_loop() (viser_app.app.controlprocess method)": [[65, "viser_app.app.ControlProcess.control_loop"]], "control_selection_callback() (viser_app.app.viserapp method)": [[65, "viser_app.app.ViserApp.control_selection_callback"]], "enable_profiling_callback() (viser_app.app.viserapp method)": [[65, "viser_app.app.ViserApp.enable_profiling_callback"]], "remove() (viser_app.app.controlprocess method)": [[65, "viser_app.app.ControlProcess.remove"]], "reset() (viser_app.app.simulationprocess method)": [[65, "viser_app.app.SimulationProcess.reset"]], "set_profiler_recording() (viser_app.app.controlprocess method)": [[65, "viser_app.app.ControlProcess.set_profiler_recording"]], "setup_context() (viser_app.app.viserapp method)": [[65, "viser_app.app.ViserApp.setup_context"]], "setup_controller() (viser_app.app.viserapp method)": [[65, "viser_app.app.ViserApp.setup_controller"]], "setup_physics() (viser_app.app.viserapp method)": [[65, "viser_app.app.ViserApp.setup_physics"]], "setup_task() (viser_app.app.viserapp method)": [[65, "viser_app.app.ViserApp.setup_task"]], "setup_visualization() (viser_app.app.viserapp method)": [[65, "viser_app.app.ViserApp.setup_visualization"]], "simulation_cycle_callback() (viser_app.app.viserapp method)": [[65, "viser_app.app.ViserApp.simulation_cycle_callback"]], "simulation_reset_callback() (viser_app.app.viserapp method)": [[65, "viser_app.app.ViserApp.simulation_reset_callback"]], "task_selection_callback() (viser_app.app.viserapp method)": [[65, "viser_app.app.ViserApp.task_selection_callback"]], "terminate() (viser_app.app.controlprocess method)": [[65, "viser_app.app.ControlProcess.terminate"]], "viser_app.app": [[65, "module-viser_app.app"]], "write_controls() (viser_app.app.controlprocess method)": [[65, "viser_app.app.ControlProcess.write_controls"]], "write_states() (viser_app.app.simulationprocess method)": [[65, "viser_app.app.SimulationProcess.write_states"]], "write_traces() (viser_app.app.controlprocess method)": [[65, "viser_app.app.ControlProcess.write_traces"]], "default_slider_step_float (in module viser_app.gui)": [[66, "viser_app.gui.DEFAULT_SLIDER_STEP_FLOAT"]], "default_slider_step_int (in module viser_app.gui)": [[66, "viser_app.gui.DEFAULT_SLIDER_STEP_INT"]], "goal_radius (in module viser_app.gui)": [[66, "viser_app.gui.GOAL_RADIUS"]], "create_gui_elements() (in module viser_app.gui)": [[66, "viser_app.gui.create_gui_elements"]], "slider() (in module viser_app.gui)": [[66, "viser_app.gui.slider"]], "viser_app.gui": [[66, "module-viser_app.gui"]], "viser_app": [[67, "module-viser_app"]], "hardwareiocontext (class in viser_app.io)": [[68, "viser_app.io.HardwareIOContext"]], "iocontext (class in viser_app.io)": [[68, "viser_app.io.IOContext"]], "simulationiocontext (class in viser_app.io)": [[68, "viser_app.io.SimulationIOContext"]], "viser_app.io": [[68, "module-viser_app.io"]], "configencoder (class in viser_app.json_serializer)": [[69, "viser_app.json_serializer.ConfigEncoder"]], "decode_config() (in module viser_app.json_serializer)": [[69, "viser_app.json_serializer.decode_config"]], "viser_app.json_serializer": [[69, "module-viser_app.json_serializer"]], "viserprofiler (class in viser_app.profiler)": [[70, "viser_app.profiler.ViserProfiler"]], "viserprofilerconfig (class in viser_app.profiler)": [[70, "viser_app.profiler.ViserProfilerConfig"]], "benchmark_wrapper() (viser_app.profiler.viserprofiler method)": [[70, "viser_app.profiler.ViserProfiler.benchmark_wrapper"]], "viser_app.profiler": [[70, "module-viser_app.profiler"]], "visuals": [[71, "module-visuals"]], "meshphysicalmaterial (class in visuals.meshcat_visualizer)": [[72, "visuals.meshcat_visualizer.MeshPhysicalMaterial"]], "meshtoonmaterial (class in visuals.meshcat_visualizer)": [[72, "visuals.meshcat_visualizer.MeshToonMaterial"]], "plane (class in visuals.meshcat_visualizer)": [[72, "visuals.meshcat_visualizer.Plane"]], "setpropertycapital (class in visuals.meshcat_visualizer)": [[72, "visuals.meshcat_visualizer.SetPropertyCapital"]], "add_box() (in module visuals.meshcat_visualizer)": [[72, "visuals.meshcat_visualizer.add_box"]], "add_capsule() (in module visuals.meshcat_visualizer)": [[72, "visuals.meshcat_visualizer.add_capsule"]], "add_cylinder() (in module visuals.meshcat_visualizer)": [[72, "visuals.meshcat_visualizer.add_cylinder"]], "add_ellipsoid() (in module visuals.meshcat_visualizer)": [[72, "visuals.meshcat_visualizer.add_ellipsoid"]], "add_ground() (in module visuals.meshcat_visualizer)": [[72, "visuals.meshcat_visualizer.add_ground"]], "add_mesh() (in module visuals.meshcat_visualizer)": [[72, "visuals.meshcat_visualizer.add_mesh"]], "add_mesh_by_name() (in module visuals.meshcat_visualizer)": [[72, "visuals.meshcat_visualizer.add_mesh_by_name"]], "add_object() (in module visuals.meshcat_visualizer)": [[72, "visuals.meshcat_visualizer.add_object"]], "add_plane() (in module visuals.meshcat_visualizer)": [[72, "visuals.meshcat_visualizer.add_plane"]], "add_sphere() (in module visuals.meshcat_visualizer)": [[72, "visuals.meshcat_visualizer.add_sphere"]], "close_window() (in module visuals.meshcat_visualizer)": [[72, "visuals.meshcat_visualizer.close_window"]], "lower() (visuals.meshcat_visualizer.setpropertycapital method)": [[72, "visuals.meshcat_visualizer.SetPropertyCapital.lower"]], "rgb_float_to_hex() (in module visuals.meshcat_visualizer)": [[72, "visuals.meshcat_visualizer.rgb_float_to_hex"]], "rgb_int_to_hex() (in module visuals.meshcat_visualizer)": [[72, "visuals.meshcat_visualizer.rgb_int_to_hex"]], "rgba_overwrite() (in module visuals.meshcat_visualizer)": [[72, "visuals.meshcat_visualizer.rgba_overwrite"]], "set_color() (in module visuals.meshcat_visualizer)": [[72, "visuals.meshcat_visualizer.set_color"]], "set_object() (in module visuals.meshcat_visualizer)": [[72, "visuals.meshcat_visualizer.set_object"]], "set_property_capital() (in module visuals.meshcat_visualizer)": [[72, "visuals.meshcat_visualizer.set_property_capital"]], "setup_visualizer() (in module visuals.meshcat_visualizer)": [[72, "visuals.meshcat_visualizer.setup_visualizer"]], "visuals.meshcat_visualizer": [[72, "module-visuals.meshcat_visualizer"]], "default_colors (in module visuals.mujoco_visualizer)": [[73, "visuals.mujoco_visualizer.DEFAULT_COLORS"]], "mujocorenderer (class in visuals.mujoco_visualizer)": [[73, "visuals.mujoco_visualizer.MujocoRenderer"]], "rgba (in module visuals.mujoco_visualizer)": [[73, "visuals.mujoco_visualizer.RGBA"]], "trajectory (in module visuals.mujoco_visualizer)": [[73, "visuals.mujoco_visualizer.Trajectory"]], "add_marker() (visuals.mujoco_visualizer.mujocorenderer method)": [[73, "visuals.mujoco_visualizer.MujocoRenderer.add_marker"]], "animate_marker() (visuals.mujoco_visualizer.mujocorenderer method)": [[73, "visuals.mujoco_visualizer.MujocoRenderer.animate_marker"]], "extract_joint_positions() (visuals.mujoco_visualizer.mujocorenderer method)": [[73, "visuals.mujoco_visualizer.MujocoRenderer.extract_joint_positions"]], "framerate (visuals.mujoco_visualizer.mujocorenderer property)": [[73, "visuals.mujoco_visualizer.MujocoRenderer.framerate"]], "get_html() (visuals.mujoco_visualizer.mujocorenderer method)": [[73, "visuals.mujoco_visualizer.MujocoRenderer.get_html"]], "init_ee_position() (visuals.mujoco_visualizer.mujocorenderer method)": [[73, "visuals.mujoco_visualizer.MujocoRenderer.init_ee_position"]], "init_points() (visuals.mujoco_visualizer.mujocorenderer method)": [[73, "visuals.mujoco_visualizer.MujocoRenderer.init_points"]], "initialize_candidate_trajectories() (visuals.mujoco_visualizer.mujocorenderer method)": [[73, "visuals.mujoco_visualizer.MujocoRenderer.initialize_candidate_trajectories"]], "initialize_markers() (visuals.mujoco_visualizer.mujocorenderer method)": [[73, "visuals.mujoco_visualizer.MujocoRenderer.initialize_markers"]], "load_model() (visuals.mujoco_visualizer.mujocorenderer method)": [[73, "visuals.mujoco_visualizer.MujocoRenderer.load_model"]], "play() (visuals.mujoco_visualizer.mujocorenderer method)": [[73, "visuals.mujoco_visualizer.MujocoRenderer.play"]], "render() (visuals.mujoco_visualizer.mujocorenderer method)": [[73, "visuals.mujoco_visualizer.MujocoRenderer.render"]], "reset() (visuals.mujoco_visualizer.mujocorenderer method)": [[73, "visuals.mujoco_visualizer.MujocoRenderer.reset"]], "save() (visuals.mujoco_visualizer.mujocorenderer method)": [[73, "visuals.mujoco_visualizer.MujocoRenderer.save"]], "set_marker() (visuals.mujoco_visualizer.mujocorenderer method)": [[73, "visuals.mujoco_visualizer.MujocoRenderer.set_marker"]], "set_model() (visuals.mujoco_visualizer.mujocorenderer method)": [[73, "visuals.mujoco_visualizer.MujocoRenderer.set_model"]], "show() (visuals.mujoco_visualizer.mujocorenderer method)": [[73, "visuals.mujoco_visualizer.MujocoRenderer.show"]], "show_box_goal() (visuals.mujoco_visualizer.mujocorenderer method)": [[73, "visuals.mujoco_visualizer.MujocoRenderer.show_box_goal"]], "show_goal() (visuals.mujoco_visualizer.mujocorenderer method)": [[73, "visuals.mujoco_visualizer.MujocoRenderer.show_goal"]], "show_trajectory() (visuals.mujoco_visualizer.mujocorenderer method)": [[73, "visuals.mujoco_visualizer.MujocoRenderer.show_trajectory"]], "update_candidate_trajectories() (visuals.mujoco_visualizer.mujocorenderer method)": [[73, "visuals.mujoco_visualizer.MujocoRenderer.update_candidate_trajectories"]], "update_ee_position() (visuals.mujoco_visualizer.mujocorenderer method)": [[73, "visuals.mujoco_visualizer.MujocoRenderer.update_ee_position"]], "update_markers() (visuals.mujoco_visualizer.mujocorenderer method)": [[73, "visuals.mujoco_visualizer.MujocoRenderer.update_markers"]], "update_points() (visuals.mujoco_visualizer.mujocorenderer method)": [[73, "visuals.mujoco_visualizer.MujocoRenderer.update_points"]], "visuals.mujoco_visualizer": [[73, "module-visuals.mujoco_visualizer"]], "wait_for_input() (visuals.mujoco_visualizer.mujocorenderer method)": [[73, "visuals.mujoco_visualizer.MujocoRenderer.wait_for_input"]], "action_inverse() (in module visuals.quaternion_operations)": [[74, "visuals.quaternion_operations.action_inverse"]], "left_action() (in module visuals.quaternion_operations)": [[74, "visuals.quaternion_operations.left_action"]], "pose_to_transformation_matrix() (in module visuals.quaternion_operations)": [[74, "visuals.quaternion_operations.pose_to_transformation_matrix"]], "project_action() (in module visuals.quaternion_operations)": [[74, "visuals.quaternion_operations.project_action"]], "quaternion_inverse() (in module visuals.quaternion_operations)": [[74, "visuals.quaternion_operations.quaternion_inverse"]], "quaternion_to_quaternion_map_jacobian() (in module visuals.quaternion_operations)": [[74, "visuals.quaternion_operations.quaternion_to_quaternion_map_jacobian"]], "quaternion_to_transformation_matrix() (in module visuals.quaternion_operations)": [[74, "visuals.quaternion_operations.quaternion_to_transformation_matrix"]], "right_action() (in module visuals.quaternion_operations)": [[74, "visuals.quaternion_operations.right_action"]], "rotation_matrix() (in module visuals.quaternion_operations)": [[74, "visuals.quaternion_operations.rotation_matrix"]], "skew_symmetric() (in module visuals.quaternion_operations)": [[74, "visuals.quaternion_operations.skew_symmetric"]], "vector_projection() (in module visuals.quaternion_operations)": [[74, "visuals.quaternion_operations.vector_projection"]], "visuals.quaternion_operations": [[74, "module-visuals.quaternion_operations"]]}})