Search.setIndex({"docnames": ["api/benchmarking/benchmarking/index", "api/benchmarking/index", "api/benchmarking/profiling/index", "api/cmaes/index", "api/controllers/controller/index", "api/controllers/index", "api/controllers/sampling_base/index", "api/cross_entropy_method/index", "api/dynamics/action_trajectory/index", "api/dynamics/index", "api/dynamics/locomotion_plant/index", "api/dynamics/mujoco_dynamics/index", "api/dynamics/mujoco_utils/index", "api/dynamics/state_helpers/index", "api/environments/base/index", "api/environments/index", "api/environments/tire_state_cache_generator/index", "api/experts/expert/index", "api/experts/expert_sampler/index", "api/experts/index", "api/experts/network/index", "api/experts/primitive/index", "api/experts/primitives/index", "api/experts/primitives/spot_standing_box/index", "api/learning/index", "api/learning/learner/index", "api/learning/networks/index", "api/learning/normalizer/index", "api/learning/replay_buffer/index", "api/mppi/index", "api/particle_filter/index", "api/path_resolvers/index", "api/planner/action_processor/index", "api/planner/action_sampler/index", "api/planner/clipping_method/index", "api/planner/data_collection/index", "api/planner/graph/index", "api/planner/graph_visuals/index", "api/planner/graph_worker/index", "api/planner/index", "api/planner/linear_algebra/index", "api/planner/logger/index", "api/planner/parameter_container/index", "api/planner/planner/index", "api/planner/planner_helpers/index", "api/planner/types/index", "api/predictive_sampling/index", "api/scenes/index", "api/scenes/scene_composer/index", "api/scenes/scene_generator/index", "api/scenes/scene_registry/index", "api/spot_box/index", "api/spot_hand_navigation/index", "api/spot_navigation/index", "api/spot_tire/index", "api/tasks/acrobot/index", "api/tasks/cartpole/index", "api/tasks/cost_functions/index", "api/tasks/cylinder_push/index", "api/tasks/index", "api/tasks/mujoco_task/index", "api/tasks/spot_base/index", "api/tasks/spot_position_control/index", "api/tasks/task/index", "api/viser_app/app/index", "api/viser_app/gui/index", "api/viser_app/index", "api/viser_app/io/index", "api/viser_app/json_serializer/index", "api/viser_app/profiler/index", "api/visuals/index", "api/visuals/meshcat_visualizer/index", "api/visuals/mujoco_visualizer/index", "api/visuals/quaternion_operations/index", "index"], "filenames": ["api/benchmarking/benchmarking/index.rst", "api/benchmarking/index.rst", "api/benchmarking/profiling/index.rst", "api/cmaes/index.rst", "api/controllers/controller/index.rst", "api/controllers/index.rst", "api/controllers/sampling_base/index.rst", "api/cross_entropy_method/index.rst", "api/dynamics/action_trajectory/index.rst", "api/dynamics/index.rst", "api/dynamics/locomotion_plant/index.rst", "api/dynamics/mujoco_dynamics/index.rst", "api/dynamics/mujoco_utils/index.rst", "api/dynamics/state_helpers/index.rst", "api/environments/base/index.rst", "api/environments/index.rst", "api/environments/tire_state_cache_generator/index.rst", "api/experts/expert/index.rst", "api/experts/expert_sampler/index.rst", "api/experts/index.rst", "api/experts/network/index.rst", "api/experts/primitive/index.rst", "api/experts/primitives/index.rst", "api/experts/primitives/spot_standing_box/index.rst", "api/learning/index.rst", "api/learning/learner/index.rst", "api/learning/networks/index.rst", "api/learning/normalizer/index.rst", "api/learning/replay_buffer/index.rst", "api/mppi/index.rst", "api/particle_filter/index.rst", "api/path_resolvers/index.rst", "api/planner/action_processor/index.rst", "api/planner/action_sampler/index.rst", "api/planner/clipping_method/index.rst", "api/planner/data_collection/index.rst", "api/planner/graph/index.rst", "api/planner/graph_visuals/index.rst", "api/planner/graph_worker/index.rst", "api/planner/index.rst", "api/planner/linear_algebra/index.rst", "api/planner/logger/index.rst", "api/planner/parameter_container/index.rst", "api/planner/planner/index.rst", "api/planner/planner_helpers/index.rst", "api/planner/types/index.rst", "api/predictive_sampling/index.rst", "api/scenes/index.rst", "api/scenes/scene_composer/index.rst", "api/scenes/scene_generator/index.rst", "api/scenes/scene_registry/index.rst", "api/spot_box/index.rst", "api/spot_hand_navigation/index.rst", "api/spot_navigation/index.rst", "api/spot_tire/index.rst", "api/tasks/acrobot/index.rst", "api/tasks/cartpole/index.rst", "api/tasks/cost_functions/index.rst", "api/tasks/cylinder_push/index.rst", "api/tasks/index.rst", "api/tasks/mujoco_task/index.rst", "api/tasks/spot_base/index.rst", "api/tasks/spot_position_control/index.rst", "api/tasks/task/index.rst", "api/viser_app/app/index.rst", "api/viser_app/gui/index.rst", "api/viser_app/index.rst", "api/viser_app/io/index.rst", "api/viser_app/json_serializer/index.rst", "api/viser_app/profiler/index.rst", "api/visuals/index.rst", "api/visuals/meshcat_visualizer/index.rst", "api/visuals/mujoco_visualizer/index.rst", "api/visuals/quaternion_operations/index.rst", "index.md"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">benchmarking.benchmarking</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">benchmarking</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">benchmarking.profiling</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cmaes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">controllers.controller</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">controllers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">controllers.sampling_base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cross_entropy_method</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dynamics.action_trajectory</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dynamics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dynamics.locomotion_plant</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dynamics.mujoco_dynamics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dynamics.mujoco_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dynamics.state_helpers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">environments.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">environments</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">environments.tire_state_cache_generator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">experts.expert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">experts.expert_sampler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">experts</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">experts.network</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">experts.primitive</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">experts.primitives</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">experts.primitives.spot_standing_box</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">learning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">learning.learner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">learning.networks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">learning.normalizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">learning.replay_buffer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mppi</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">particle_filter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">path_resolvers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.action_processor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.action_sampler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.clipping_method</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.data_collection</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.graph_visuals</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.graph_worker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.linear_algebra</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.parameter_container</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.planner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.planner_helpers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">planner.types</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">predictive_sampling</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">scenes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">scenes.scene_composer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">scenes.scene_generator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">scenes.scene_registry</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spot_box</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spot_hand_navigation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spot_navigation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spot_tire</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tasks.acrobot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tasks.cartpole</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tasks.cost_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tasks.cylinder_push</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tasks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tasks.mujoco_task</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tasks.spot_base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tasks.spot_position_control</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tasks.task</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.app</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.gui</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.io</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.json_serializer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viser_app.profiler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">visuals</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">visuals.meshcat_visualizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">visuals.mujoco_visualizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">visuals.quaternion_operations</span></code>", "jacta-manipulation"], "terms": {"allow": [0, 2, 6, 44], "user": [0, 2, 45, 71, 72], "planner": [0, 1, 2, 3, 7, 8, 10, 11, 14, 16, 17, 18, 20, 21, 23, 25, 28, 29, 30, 46, 72], "instanc": [0, 1, 2, 48, 64], "class": [0, 3, 4, 6, 7, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 25, 26, 27, 28, 29, 30, 32, 33, 36, 38, 41, 42, 43, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 67, 68, 69, 71, 72], "list": [0, 12, 14, 16, 21, 37, 42, 45, 48, 55, 56, 58, 60, 61, 62, 63, 65, 71, 72, 73], "jactamanipul": [0, 3, 5, 6, 7, 8, 10, 11, 14, 16, 17, 18, 20, 21, 23, 25, 26, 28, 29, 30, 32, 33, 35, 36, 37, 38, 41, 43, 46, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 72], "seed": [0, 42], "torch": [0, 8, 10, 11, 14, 16, 17, 18, 20, 21, 25, 26, 27, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 72], "inttensor": [0, 11, 14, 17, 18, 20, 21, 32, 33, 36, 38, 40, 41], "none": [0, 2, 3, 4, 5, 6, 7, 10, 11, 14, 16, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 71, 72, 73], "name": [0, 5, 12, 37, 42, 48, 50, 59, 71, 72], "verbos": [0, 25, 38, 43], "bool": [0, 2, 6, 16, 20, 25, 35, 36, 37, 38, 42, 43, 44, 56, 60, 63, 64, 69, 71, 72], "fals": [0, 6, 16, 25, 36, 38, 43, 44, 64, 68, 69, 71, 72], "py": [0, 3, 4, 6, 7, 10, 11, 13, 14, 16, 17, 18, 20, 21, 25, 26, 27, 28, 29, 30, 32, 33, 36, 38, 41, 42, 43, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 68, 69, 71], "method": [0, 4, 6, 7, 10, 11, 17, 18, 20, 21, 26, 27, 28, 30, 33, 38, 40, 41, 43, 50, 55, 56, 58, 60, 62, 63, 64, 68, 69, 71, 72], "run_benchmark": 0, "iter": [0, 21, 38, 41, 65], "over": [0, 21, 55, 56, 58, 62], "run": [0, 2, 10, 25, 26, 42, 64], "them": [0, 21, 40, 72], "each": [0, 23, 33, 37, 40, 55, 56, 58, 61, 62, 72], "sequenti": 0, "paramet": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 63, 64, 65, 67, 69, 71, 72, 73], "option": [0, 11, 32, 34, 36, 37, 38, 42, 45, 55, 56, 58, 61, 64, 65, 69, 71, 72, 73], "print_result": 0, "print": [0, 38, 64], "distanc": [0, 11, 25, 33, 36, 38, 41, 42, 44, 55, 56, 58, 62], "time": [0, 3, 4, 6, 7, 11, 25, 29, 30, 40, 41, 43, 46, 55, 56, 58, 62], "pre": [0, 25], "prune": [0, 41], "node": [0, 21, 27, 33, 36, 37, 38, 41, 43, 45], "post": [0, 14], "trajectori": [0, 8, 10, 11, 12, 21, 23, 25, 32, 33, 42, 43, 72], "length": [0, 4, 6, 8, 11, 38, 71], "after": [0, 14, 36, 38, 72], "call": [0, 11, 14, 32, 38, 61, 69, 72], "return": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 71, 72, 73], "type": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 71, 72, 73], "visualize_result": 0, "planner_indic": 0, "meshcat": [0, 12, 37, 71, 72], "visual": [0, 37, 60, 63, 64], "result": [0, 8, 11, 12, 43, 64, 73], "profil": [1, 64, 66], "run_exampl": 2, "example_typ": 2, "str": [2, 3, 4, 5, 6, 7, 11, 12, 14, 16, 20, 21, 23, 28, 29, 30, 31, 35, 36, 37, 41, 42, 45, 46, 48, 50, 59, 60, 61, 63, 64, 65, 69, 71, 72], "example_nam": 2, "test_mod": 2, "true": [2, 6, 16, 20, 25, 36, 37, 38, 44, 68, 71, 72], "ani": [2, 3, 4, 6, 7, 14, 26, 27, 29, 30, 42, 45, 46, 48, 50, 55, 56, 60, 61, 63, 65, 69, 71, 72], "perform": [2, 3, 7, 14, 25, 26, 29, 30, 34, 38, 46, 63, 64], "given": [2, 11, 12, 14, 16, 21, 23, 25, 26, 32, 36, 40, 44, 71, 72, 73], "task": [2, 3, 6, 7, 14, 16, 25, 29, 30, 46, 51, 52, 53, 54, 64], "can": [2, 21, 63, 64, 65, 72], "planner_single_go": 2, "planner_multi_go": 2, "planner_explor": 2, "floating_hand": 2, "proximity_optim": 2, "allegro_hand": 2, "test": 2, "mode": [2, 26, 45], "thi": [2, 11, 14, 36, 38, 40, 44, 48, 51, 52, 53, 54, 60, 61, 63, 64, 71, 72, 73], "i": [2, 4, 6, 14, 21, 23, 25, 26, 27, 33, 34, 36, 37, 40, 41, 44, 48, 55, 56, 58, 60, 61, 63, 64, 67, 69, 71, 72, 73], "much": [2, 26], "faster": 2, "won": 2, "t": [2, 6, 40, 71, 73], "fulli": [2, 36], "complet": [2, 21, 26, 48], "cmaesconfig": 3, "base": [3, 4, 6, 7, 10, 15, 16, 20, 21, 23, 26, 27, 28, 29, 30, 32, 33, 36, 38, 42, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 67, 68, 71, 72], "control": [3, 7, 26, 29, 30, 32, 38, 46, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64], "sampling_bas": [3, 5, 7, 29, 30, 46], "samplingbaseconfig": [3, 6, 7, 29, 30, 46], "configur": [3, 7, 16, 23, 29, 30, 46, 55, 56, 58, 62, 63, 69, 72], "sampl": [3, 6, 11, 17, 20, 25, 26, 28, 29, 33, 36, 38, 46, 63], "attribut": [3, 6, 7, 11, 13, 16, 25, 28, 29, 30, 32, 45, 46, 48, 51, 52, 53, 54, 55, 56, 58, 61, 62, 69, 71], "sigma_init": 3, "float": [3, 4, 6, 7, 11, 12, 16, 25, 26, 27, 29, 30, 32, 36, 37, 38, 40, 41, 44, 45, 46, 51, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 71, 72], "valu": [3, 4, 6, 7, 13, 16, 21, 26, 29, 30, 40, 42, 45, 46, 48, 62, 65, 71, 72], "0": [3, 6, 7, 10, 11, 16, 25, 26, 27, 29, 30, 34, 36, 37, 41, 43, 44, 45, 46, 51, 54, 55, 56, 58, 61, 62, 65, 71, 72, 73], "05": [3, 26, 29, 46, 54, 65], "max_it": 3, "int": [3, 4, 6, 7, 8, 11, 12, 13, 16, 21, 25, 26, 27, 33, 36, 37, 38, 40, 41, 42, 43, 51, 52, 53, 54, 60, 61, 63, 65, 71, 72], "20": [3, 6, 44], "config": [3, 4, 6, 7, 16, 29, 30, 46, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 69], "reward_config": [3, 6, 7, 29, 30, 46], "taskconfig": [3, 6, 7, 29, 30, 46, 55, 56, 58, 59, 60, 61, 62, 63, 64], "samplingbas": [3, 6, 7, 29, 30, 46], "object": [3, 6, 7, 11, 13, 17, 18, 20, 21, 25, 29, 30, 33, 44, 45, 46, 48, 63, 67, 68, 71, 72], "hyperparamet": [3, 7, 29, 30, 46], "model": [3, 4, 6, 7, 11, 12, 25, 29, 30, 35, 42, 46, 48, 55, 56, 58, 60, 61, 62, 63, 71, 72], "mujoco": [3, 7, 10, 11, 12, 29, 30, 46, 48, 50, 60, 61, 72], "system": [3, 7, 29, 30, 38, 46, 61, 63], "being": [3, 6, 7, 29, 30, 46], "data": [3, 6, 7, 10, 11, 12, 25, 26, 27, 28, 29, 30, 36, 42, 44, 45, 46, 63, 64, 71], "current": [3, 4, 6, 7, 14, 21, 25, 27, 29, 30, 32, 36, 38, 41, 46, 60, 64, 65, 72], "reward_func": [3, 7, 29, 30, 46], "function": [3, 4, 6, 7, 11, 14, 21, 25, 29, 30, 36, 44, 46, 48, 51, 52, 53, 54, 63, 64, 69, 72, 73], "map": [3, 7, 29, 30, 36, 46, 55, 56, 58, 62, 71, 73], "batch": [3, 6, 7, 28, 29, 30, 46, 55, 56, 58, 62, 73], "state": [3, 4, 6, 7, 10, 11, 13, 14, 16, 21, 25, 26, 27, 29, 30, 32, 33, 36, 42, 43, 45, 46, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 72], "reward": [3, 7, 14, 25, 29, 30, 36, 37, 38, 41, 42, 46, 51, 52, 53, 54, 55, 56, 58, 62, 63], "update_act": [3, 4, 6, 7, 29, 30, 46], "curr_stat": [3, 4, 6, 7, 29, 30, 46], "numpi": [3, 4, 6, 7, 11, 12, 13, 16, 21, 23, 26, 29, 30, 37, 40, 46, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 71, 72, 73], "ndarrai": [3, 4, 6, 7, 12, 13, 16, 21, 23, 29, 30, 37, 40, 46, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 71, 72, 73], "curr_tim": [3, 4, 6, 7, 29, 30, 46], "additional_info": [3, 4, 6, 7, 29, 30, 46, 60, 61, 63], "dict": [3, 4, 5, 6, 7, 10, 11, 13, 14, 21, 23, 26, 27, 29, 30, 38, 42, 46, 48, 59, 60, 61, 63, 69, 71, 72], "rollout": [3, 4, 6, 7, 25, 29, 30, 38, 46, 55, 56, 58, 60, 61, 62, 63], "comput": [3, 7, 11, 21, 26, 29, 30, 32, 40, 46, 73], "from": [3, 4, 6, 7, 10, 11, 12, 25, 26, 28, 29, 30, 32, 33, 35, 36, 38, 42, 43, 44, 46, 48, 55, 56, 58, 63, 65, 71, 72, 73], "action": [3, 4, 6, 7, 8, 10, 11, 14, 17, 18, 20, 21, 23, 25, 26, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 43, 45, 46, 73], "best": [3, 7, 29, 30, 36, 37, 38, 41, 46], "polici": [3, 7, 10, 25, 26, 29, 30, 32, 42, 46, 61], "controllerconfig": [4, 5, 6, 64], "spline": [4, 6, 61, 72], "abstract": [4, 6, 61, 63], "all": [4, 6, 11, 14, 27, 36, 38, 40, 50, 65, 67, 71, 72], "implement": [4, 6, 26, 27, 38, 42, 55, 56, 58, 62, 63, 71], "properti": [4, 6, 14, 16, 36, 42, 48, 51, 52, 53, 54, 60, 61, 63, 71, 72], "num_timestep": [4, 6], "abstractmethod": [4, 63], "helper": [4, 6, 64], "recalcul": [4, 6], "number": [4, 6, 36, 37, 38, 41, 45, 51, 52, 53, 54, 60, 72], "timestep": [4, 6, 27, 60, 61, 63], "simul": [4, 6, 11, 14, 33, 36, 60, 61, 63, 64], "rollout_tim": [4, 6], "calcul": [4, 6, 14, 33, 36, 40, 44, 73], "horizon": [4, 6, 7], "contain": [4, 6, 8, 11, 12, 21, 25, 26, 27, 32, 36, 42, 44, 60, 63, 64, 65, 67, 71, 72], "signal": [4, 6], "appli": [4, 6, 11, 40, 45], "make_model": [4, 6, 60, 61, 63], "re": [4, 6, 33, 38, 40], "size": [4, 6, 11, 13, 27, 36, 37, 38, 40, 71, 72], "vector": [4, 6, 8, 10, 11, 32, 34, 38, 40, 61, 63, 73], "num_rollout": [4, 6, 7], "updat": [4, 6, 11, 13, 14, 25, 26, 27, 36, 38, 42, 63, 64, 65, 72], "queri": [4, 6, 14, 20], "set_default_control": [4, 6], "set": [4, 6, 11, 13, 14, 16, 25, 26, 33, 36, 37, 40, 42, 45, 48, 60, 63, 64, 65, 71, 72], "default": [4, 6, 13, 16, 18, 32, 36, 37, 38, 44, 45, 55, 56, 58, 60, 61, 65, 68, 71, 72, 73], "zero": [4, 6, 8, 27, 32, 55, 56, 58, 60, 63], "reset": [4, 6, 11, 14, 21, 25, 28, 33, 36, 37, 38, 41, 42, 43, 51, 52, 53, 54, 55, 56, 58, 60, 62, 63, 64, 72], "get_registered_control": 5, "tupl": [5, 11, 12, 14, 16, 23, 25, 33, 36, 38, 41, 43, 59, 60, 61, 63, 72], "register_control": 5, "controller_typ": 5, "controller_config_typ": 5, "max_num_trac": 6, "5": [6, 7, 10, 30, 36, 44, 45, 51, 58, 71, 73], "1": [6, 7, 10, 11, 16, 23, 26, 29, 30, 34, 36, 37, 40, 44, 45, 46, 51, 54, 55, 56, 58, 62, 65, 71, 72, 73], "num_nod": 6, "32": [6, 7], "spline_ord": 6, "liter": [6, 16], "slinear": 6, "cubic": 6, "control_freq": 6, "use_noise_ramp": 6, "spline_timestep": 6, "creat": [6, 8, 13, 25, 32, 41, 48, 63, 64, 65], "new": [6, 13, 21, 27, 36, 38, 50, 64, 72], "scipi": [6, 60, 61, 63], "interpol": [6, 8, 45, 60, 61, 63], "interp1d": [6, 60, 61, 63], "defin": [6, 55, 56, 58, 60, 61, 62, 63, 71, 73], "update_splin": 6, "update_trac": 6, "trace": [6, 25, 64], "extract": [6, 11, 72], "sensor": [6, 10, 13, 36, 44, 48, 51, 52, 53, 54, 55, 56, 58, 62, 63], "read": [6, 63], "we": [6, 11, 21, 33, 38, 55, 56, 58, 65, 71, 73], "need": [6, 14, 60, 63, 67], "have": [6, 23, 40, 62], "num_spline_point": 6, "line": [6, 37], "segment": [6, 37], "initi": [6, 10, 11, 14, 21, 25, 33, 38, 48, 64, 72], "shape": [6, 27, 56, 63, 73], "x": [6, 26, 27, 40, 71, 72, 73], "num_physics_substep": 6, "nsensordata": [6, 11], "end": [6, 8, 11, 14, 23, 32, 36, 37, 43, 45, 56], "up": [6, 14, 36, 62, 64, 72], "num_elit": [6, 7], "num_trace_sensor": 6, "singl": [6, 38, 73], "2": [6, 7, 10, 16, 23, 37, 45, 61, 63, 71, 72, 73], "first": [6, 8, 11, 40], "last": [6, 11, 14, 33, 36, 38, 40, 45, 71], "point": [6, 37, 45, 72], "3": [6, 10, 12, 16, 23, 26, 37, 40, 44, 45, 54, 71, 73], "3d": [6, 27, 72], "po": [6, 40, 71, 72, 73], "make_splin": 6, "arrai": [6, 8, 11, 13, 26, 27, 32, 40, 42, 63, 68, 72, 73], "knot": 6, "possibli": 6, "m": [6, 12, 40, 71], "order": [6, 8, 23, 32], "us": [6, 8, 11, 14, 25, 27, 32, 36, 48, 60, 61, 63, 65, 72, 73], "same": [6, 21, 33, 38, 40, 60, 65], "extrapol": 6, "whether": [6, 36, 37, 38], "crossentropyconfig": 7, "cross": [7, 30], "entropi": [7, 30], "sigma_min": 7, "sigma_max": 7, "8": [7, 10, 16], "noise_ramp": [7, 46], "crossentropymethod": 7, "The": [7, 8, 12, 16, 23, 26, 27, 30, 31, 32, 34, 36, 40, 44, 55, 56, 58, 60, 71, 72], "submodul": [8, 11, 17, 18, 20, 21], "create_action_trajectori": 8, "controltyp": [8, 45], "start_act": [8, 23, 32, 36], "floattensor": [8, 10, 11, 14, 17, 18, 20, 21, 25, 26, 27, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 72], "end_act": [8, 23, 32, 36], "trajectory_step": [8, 32], "hold": [8, 11, 36], "A": [8, 11, 21, 26, 27, 40, 44, 56, 63, 71, 72, 73], "na": [8, 11, 21, 32], "start": [8, 11, 14, 25, 32, 36, 37, 38, 43, 45], "desir": [8, 11, 32, 51, 52, 53, 54, 65], "For": [8, 73], "onli": [8, 11, 14, 26], "held": [8, 32], "entir": 8, "linear": [8, 33, 55, 56, 58, 73], "between": [8, 11, 38, 45, 55, 56, 58, 62, 65], "an": [8, 17, 21, 26, 27, 32, 33, 37, 40, 44, 48, 61, 64, 71, 72, 73], "n": [8, 11, 12, 21, 32, 34, 40, 71], "modul": [9, 15], "action_trajectori": [9, 10, 11], "locomotion_pl": 9, "mujoco_dynam": [9, 10, 16, 17, 18, 20, 21, 23, 25, 33, 36, 38, 43, 72], "mujoco_util": 9, "state_help": 9, "isaac_to_mujoco_ix": 10, "4": [10, 26, 37, 45, 51, 73], "9": [10, 44], "6": [10, 72, 73], "10": [10, 16, 54, 55, 56], "7": [10, 37, 44], "11": 10, "mujoco_to_isaac_ix": 10, "isaac_to_mujoco": 10, "isaac": 10, "tensor": [10, 11, 14, 16, 25, 26, 27, 28, 35, 36, 37, 42, 44, 45, 73], "mujoco_to_isaac": 10, "locomotionpl": 10, "param": [10, 11, 14, 16, 17, 18, 20, 21, 25, 26, 28, 32, 33, 34, 36, 38, 41, 43, 65, 71], "parameter_contain": [10, 11, 14, 16, 17, 18, 20, 21, 25, 28, 33, 36, 38, 39, 41, 43], "parametercontain": [10, 11, 14, 16, 17, 18, 20, 21, 25, 28, 33, 36, 38, 41, 42, 43], "mujocopl": [10, 11, 14, 16, 17, 18, 20, 21, 23, 25, 33, 36, 38, 43, 72], "locomot": [10, 32, 61], "plant": [10, 11, 14, 16, 17, 18, 20, 21, 23, 25, 32, 33, 36, 38, 43, 72], "load_polici": 10, "load": [10, 25, 26, 27, 35, 36, 42, 48, 72], "process_observ": 10, "ob": [10, 26, 27], "velocity_command": 10, "process": [10, 14, 26, 42, 64, 65, 69], "observ": [10, 14, 25, 26, 27], "veloc": [10, 11, 13, 16, 55, 56, 58, 60, 63], "command": [10, 13, 60, 61], "run_polici": 10, "base_command": 10, "leg": [10, 13, 32, 48, 62], "joint": [10, 11, 14, 16, 23, 72], "target": [10, 14, 16, 26, 64, 65], "process_output": 10, "raw_output": 10, "raw": 10, "output": [10, 11, 26, 40], "get_sensor": [10, 11], "get": [10, 11, 16, 26, 28, 31, 32, 36, 38, 41, 45, 48, 50, 51, 52, 53, 54, 60, 63, 71], "info": [10, 11, 14, 38], "histori": 10, "get_joint_dimens": 11, "joint_id": 11, "arraylik": [11, 73], "state_address": 11, "state_length": 11, "indic": [11, 14, 36, 37, 38], "correspond": [11, 45, 73], "id": [11, 12, 33, 36, 38, 41], "address": 11, "total": [11, 36], "nq": [11, 33, 72], "decompose_state_dimens": 11, "mjmodel": [11, 12, 60, 72], "decompos": 11, "actuat": [11, 21, 32, 55, 56, 60, 63], "posit": [11, 16, 56, 62, 71, 72, 73], "unactu": 11, "scale_dist": 11, "delta_st": [11, 36], "scale": [11, 14, 25, 34, 37, 38, 40, 42, 45], "cost": 11, "matrix": [11, 36, 40, 71, 73], "xml_model_path": 11, "condit": [11, 14, 56, 63], "appropri": [11, 14], "singular": 11, "parallel": [11, 38], "nx": [11, 72], "num_env": 11, "num_step": [11, 38], "action_time_step": 11, "addit": [11, 25, 60, 63], "inform": [11, 14, 60, 63], "pass": [11, 26], "next": [11, 25], "intermedi": 11, "get_gradi": 11, "gradient": [11, 25, 33, 45], "state_gradients_st": 11, "state_gradients_control": 11, "nu": [11, 38, 51, 52, 53, 54, 60, 63], "sensor_gradients_st": 11, "sensor_gradients_control": 11, "set_stat": 11, "get_stat": 11, "set_act": 11, "get_act": 11, "update_sensor": 11, "measur": 11, "NOT": 11, "accler": 11, "minim": [11, 33, 72], "mj_step1": 11, "see": 11, "link": [11, 37], "below": 11, "more": 11, "detail": 11, "http": [11, 27], "readthedoc": 11, "io": [11, 26, 27, 60, 63, 64, 66], "en": 11, "latest": [11, 35], "program": 11, "html": [11, 72], "highlight": 11, "loop": [11, 14, 64], "final": [11, 62], "scaled_distances_to": 11, "target_st": 11, "state_differ": 11, "s1": 11, "s2": 11, "h": 11, "finit": 11, "differ": [11, 36, 62], "two": 11, "step": [11, 14, 26, 37, 38, 43, 60, 61, 63, 65], "d": [11, 36, 71, 73], "second": [11, 40], "state_addit": 11, "integr": 11, "forward": [11, 26, 61], "": [11, 26, 33, 44, 50], "get_mass": 11, "retriev": [11, 12, 23], "bodi": [11, 12, 48, 62, 72], "mass": 11, "get_quat_indic": 11, "store": [11, 14, 28, 35, 41, 64], "quaternion": [11, 16, 71, 73], "field": [11, 64, 65, 69], "normalize_st": 11, "normal": [11, 24, 25, 26, 35, 36, 40], "part": [11, 23, 71, 72], "randomli": [11, 25, 38], "portion": 11, "get_collision_fre": 11, "collis": [11, 36], "free": [11, 36, 45], "exist": 11, "render": [12, 37, 71, 72], "get_body_nam": 12, "bodyid": 12, "get_geom_nam": 12, "geomid": 12, "geom": 12, "get_geometry_rgba": 12, "rgba": [12, 37, 71, 72], "color": [12, 37, 71, 72], "get_mesh_data": 12, "meshid": 12, "vertic": [12, 37, 55, 56, 71], "face": [12, 71], "specifi": [12, 44, 45, 71, 72], "mesh": [12, 71], "index": [12, 25, 36, 37, 44, 56], "np": [12, 16, 37, 44, 71, 72, 73], "slice_union": 13, "slice": [13, 32, 44], "union": [13, 35, 36], "multipl": [13, 21, 48, 65, 72, 73], "ensur": [13, 34, 36, 48], "thei": [13, 21, 36, 40], "ar": [13, 21, 25, 26, 32, 33, 36, 38, 40, 56, 65, 72, 73], "contigu": 13, "statearrai": 13, "threadedlocomotionpl": 13, "base_po": 13, "base_quat": 13, "fl_leg": 13, "fr_leg": 13, "hl_leg": 13, "hr_leg": 13, "arm": [13, 16, 23, 32, 48, 62, 72], "object_po": 13, "object_quat": 13, "base_lin_vel": 13, "base_ang_vel": 13, "fl_leg_vel": 13, "fr_leg_vel": 13, "hl_leg_vel": 13, "hr_leg_vel": 13, "arm_vel": 13, "object_lin_vel": 13, "object_ang_vel": 13, "legs_vel": 13, "64": 13, "commandarrai": 13, "longitudinal_vel": 13, "lateral_vel": 13, "yaw_vel": 13, "base_rol": 13, "base_pitch": 13, "base_height": 13, "25": [13, 58, 61], "non_veloc": 13, "classmethod": [13, 48], "num_system": 13, "set_default": 13, "kwarg": [13, 23, 38, 69, 71], "as_dict": 13, "convert": [13, 32, 36, 42, 69, 71, 73], "dictionari": [13, 14, 48, 72], "sensorarrai": 13, "spot": [13, 16, 23, 32, 48, 51, 52, 53, 54, 61, 62], "body_object": 13, "object_y_axi": 13, "fngr_object": 13, "trace_bodi": 13, "trace_gripp": 13, "dexterityenv": 14, "dexter": [14, 15, 41, 55, 56, 58, 62, 64, 72], "observation_spac": 14, "simplenamespac": 14, "space": [14, 40, 43, 72, 73], "action_spac": 14, "metrics_kei": 14, "kei": [14, 28, 42, 48, 71, 72], "metric": 14, "__post_init__": [14, 16, 25, 28, 50], "setup_pl": 14, "setup_action_processor": 14, "actionprocessor": [14, 32], "setup_buff": [14, 28], "buffer": [14, 25, 28, 64], "tracker": 14, "scale_act": 14, "rang": [14, 38, 40, 45], "uniform_random_act": 14, "gener": [14, 16, 18, 33, 36, 48, 50, 60, 63, 69, 72], "uniform": 14, "random": [14, 18, 26, 33, 36, 45, 55, 56, 58, 62], "get_metr": 14, "onc": [14, 72], "begin": 14, "train": [14, 25, 26], "otherwis": [14, 44], "automat": 14, "when": [14, 23, 36, 64, 65], "individu": [14, 21, 37, 40], "episod": [14, 25, 27], "reset_ix": 14, "ix": 14, "specif": [14, 23, 37, 38, 50, 60, 63, 72], "identifi": 14, "update_joint_target": 14, "step_sim": 14, "dynam": [14, 16, 17, 18, 20, 21, 23, 25, 33, 36, 38, 41, 43, 72], "post_physics_step": 14, "physic": [14, 60, 61, 64], "check_success": 14, "check": [14, 27, 36], "meet": 14, "success": [14, 25], "criteria": 14, "check_failur": 14, "failur": 14, "update_termin": 14, "termin": [14, 23, 25, 36, 56, 60, 63, 64], "task_reward": 14, "update_reward": 14, "process_reset": 14, "update_ob": 14, "preserve_reset_ob": 14, "preserv": [14, 72], "q": [14, 71, 73], "non": [14, 36], "update_info": 14, "reset_st": 14, "env_ix": 14, "set_previous_end_act": 14, "start_stat": [14, 25, 36], "previou": [14, 32, 45], "set_current_st": 14, "set_goal_st": [14, 36], "goal": [14, 25, 26, 27, 33, 36, 37, 38, 43, 45, 51, 52, 53, 54, 58, 62, 71, 72], "set_start_st": [14, 36], "close": [14, 23, 44, 45], "necessari": [14, 21], "cleanup": 14, "tire_state_cache_gener": 15, "tiregeneratorconfig": 16, "cach": [16, 36, 42], "spot_tir": 16, "spot_floating_tir": 16, "cache_s": 16, "10000": 16, "enable_rend": 16, "radius_rang": 16, "distance_rang": 16, "object_z": 16, "linear_velocity_rang": 16, "angular_velocity_rang": 16, "randomize_veloc": 16, "spotarmik": 16, "invers": [16, 73], "kinemat": 16, "actuated_po": [16, 32], "max_iter": 16, "200": 16, "integration_dt": 16, "damp": 16, "0001": 16, "enable_orientation_control": 16, "position_toler": 16, "01": [16, 27, 37, 55, 56, 65, 72], "orientation_toler": 16, "progress_threshold": 16, "max_no_progress_step": 16, "solv": [16, 25], "target_xpo": 16, "target_xquat": 16, "problem": 16, "orient": [16, 44, 62, 71, 72], "angl": [16, 44, 55, 56, 62], "tirestatecachegener": 16, "tire": [16, 54], "default_arm_pos": 16, "pose": [16, 23, 72], "default_base_pos": 16, "default_veloc": 16, "task_nam": 16, "generate_cach": 16, "set_floating_spot_cach": 16, "graph": [17, 18, 20, 21, 25, 33, 37, 38, 39, 41, 42, 43], "expert_act": 17, "node_id": [17, 18, 20, 21, 25, 33, 38, 41], "select": [17, 26, 33, 38, 41, 45, 64], "expertsampl": [17, 18, 20, 21], "accord": [17, 38], "distribtuion": 17, "sampler": [18, 28, 33, 38, 41], "callback": [18, 20, 21, 38, 64, 65], "primit": 19, "spot_standing_box": [19, 22], "expert_sampl": [19, 20, 21], "network": [19, 24, 25, 35], "networksampl": 20, "is_loc": [20, 25, 35], "path": [20, 25, 31, 35, 36, 37, 38, 41, 42, 43, 48, 50, 64, 68, 71], "model_nam": 20, "actor": [20, 25, 26, 35], "pt": 20, "state_norm_nam": 20, "state_norm": [20, 26, 27], "neural": 20, "net": [20, 26], "primitivesampl": 21, "actions_func": 21, "actions_func_kwarg": 21, "higher": 21, "level": 21, "entail": 21, "low": 21, "reach": [21, 38, 44], "some": 21, "subgoal": 21, "It": [21, 36, 72], "meant": 21, "repres": [21, 23, 44, 48, 56, 73], "manipul": [21, 51, 52, 53, 54], "grasp": [21, 23], "push": [21, 58], "etc": 21, "proper": 21, "sequenc": [21, 72], "note": 21, "duplic": 21, "should": [21, 61, 72], "sinc": [21, 55, 56, 58], "stage": 21, "execut": [21, 48, 64], "compute_low_level_act": 21, "todo": 21, "action_tim": [21, 23], "ignor": 21, "whatev": 21, "action_sampl": [21, 38, 39, 43], "overwrit": [21, 71], "here": [21, 65], "clear": 21, "action_seq": 21, "origin": [21, 56, 72], "ongo": 21, "stand": [23, 62], "box": [23, 34, 51, 52, 53, 54, 71], "e": [23, 72], "g": [23, 72], "spot_ik_mujoco": 23, "dx": 23, "ee_bodi": 23, "arm_link_fngr": 23, "ik": 23, "effector": 23, "compute_grasp_pose_for_handle_top": 23, "chang": [23, 36, 64], "handl": [23, 32, 48, 65, 68], "hard": 23, "code": 23, "domain": [23, 45], "compute_grasp_act": 23, "move": [23, 51, 54], "gripper": 23, "ha": [23, 55, 56, 58, 62], "three": 23, "open": 23, "learner": 24, "replay_buff": [24, 25], "encapsul": [25, 26], "deep": [25, 26], "determinist": [25, 26], "ddpg": [25, 26], "algorithm": 25, "critic": [25, 26, 35], "take": [25, 72], "care": 25, "checkpoint": [25, 26, 27], "dure": 25, "well": [25, 26], "replaybuff": [25, 28], "save_loc": 25, "save_cloud": 25, "load_loc": 25, "load_cloud": 25, "construct": [25, 73], "actor_act": 25, "goal_stat": [25, 36, 72], "replai": 25, "relative_distances_to": 25, "current_st": [25, 32], "reward_funct": 25, "update_norm": 25, "plai": [25, 72], "experi": 25, "instead": 25, "everi": 25, "distribut": [25, 27, 36, 38, 40], "equal": 25, "what": 25, "encout": 25, "policy_rollout": [25, 61], "tensordict": [25, 28], "add": [25, 36, 50, 65, 71, 72], "graph_rollout": 25, "set_demonstration_inject": 25, "demonstr": 25, "inject": 25, "num_epoch": 25, "50": 25, "environ": [25, 72], "preprocess_sampl": 25, "preprocess": [25, 27], "train_actor_crit": 25, "discount_factor": 25, "98": 25, "agent": [25, 26], "eval_ag": 25, "evalu": [25, 26, 36, 61], "learner_ev": 25, "averag": [25, 26], "rate": [25, 64], "save_model": [25, 35], "save": [25, 26, 27, 35, 36, 72], "locat": [25, 51, 52, 53, 54], "under": 25, "model_filenam": 25, "load_model": [25, 35, 72], "pathlib": [25, 35, 42, 48, 50, 64], "act": 26, "wrapper": [26, 48, 69], "around": [26, 38], "actual": [26, 38], "provid": [26, 36, 48, 60, 63], "util": [26, 72], "ddp": 26, "vanilla": 26, "soft_upd": 26, "nn": 26, "tau": 26, "soft": 26, "weight": 26, "shift": 26, "factor": 26, "direct": [26, 33, 40], "which": [26, 32, 36, 61, 65, 72, 73], "copi": 26, "how": 26, "valid": [26, 36], "size_": 26, "size_a": 26, "nlayer": 26, "layer_width": 26, "256": 26, "lr": 26, "001": [26, 36], "ep": [26, 27], "action_clip": 26, "select_act": 26, "input": [26, 27, 40, 57, 60, 72, 73], "If": [26, 36, 40, 64, 65, 73], "nois": 26, "choos": [26, 38], "probabl": 26, "self": [26, 27, 42, 45, 63], "clip": [26, 32, 45], "maximum": [26, 40, 44, 65], "__call__": [26, 27, 32, 33], "directli": [26, 36], "backward_step": 26, "loss": 26, "backward": 26, "optim": [26, 33, 45], "without": 26, "eval": 26, "noisi": 26, "update_target": 26, "transfer": 26, "fraction": 26, "f": [26, 27, 48, 73], "bufferedwrit": [26, 27], "continu": [26, 45, 72], "choic": 26, "criticnetwork": 26, "enabl": [27, 38, 44, 64], "keep": 27, "consist": 27, "across": [27, 40], "github": 27, "com": 27, "openai": 27, "baselin": 27, "maintain": 27, "estim": 27, "mean": [27, 71], "varianc": 27, "unit": [27, 73], "alia": 27, "expect": 27, "dimens": [27, 40, 63], "rais": [27, 40], "assertionerror": 27, "fail": 27, "normalize_ob": 27, "fuse": 27, "storage_class": 28, "torchrl": 28, "storag": 28, "sampler_class": 28, "setup_storag": 28, "setup": [28, 64], "setup_sampl": 28, "extend": [28, 33, 38], "__getitem__": [28, 48, 50], "item": 28, "overload": 28, "trajectoryreplaybuff": 28, "mppiconfig": 29, "predict": [29, 46], "sigma": [29, 30, 46], "temperatur": [29, 30], "particlefilterconfig": 30, "particlefilt": 30, "get_package_path": 31, "sourc": 31, "tree": 31, "benedict": [32, 34], "get_start_act": 32, "current_actuated_st": 32, "previous_end_act": 32, "depend": [32, 37], "action_start_mod": 32, "get_end_act": 32, "relative_act": [32, 36, 38], "action_typ": [32, 38], "actiontyp": [32, 33, 38, 41, 45], "absolut": 32, "rel": [32, 36, 38], "action_end_mod": 32, "get_action_trajectori": 32, "get_actuated_st": 32, "make": [32, 60], "callabl": [32, 38, 48, 65, 69], "On": 32, "descript": [32, 36], "spotfloatingactionprocessor": 32, "base_action_ix": 32, "arm_action_ix": 32, "polar": 32, "coordin": [32, 72, 73], "motion": [32, 45], "base_action_to_egocentr": 32, "robot": [32, 44, 48, 72], "world": 32, "frame": [32, 48, 72], "egocentr": 32, "clip_base_act": 32, "base_act": 32, "spotwholebodyactionprocessor": 32, "arm_state_ix": 32, "processor": 32, "wholebodi": 32, "vx": 32, "vy": 32, "vtheta": 32, "power": 32, "separ": [32, 68], "while": 32, "parameter": 32, "actionsampl": [33, 38, 43], "intern": 33, "random_direct": 33, "proximity_direct": 33, "proxim": [33, 36, 45], "continuation_direct": 33, "edg": [33, 37], "goal_direct": 33, "formul": 33, "quadrat": 33, "directions_act": 33, "look": [33, 69], "k": [33, 40], "expand": 33, "combin": [33, 73], "potenti": 33, "project": [33, 40, 41, 73], "eigenspac": [33, 40, 42], "clip_act": 34, "box_scal": 34, "v": [34, 40, 73], "v_min": 34, "v_max": 34, "v_mid": 34, "down": 34, "belong": 34, "version": [34, 71], "v_bar": 34, "about": 34, "centerpoint": 34, "alpha": 34, "save_tensor": 35, "dest_path": 35, "gcp": 35, "bucket": 35, "load_tensor": 35, "src_path": 35, "learn": 35, "either": [35, 38, 61, 72], "local": 35, "find_latest_model_path": 35, "base_path": 35, "find": [35, 38], "directori": [35, 42], "sample_related_sub_goal_st": 36, "relat": 36, "sub": 36, "bound": [36, 51, 52, 53, 54], "num_parallel_search": 36, "state_dimens": 36, "new_goal_st": 36, "assum": [36, 38, 40, 73], "diagon": [36, 71], "covari": [36, 71], "reli": 36, "fact": 36, "entri": 36, "independ": [36, 40], "ident": 36, "sample_feasible_st": 36, "bound_low": 36, "bound_upp": 36, "num_attempt": 36, "feasibl": 36, "within": [36, 40], "lower": [36, 71], "upper": 36, "attempt": 36, "feasible_st": 36, "possibl": 36, "ignore_sampled_state_collis": 36, "found": 36, "sample_random_st": 36, "sample_random_start_st": 36, "paramt": 36, "sample_random_goal_st": 36, "sample_random_sub_goal_st": 36, "node_id_to_search_index_map": 36, "search": [36, 37, 38, 41, 43], "root": [36, 43], "calculate_distance_reward": 36, "calculate_proximity_reward": 36, "calculate_reachability_reward": 36, "minimum_dist": 36, "reachabl": 36, "matric": [36, 40, 73], "delta": 36, "minimum": [36, 65], "add_total_reward": 36, "sum": [36, 55, 56, 58, 62], "check_for_early_termin": 36, "sensordata": [36, 44], "earli": 36, "reachability_cach": 36, "b": [36, 40], "reachability_matric": 36, "add_nod": 36, "root_id": 36, "parent_id": 36, "is_terminal_nod": 36, "is_main_nod": 36, "its": [36, 40, 44, 64, 65], "ad": [36, 65], "term": [36, 55, 56, 58, 62], "connect": 36, "determin": [36, 44], "main": [36, 48, 62, 64], "reset_sub_goal_st": 36, "change_sub_goal_st": 36, "sub_goal_st": 36, "deactivate_nod": 36, "deactiv": 36, "requir": 36, "activate_all_nod": 36, "activ": 36, "inact": 36, "sorted_progress_id": 36, "reward_bas": 36, "search_index": [36, 37, 41, 43], "non_termin": 36, "sort": 36, "get_best_id": 36, "search_indic": [36, 38], "is_worse_than": 36, "comparison_id": 36, "wors": 36, "than": 36, "comparison": 36, "is_better_than": 36, "better": 36, "number_of_nod": 36, "get_active_main_id": 36, "get_root_id": 36, "shortest_path_to": 36, "idx": 36, "start_id": [36, 43], "shortest": [36, 43], "filenam": [36, 71, 72], "file": [36, 42, 48, 50, 69, 71, 72], "add_child_ids_to_nod": 36, "child": [36, 48, 60], "destroi": 36, "gpu": 36, "memori": 36, "rgba_palett": 37, "transpar": [37, 71], "predefin": 37, "color_gradi": 37, "display_point_cloud": 37, "point_siz": 37, "displai": 37, "cloud": 37, "rgb": [37, 71], "num_point": 37, "display_seg": 37, "line_width": 37, "width": [37, 71], "display_colormap_point_cloud": 37, "is_termin": [37, 56, 60, 63], "colormap_point": 37, "num_color_bin": 37, "12": 37, "colormap": 37, "bin": 37, "display_segments_by_categori": 37, "categori": 37, "string": [37, 48, 68], "display_3d_graph": 37, "logger": [37, 38, 39, 43], "vis_scal": 37, "vis_indic": 37, "node_s": 37, "start_goal_s": 37, "06": 37, "edge_s": 37, "best_path_edge_s": 37, "segment_color": 37, "best_path_color": 37, "node_transpar": 37, "display_best_path": 37, "display_reward_colormap": 37, "reset_visu": 37, "vertex": 37, "In": 37, "pixel": 37, "pareto_distribut": 38, "expon": [38, 40], "pareto": [38, 40, 45], "graphwork": [38, 43], "callback_period": 38, "simulationpl": 38, "node_select": 38, "collect": 38, "rank": 38, "Then": 38, "node_extens": 38, "num_action_step": 38, "sof": 38, "must": [38, 61, 65], "extens": [38, 41], "node_prun": 38, "paths_id": 38, "path_id": 38, "remov": [38, 41, 64, 65], "node_replac": 38, "best_indic": 38, "tri": 38, "replac": 38, "predecessor_nod": 38, "direct_nod": 38, "percentage_rang": 38, "stop": 38, "percentag": 38, "get_progress_info": 38, "print_percentag": 38, "progress": [38, 41], "callback_and_progress_check": 38, "change_go": 38, "booltensor": [38, 44], "singlegoalwork": 38, "singlego": 38, "work": 38, "parallelgoalswork": 38, "arg": [38, 69], "parallelgo": 38, "try_to_reallocate_work": 38, "worker_reset_mask": 38, "try": [38, 64], "realloc": 38, "worker": 38, "mask": 38, "update_extension_length": 38, "search_reset_mask": 38, "reset_finished_work": 38, "finish": 38, "update_pareto_paramet": 38, "new_node_id": 38, "commongoalworkerinterfac": 38, "commongoalwork": 38, "relatedgoalwork": 38, "explorerwork": 38, "explorework": 38, "rolloutwork": 38, "alwai": 38, "inspect_action_typ": 38, "100": [38, 54, 62], "inspect": 38, "tool": 38, "action_processor": 39, "clipping_method": 39, "data_collect": 39, "graph_visu": 39, "graph_work": [39, 43], "linear_algebra": 39, "planner_help": 39, "transformation_matrix": 40, "rot": 40, "4x4": [40, 73], "transform": [40, 71, 73], "rotat": [40, 73], "translat": [40, 73], "like": [40, 71], "3x3": [40, 73], "element": [40, 48, 64, 65], "truncpareto_cdf": 40, "upper_bound": 40, "truncat": 40, "max_scal": 40, "action_rang": 40, "so": 40, "fit": 40, "num_direct": 40, "action_dim": 40, "typic": 40, "one": [40, 69], "dimension": 40, "normalize_multipl": 40, "along": 40, "project_v_on_u": 40, "u": 40, "valueerror": 40, "gram_schmidt": 40, "basis_vector": 40, "orthonorm": 40, "basi": 40, "span": 40, "linearli": 40, "aren": 40, "you": 40, "go": [40, 62], "bad": 40, "column": 40, "project_vectors_on_eigenspac": 40, "orthonormal_basi": 40, "einsum_ij_ij_i": 40, "transpos": [40, 73], "pair": 40, "multipli": 40, "j": 40, "scalar": 40, "einsum_ij_kj_ki": 40, "einsum_ijk_ik_ij": 40, "einsum_ikj_ik_ij": 40, "einsum_jk_ikl_ijl": 40, "l": [40, 73], "einsum_ijk_ikl_ijl": 40, "einsum_ikj_ikl_ijl": 40, "einsum_ijk_ilk_ijl": 40, "log_path": 41, "workspac": 41, "bdai": 41, "log": [41, 64], "log_fil": 41, "get_log_nam": 41, "where": [41, 56, 65, 72], "log_param": 41, "log_search": 41, "iteration_numb": 41, "log_node_select": 41, "strategi": 41, "selectiontyp": [41, 45], "log_action_sampl": 41, "log_node_extens": 41, "best_id": 41, "dynamics_tim": 41, "log_node_prun": 41, "num_removed_nod": 41, "create_distance_log": 41, "create_reward_log": 41, "simple_progress_statist": 41, "simpl": [41, 62], "statist": [41, 69], "simple_path_statist": 41, "selection_strategi": 41, "action_strategi": 41, "yaml_path": 42, "base_yaml_path": 42, "yml": 42, "model_fold": 42, "folder": 42, "examples_directori": 42, "exampl": [42, 71, 72, 73], "xml_folder": 42, "xml": [42, 48, 50, 55, 56, 58, 62], "data_fold": 42, "cache_fold": 42, "state_cache_fold": 42, "graph_cache_fold": 42, "trajectory_cache_fold": 42, "policy_filepath": [42, 61], "filepath": 42, "devic": [42, 45], "__str__": [42, 45], "__getattr__": [42, 48], "__setattr__": [42, 48], "__name": 42, "__valu": 42, "setattr": 42, "__delattr__": 42, "delattr": 42, "__contains__": 42, "load_bas": 42, "yaml": 42, "autofil": 42, "run_autofill_rul": 42, "rule_kei": 42, "rule": 42, "list_of_yaml_arrays_to_tensor": 42, "concat_list_of_arrai": 42, "keypath": 42, "concat": 42, "process_sc": 42, "load_eigenspac": 42, "reset_se": 42, "set_se": 42, "reward_distance_scaling_sqrt": 42, "sqrt": [42, 71], "parse_hardware_paramet": 42, "file_path": 42, "pars": [42, 72], "hardwar": [42, 64], "through": [43, 65], "path_data": 43, "end_id": 43, "shortest_path_data": 43, "closest": 43, "path_trajectori": 43, "shortest_path_trajectori": 43, "plot_search_result": 43, "plot": 43, "is_object_tilt": 44, "tilt_toler": 44, "pi": 44, "y_axis_index": 44, "24": 44, "27": 44, "tilt": 44, "beyond": 44, "toler": 44, "y": [44, 71, 73], "axi": [44, 71], "compar": 44, "consid": 44, "frameyaxi": 44, "radian": 44, "\u03c0": 44, "degre": 44, "is_object_out_of_reach": 44, "reach_toler": 44, "dist_index": 44, "21": 44, "out": [44, 64], "framepo": 44, "meter": 44, "torso_too_close_to_object": 44, "torso_contact_index": 44, "torso": 44, "too": 44, "radiu": [44, 71, 72], "clippingtyp": 45, "enum": 45, "interest": 45, "expert": 45, "exploit": 45, "knowledg": 45, "non_expert": 45, "action_type_directional_map": 45, "actionmod": 45, "relative_to_current_st": 45, "relative_to_previous_end_act": 45, "absolute_act": 45, "zero_order_hold": 45, "first_order_hold": 45, "set_default_device_and_dtyp": 45, "dtype": [45, 65], "float32": 45, "convert_dtyp": 45, "attr": 45, "int_dtyp": 45, "int64": 45, "cast": 45, "integ": [45, 71], "predictivesamplingconfig": 46, "predictivesampl": 46, "scene_compos": 47, "scene_gener": 47, "scene_registri": 47, "spot_sensor": 47, "overrid": [48, 60, 68], "mjbodywrapp": 48, "simplifi": 48, "attach": 48, "access": [48, 65], "mjsbodi": 48, "child_bodi": 48, "deleg": 48, "wrap": 48, "except": [48, 64], "modelel": 48, "includ": [48, 71], "manag": [48, 65, 67], "xml_content": 48, "worldbodi": 48, "header_includ": 48, "from_fil": 48, "xml_path": 48, "from_str": 48, "static": [48, 72], "autoload": 48, "decor": [48, 65], "spec": 48, "befor": 48, "to_xml_str": 48, "mjspec": 48, "to_xml_fil": 48, "write": [48, 64], "spotrobot": 48, "compon": 48, "xml_dir": [48, 50], "compos": 48, "contact": 48, "make_default_header_includ": 48, "asset_dir": [48, 50], "components_dir": 50, "output_dir": 50, "sceneregistri": 50, "registri": 50, "scene_kwarg": 50, "regist": 50, "generate_al": 50, "reset_object_pos": [51, 54], "z_axi": [51, 54], "spotboxconfig": 51, "spot_bas": [51, 52, 53, 54, 59], "spotbaseconfig": [51, 52, 53, 54, 61], "default_command": [51, 52, 53, 54, 55, 56, 58, 61, 62], "goal_posit": [51, 52, 53, 54, 61], "w_orient": 51, "w_torso_proxim": [51, 54], "w_gripper_proxim": [51, 54], "orientation_threshold": 51, "spotbox": 51, "spotbas": [51, 52, 53, 54, 61], "actuator_ctrlrang": [51, 52, 53, 54, 60, 63], "spothandnavigationconfig": 52, "spothandnavig": 52, "navig": [52, 53], "spotnavigationconfig": 53, "spotnavig": 53, "tire_height": 54, "515": 54, "tire_go": 54, "spottireconfig": 54, "goal_tire_po": 54, "fall_penalti": [54, 61], "5000": 54, "tire_fallen_threshold": 54, "torso_goal_offset": 54, "gripper_goal_offset": 54, "15": [54, 55, 56, 58], "gripper_goal_altitud": 54, "w_tire_linear_veloc": 54, "w_tire_angular_veloc": 54, "w_leg_proxim": 54, "spottir": 54, "model_path": [55, 56, 58, 60, 62], "scene": [55, 56, 58, 62], "legaci": [55, 56, 58, 62], "acrobotconfig": 55, "w_vertic": [55, 56], "w_veloc": [55, 56], "w_control": [55, 56], "p_vertic": [55, 56], "cutoff_tim": [55, 56, 58, 61], "mujoco_task": [55, 56, 58, 59, 61, 62], "mujocotask": [55, 56, 58, 60, 61, 62], "balanc": [55, 56, 58], "mjpc": [55, 56, 58], "four": [55, 56, 58, 62], "vertical_rew": [55, 56], "penal": [55, 56, 58, 62], "pole": [55, 56], "velocity_rew": [55, 56], "squar": [55, 56, 58], "angular": [55, 56], "control_rew": [55, 56], "penalti": [55, 56, 58], "neg": [55, 56, 58], "max": [55, 56, 58, 65], "cartpoleconfig": 56, "w_center": 56, "p_center": 56, "centered_rew": 56, "cart": [56, 58], "batch_siz": 56, "traj": 56, "small": 56, "enough": 56, "smooth_l1_norm": 57, "p": 57, "quadratic_norm": 57, "cylinderpushconfig": 58, "cylind": [58, 71], "w_pusher_proxim": 58, "w_pusher_veloc": 58, "w_cart_posit": 58, "pusher_goal_offset": 58, "cart_goal_posit": 58, "cylinderpush": 58, "pusher_reward": 58, "pusher": 58, "velocity_reward": 58, "goal_reward": 58, "acrobot": 59, "cartpol": [59, 64], "cost_funct": 59, "cylinder_push": 59, "spot_position_control": 59, "get_registered_task": 59, "register_task": 59, "task_typ": 59, "task_config_typ": 59, "configt": [60, 61, 63], "mjdata": 60, "additional_task_info": [60, 63], "might": [60, 63], "limit": [60, 63], "dt": [60, 61, 63], "default_idle_command": [60, 61], "idl": [60, 61], "create_visu": [60, 63], "server": [60, 63, 64, 65], "viser": [60, 63, 64, 65, 67, 69], "viserserv": [60, 63, 64, 65], "context": [60, 63, 64], "viser_app": [60, 63], "iocontext": [60, 63, 64, 67], "text_handl": [60, 63], "sim_step": [60, 61, 63], "thread": [60, 61, 63, 64, 65], "num_model": [60, 61, 63], "behavior": [60, 63], "default_spot_rollout_cutoff_tim": 61, "2500": 61, "spot_fallen_threshold": 61, "35": 61, "w_goal": 61, "60": 61, "w_proxim": 61, "w_vel": 61, "model_filepath": [61, 72], "instanti": 61, "effect": 61, "physics_substep": 61, "mujoco_extens": 61, "rl": 61, "alloc": 61, "spotpositioncontrolconfig": 62, "w_stand": 62, "w_forward": 62, "w_leg": 62, "w_arm": 62, "spotpositioncontrol": 62, "position_rew": 62, "orientation_rew": 62, "leg_rew": 62, "arm_rew": 62, "slightli": 62, "dataclass": [63, 65], "modelt": 63, "mpc": 63, "lower_lim": 63, "upper_lim": 63, "jacta_manipulation_path": 64, "simulationprocess": 64, "simulationiocontext": [64, 67], "multiprocess": [64, 65, 67], "simulation_loop": 64, "write_st": 64, "sim": 64, "controlprocess": 64, "viserprofil": [64, 69], "fix": 64, "flow": 64, "controllerprocess": 64, "encount": 64, "queue": 64, "gui": [64, 66], "clean": 64, "control_loop": 64, "outer": 64, "frequenc": 64, "set_profiler_record": 64, "record": [64, 69, 72], "turn": 64, "off": 64, "inner": 64, "write_control": 64, "write_trac": 64, "viserapp": 64, "init_control": 64, "predictive_sampl": 64, "init_task": 64, "benchmark_dir": 64, "flip_profile_button_label": 64, "flip": 64, "button": 64, "label": 64, "disabl": 64, "setup_task": 64, "spawn": 64, "setup_visu": [64, 71], "stack": 64, "setup_context": 64, "overwritten": 64, "deploy": 64, "setup_phys": 64, "setup_control": 64, "control_config": 64, "task_config": 64, "control_cycle_callback": 64, "_": 64, "guievent": 64, "logic": 64, "via": [64, 65], "simulation_cycle_callback": 64, "simulation_reset_callback": 64, "control_selection_callback": 64, "event": [64, 65], "doe": 64, "vi": 64, "task_selection_callback": 64, "enable_profiling_callback": 64, "config_download_callback": 64, "download": 64, "default_slider_step_float": 65, "default_slider_step_int": 65, "goal_radiu": 65, "slider": 65, "parameter_nam": 65, "min": 65, "metadata": 65, "annot": 65, "match": 65, "other": 65, "variabl": 65, "constant": 65, "create_gui_el": 65, "config_dict": 65, "dictproxi": 65, "config_updated_ev": 65, "synchron": 65, "config_lock": 65, "lock": 65, "guiinputhandl": 65, "recurs": 65, "want": 65, "share": 65, "flag": 65, "prevent": 65, "guihandl": 65, "destruct": 65, "app": [66, 67], "json_seri": 66, "syncmanag": 67, "o": 67, "hardwareiocontext": 67, "configencod": 68, "skipkei": 68, "ensure_ascii": 68, "check_circular": 68, "allow_nan": 68, "sort_kei": 68, "indent": 68, "json": 68, "jsonencod": 68, "custom": 68, "encod": 68, "obj": [68, 71], "decode_config": 68, "decod": 68, "viserprofilerconfig": 69, "track": 69, "tracked_field": 69, "logfil": 69, "speed": 69, "benchmark_funct": 69, "input_funct": 69, "benchmark": 69, "benchmark_wrapp": 69, "meshcat_visu": 70, "mujoco_visu": 70, "quaternion_oper": 70, "rgb_int_to_hex": 71, "hexadecim": 71, "rgb_float_to_hex": 71, "rgba_overwrit": 71, "model_rgba": 71, "user_rgba": 71, "meshphysicalmateri": 71, "16777215": 71, "reflect": 71, "side": 71, "opac": [71, 72], "linewidth": 71, "wirefram": 71, "wireframelinewidth": 71, "vertexcolor": 71, "geometri": 71, "genericmateri": 71, "materi": 71, "high": 71, "meshtoonmateri": 71, "poster": 71, "setpropertycapit": 71, "capit": 71, "letter": 71, "bypass": 71, "bug": 71, "__slots__": 71, "set_property_capit": 71, "close_window": 71, "plane": 71, "height": 71, "widthseg": 71, "heightseg": 71, "releas": 71, "pypi": 71, "object_data": 71, "set_color": 71, "axes_vis": 71, "grid_vis": 71, "zoom": 71, "camera_po": 71, "top_color": 71, "bottom_color": 71, "negative_shadow": 71, "positive_shadow": 71, "camera": 71, "background": 71, "shadow": 71, "add_object": 71, "add_ground": 71, "ground": 71, "add_plan": 71, "quat": [71, 72, 73], "add_spher": 71, "sphere": 71, "add_cylind": 71, "align": 71, "z": [71, 73], "add_box": 71, "add_capsul": 71, "capsul": 71, "add_ellipsoid": 71, "ellipsoid": 71, "confidence_interval_mod": 71, "orthogon": [71, 73], "eigenvector": 71, "sqrt_d": 71, "eigenvalu": 71, "diag": 71, "With": 71, "add_mesh_by_nam": 71, "add_mesh": 71, "triangular": 71, "set_object": 71, "default_color": 72, "typealia": 72, "mujocorender": 72, "time_step": 72, "collision_geometry_opac": 72, "mujocomeshcatrender": 72, "anim": 72, "state_trajectori": 72, "show_goal": 72, "OR": 72, "framer": 72, "trajectory_nam": 72, "force_reload": 72, "trajectorynam": 72, "alreadi": 72, "set_model": 72, "joint_posit": 72, "delet": 72, "initialize_mark": 72, "marker_info": 72, "marker": 72, "update_mark": 72, "marker_pos": 72, "add_mark": 72, "02": 72, "set_mark": 72, "animate_mark": 72, "frame_index": 72, "init_point": 72, "n_point": 72, "update_point": 72, "initialize_candidate_trajectori": 72, "n_candid": 72, "n_eval": 72, "candid": 72, "update_candidate_trajectori": 72, "init_ee_posit": 72, "update_ee_posit": 72, "show_trajectori": 72, "goal_nam": 72, "show": 72, "extract_joint_posit": 72, "show_box_go": 72, "alongsid": 72, "num_fram": 72, "wait_for_input": 72, "messag": 72, "press": 72, "enter": 72, "wait": 72, "get_html": 72, "represent": 72, "meshcat_record": 72, "quaternion_invers": 73, "w": 73, "quaternion_to_transformation_matrix": 73, "pose_to_transformation_matrix": 73, "skew_symmetr": 73, "r": 73, "skew": 73, "symmetr": 73, "nx3": 73, "nx3x3": 73, "array_lik": 73, "qo": 73, "left_act": 73, "left": 73, "oper": 73, "q_2": 73, "q_1": 73, "nx4": 73, "nx4x4": 73, "q1": 73, "q2": 73, "dot": 73, "right_act": 73, "right": 73, "action_invers": 73, "effici": 73, "vector_project": 73, "imaginari": 73, "support": 73, "project_act": 73, "onto": 73, "rotation_matrix": 73, "quaternion_to_quaternion_map_jacobian": 73, "argument_quaternion": 73, "map_jacobian": 73, "result_quaternion": 73, "jacobian": 73, "tangent": 73, "canon": 73, "df": 73, "dq": 73}, "objects": {"": [[1, 0, 0, "-", "benchmarking"], [3, 0, 0, "-", "cmaes"], [5, 0, 0, "-", "controllers"], [7, 0, 0, "-", "cross_entropy_method"], [9, 0, 0, "-", "dynamics"], [15, 0, 0, "-", "environments"], [19, 0, 0, "-", "experts"], [24, 0, 0, "-", "learning"], [29, 0, 0, "-", "mppi"], [30, 0, 0, "-", "particle_filter"], [31, 0, 0, "-", "path_resolvers"], [39, 0, 0, "-", "planner"], [46, 0, 0, "-", "predictive_sampling"], [47, 0, 0, "-", "scenes"], [51, 0, 0, "-", "spot_box"], [52, 0, 0, "-", "spot_hand_navigation"], [53, 0, 0, "-", "spot_navigation"], [54, 0, 0, "-", "spot_tire"], [59, 0, 0, "-", "tasks"], [66, 0, 0, "-", "viser_app"], [70, 0, 0, "-", "visuals"]], "benchmarking": [[0, 0, 0, "-", "benchmarking"], [2, 0, 0, "-", "profiling"]], "benchmarking.benchmarking": [[0, 1, 1, "", "Benchmark"]], "benchmarking.benchmarking.Benchmark": [[0, 2, 1, "", "print_results"], [0, 2, 1, "", "visualize_results"]], "benchmarking.profiling": [[2, 3, 1, "", "run_example"]], "cmaes": [[3, 1, 1, "", "CMAES"], [3, 1, 1, "", "CMAESConfig"]], "cmaes.CMAES": [[3, 2, 1, "", "action"], [3, 2, 1, "", "update_action"]], "cmaes.CMAESConfig": [[3, 4, 1, "", "max_iter"]], "controllers": [[4, 0, 0, "-", "controller"], [5, 3, 1, "", "get_registered_controllers"], [5, 3, 1, "", "register_controller"], [6, 0, 0, "-", "sampling_base"]], "controllers.controller": [[4, 1, 1, "", "Controller"], [4, 1, 1, "", "ControllerConfig"]], "controllers.controller.Controller": [[4, 2, 1, "", "action"], [4, 5, 1, "", "controls"], [4, 2, 1, "", "make_models"], [4, 2, 1, "", "reset"], [4, 5, 1, "", "rollout_times"], [4, 2, 1, "", "set_default_controls"], [4, 2, 1, "", "update_action"]], "controllers.sampling_base": [[6, 6, 1, "", "MAX_NUM_TRACES"], [6, 1, 1, "", "SamplingBase"], [6, 1, 1, "", "SamplingBaseConfig"], [6, 3, 1, "", "make_spline"]], "controllers.sampling_base.SamplingBase": [[6, 2, 1, "", "action"], [6, 5, 1, "", "controls"], [6, 2, 1, "", "make_models"], [6, 2, 1, "", "reset"], [6, 5, 1, "", "rollout_times"], [6, 2, 1, "", "set_default_controls"], [6, 5, 1, "", "spline"], [6, 5, 1, "", "spline_timesteps"], [6, 2, 1, "", "update_action"], [6, 2, 1, "", "update_spline"], [6, 2, 1, "", "update_traces"]], "controllers.sampling_base.SamplingBaseConfig": [[6, 4, 1, "", "control_freq"], [6, 4, 1, "", "num_nodes"], [6, 4, 1, "", "num_rollouts"], [6, 4, 1, "", "spline_order"], [6, 4, 1, "", "use_noise_ramp"]], "cross_entropy_method": [[7, 1, 1, "", "CrossEntropyConfig"], [7, 1, 1, "", "CrossEntropyMethod"]], "cross_entropy_method.CrossEntropyConfig": [[7, 4, 1, "", "horizon"], [7, 4, 1, "", "noise_ramp"], [7, 4, 1, "", "num_elites"], [7, 4, 1, "", "num_rollouts"], [7, 4, 1, "", "sigma_max"]], "cross_entropy_method.CrossEntropyMethod": [[7, 2, 1, "", "action"], [7, 2, 1, "", "update_action"]], "dynamics": [[8, 0, 0, "-", "action_trajectory"], [10, 0, 0, "-", "locomotion_plant"], [11, 0, 0, "-", "mujoco_dynamics"], [12, 0, 0, "-", "mujoco_utils"], [13, 0, 0, "-", "state_helpers"]], "dynamics.action_trajectory": [[8, 3, 1, "", "create_action_trajectories"], [8, 3, 1, "", "create_action_trajectory"]], "dynamics.locomotion_plant": [[10, 1, 1, "", "LocomotionPlant"], [10, 3, 1, "", "isaac_to_mujoco"], [10, 6, 1, "", "isaac_to_mujoco_ixs"], [10, 3, 1, "", "mujoco_to_isaac"], [10, 6, 1, "", "mujoco_to_isaac_ixs"]], "dynamics.locomotion_plant.LocomotionPlant": [[10, 2, 1, "", "dynamics"], [10, 2, 1, "", "get_sensor"], [10, 2, 1, "", "load_policy"], [10, 2, 1, "", "process_observations"], [10, 2, 1, "", "process_output"], [10, 2, 1, "", "run_policy"]], "dynamics.mujoco_dynamics": [[11, 1, 1, "", "MujocoPlant"], [11, 3, 1, "", "decompose_state_dimensions"], [11, 3, 1, "", "get_joint_dimensions"], [11, 3, 1, "", "scale_distances"]], "dynamics.mujoco_dynamics.MujocoPlant": [[11, 2, 1, "", "dynamics"], [11, 2, 1, "", "get_action"], [11, 2, 1, "", "get_collision_free"], [11, 2, 1, "", "get_gradients"], [11, 2, 1, "", "get_mass"], [11, 2, 1, "", "get_quat_indices"], [11, 2, 1, "", "get_sensor"], [11, 2, 1, "", "get_state"], [11, 2, 1, "", "initialize"], [11, 2, 1, "", "normalize_state"], [11, 2, 1, "", "scaled_distances_to"], [11, 2, 1, "", "set_action"], [11, 2, 1, "", "set_state"], [11, 2, 1, "", "state_addition"], [11, 2, 1, "", "state_difference"], [11, 2, 1, "", "update_sensor"]], "dynamics.mujoco_utils": [[12, 3, 1, "", "get_body_name"], [12, 3, 1, "", "get_geom_name"], [12, 3, 1, "", "get_geometry_rgba"], [12, 3, 1, "", "get_mesh_data"]], "dynamics.state_helpers": [[13, 1, 1, "", "CommandArray"], [13, 1, 1, "", "SensorArray"], [13, 1, 1, "", "StateArray"], [13, 3, 1, "", "slice_union"]], "dynamics.state_helpers.CommandArray": [[13, 4, 1, "", "arm"], [13, 2, 1, "", "as_dict"], [13, 4, 1, "", "base_height"], [13, 4, 1, "", "base_pitch"], [13, 4, 1, "", "base_roll"], [13, 2, 1, "", "create"], [13, 4, 1, "", "fl_leg"], [13, 4, 1, "", "fr_leg"], [13, 4, 1, "", "hl_leg"], [13, 4, 1, "", "hr_leg"], [13, 4, 1, "", "lateral_vel"], [13, 4, 1, "", "legs"], [13, 4, 1, "", "non_velocities"], [13, 2, 1, "", "set_defaults"], [13, 4, 1, "", "size"], [13, 2, 1, "", "update"], [13, 4, 1, "", "velocities"], [13, 4, 1, "", "yaw_vel"]], "dynamics.state_helpers.SensorArray": [[13, 4, 1, "", "fngr_object"], [13, 4, 1, "", "object_y_axis"], [13, 4, 1, "", "trace_body"], [13, 4, 1, "", "trace_gripper"]], "dynamics.state_helpers.StateArray": [[13, 4, 1, "", "arm"], [13, 4, 1, "", "arm_vel"], [13, 4, 1, "", "base_ang_vel"], [13, 4, 1, "", "base_lin_vel"], [13, 4, 1, "", "base_quat"], [13, 4, 1, "", "fl_leg"], [13, 4, 1, "", "fl_leg_vel"], [13, 4, 1, "", "fr_leg"], [13, 4, 1, "", "fr_leg_vel"], [13, 4, 1, "", "hl_leg"], [13, 4, 1, "", "hl_leg_vel"], [13, 4, 1, "", "hr_leg"], [13, 4, 1, "", "hr_leg_vel"], [13, 4, 1, "", "legs"], [13, 4, 1, "", "legs_vel"], [13, 4, 1, "", "object_ang_vel"], [13, 4, 1, "", "object_lin_vel"], [13, 4, 1, "", "object_pos"], [13, 4, 1, "", "object_quat"], [13, 4, 1, "", "size"]], "environments": [[14, 0, 0, "-", "base"], [16, 0, 0, "-", "tire_state_cache_generator"]], "environments.base": [[14, 1, 1, "", "DexterityEnv"]], "environments.base.DexterityEnv": [[14, 2, 1, "", "__post_init__"], [14, 5, 1, "", "action_space"], [14, 2, 1, "", "check_failure"], [14, 2, 1, "", "check_success"], [14, 2, 1, "", "close"], [14, 2, 1, "", "get_metrics"], [14, 5, 1, "", "metrics_keys"], [14, 4, 1, "", "params"], [14, 2, 1, "", "post_physics_step"], [14, 2, 1, "", "preserve_reset_obs"], [14, 2, 1, "", "process_resets"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "reset_ixs"], [14, 2, 1, "", "reset_states"], [14, 2, 1, "", "scale_actions"], [14, 2, 1, "", "set_current_states"], [14, 2, 1, "", "set_goal_states"], [14, 2, 1, "", "set_previous_end_actions"], [14, 2, 1, "", "set_start_states"], [14, 2, 1, "", "setup_action_processor"], [14, 2, 1, "", "setup_buffers"], [14, 2, 1, "", "setup_plant"], [14, 2, 1, "", "step"], [14, 2, 1, "", "step_sim"], [14, 2, 1, "", "task_rewards"], [14, 2, 1, "", "uniform_random_action"], [14, 2, 1, "", "update_info"], [14, 2, 1, "", "update_joint_targets"], [14, 2, 1, "", "update_obs"], [14, 2, 1, "", "update_rewards"], [14, 2, 1, "", "update_terminations"]], "environments.tire_state_cache_generator": [[16, 1, 1, "", "SpotArmIK"], [16, 1, 1, "", "TireGeneratorConfig"], [16, 1, 1, "", "TireStateCacheGenerator"]], "environments.tire_state_cache_generator.SpotArmIK": [[16, 2, 1, "", "__post_init__"], [16, 4, 1, "", "actuated_pos"], [16, 4, 1, "", "damping"], [16, 4, 1, "", "enable_orientation_control"], [16, 4, 1, "", "integration_dt"], [16, 4, 1, "", "max_iterations"], [16, 4, 1, "", "max_no_progress_steps"], [16, 4, 1, "", "orientation_tolerance"], [16, 4, 1, "", "params"], [16, 4, 1, "", "position_tolerance"], [16, 4, 1, "", "progress_threshold"], [16, 2, 1, "", "solve"]], "environments.tire_state_cache_generator.TireGeneratorConfig": [[16, 4, 1, "", "angular_velocity_range"], [16, 4, 1, "", "cache_size"], [16, 4, 1, "", "distance_range"], [16, 4, 1, "", "enable_rendering"], [16, 4, 1, "", "linear_velocity_range"], [16, 4, 1, "", "object_z"], [16, 4, 1, "", "radius_range"], [16, 4, 1, "", "randomize_velocity"]], "environments.tire_state_cache_generator.TireStateCacheGenerator": [[16, 2, 1, "", "__post_init__"], [16, 4, 1, "", "config"], [16, 5, 1, "", "default_base_pose"], [16, 5, 1, "", "default_velocities"], [16, 2, 1, "", "generate_cache"], [16, 2, 1, "", "set_floating_spot_cache"], [16, 4, 1, "", "task_name"]], "experts": [[17, 0, 0, "-", "expert"], [18, 0, 0, "-", "expert_sampler"], [20, 0, 0, "-", "network"], [21, 0, 0, "-", "primitive"], [22, 0, 0, "-", "primitives"]], "experts.expert": [[17, 1, 1, "", "Expert"]], "experts.expert_sampler": [[18, 1, 1, "", "ExpertSampler"]], "experts.network": [[20, 1, 1, "", "NetworkSampler"]], "experts.primitive": [[21, 1, 1, "", "PrimitiveSampler"]], "experts.primitive.PrimitiveSampler": [[21, 2, 1, "", "compute_low_level_actions"], [21, 2, 1, "", "reset"]], "experts.primitives": [[23, 0, 0, "-", "spot_standing_box"]], "experts.primitives.spot_standing_box": [[23, 3, 1, "", "compute_grasp_actions"], [23, 3, 1, "", "compute_grasp_pose_for_handle_top"], [23, 3, 1, "", "spot_ik_mujoco"]], "learning": [[25, 0, 0, "-", "learner"], [26, 0, 0, "-", "networks"], [27, 0, 0, "-", "normalizer"], [28, 0, 0, "-", "replay_buffer"]], "learning.learner": [[25, 1, 1, "", "Learner"]], "learning.learner.Learner": [[25, 2, 1, "", "__post_init__"], [25, 2, 1, "", "actor_actions"], [25, 2, 1, "", "eval_agent"], [25, 4, 1, "", "graph"], [25, 2, 1, "", "graph_rollout"], [25, 4, 1, "", "load_cloud"], [25, 4, 1, "", "load_local"], [25, 2, 1, "", "load_models"], [25, 4, 1, "", "params"], [25, 2, 1, "", "policy_rollout"], [25, 2, 1, "", "preprocess_sample"], [25, 2, 1, "", "relative_distances_to"], [25, 4, 1, "", "replay_buffer"], [25, 2, 1, "", "reset"], [25, 2, 1, "", "reward_function"], [25, 4, 1, "", "save_cloud"], [25, 4, 1, "", "save_local"], [25, 2, 1, "", "save_models"], [25, 2, 1, "", "set_demonstration_injection"], [25, 2, 1, "", "train"], [25, 2, 1, "", "train_actor_critic"], [25, 2, 1, "", "update_norm"], [25, 4, 1, "", "verbose"]], "learning.networks": [[26, 1, 1, "", "Actor"], [26, 1, 1, "", "Critic"], [26, 1, 1, "", "CriticNetwork"], [26, 1, 1, "", "DDP"], [26, 3, 1, "", "soft_update"]], "learning.networks.Actor": [[26, 2, 1, "", "__call__"], [26, 2, 1, "", "backward_step"], [26, 2, 1, "", "eval"], [26, 2, 1, "", "load"], [26, 2, 1, "", "save"], [26, 2, 1, "", "target"], [26, 2, 1, "", "train"], [26, 2, 1, "", "update_target"]], "learning.networks.Critic": [[26, 2, 1, "", "backward_step"], [26, 2, 1, "", "load"], [26, 2, 1, "", "save"], [26, 2, 1, "", "target"], [26, 2, 1, "", "update_target"]], "learning.normalizer": [[27, 1, 1, "", "Normalizer"]], "learning.normalizer.Normalizer": [[27, 2, 1, "", "load"], [27, 2, 1, "", "normalize"], [27, 2, 1, "", "normalize_obs"], [27, 2, 1, "", "save"], [27, 2, 1, "", "update"]], "learning.replay_buffer": [[28, 1, 1, "", "ReplayBuffer"], [28, 1, 1, "", "TrajectoryReplayBuffer"]], "learning.replay_buffer.ReplayBuffer": [[28, 2, 1, "", "__getitem__"], [28, 2, 1, "", "__post_init__"], [28, 2, 1, "", "extend"], [28, 2, 1, "", "reset"], [28, 2, 1, "", "sample"], [28, 4, 1, "", "sampler_class"], [28, 2, 1, "", "setup_buffer"], [28, 2, 1, "", "setup_sampler"], [28, 2, 1, "", "setup_storage"], [28, 4, 1, "", "storage_class"]], "learning.replay_buffer.TrajectoryReplayBuffer": [[28, 2, 1, "", "sample"], [28, 2, 1, "", "setup_buffer"]], "mppi": [[29, 1, 1, "", "MPPI"], [29, 1, 1, "", "MPPIConfig"]], "mppi.MPPI": [[29, 2, 1, "", "action"], [29, 2, 1, "", "update_action"]], "mppi.MPPIConfig": [[29, 4, 1, "", "temperature"]], "particle_filter": [[30, 1, 1, "", "ParticleFilter"], [30, 1, 1, "", "ParticleFilterConfig"]], "particle_filter.ParticleFilter": [[30, 2, 1, "", "action"], [30, 2, 1, "", "update_action"]], "particle_filter.ParticleFilterConfig": [[30, 4, 1, "", "temperature"]], "path_resolvers": [[31, 3, 1, "", "get_package_path"]], "planner": [[32, 0, 0, "-", "action_processor"], [33, 0, 0, "-", "action_sampler"], [34, 0, 0, "-", "clipping_method"], [35, 0, 0, "-", "data_collection"], [36, 0, 0, "-", "graph"], [37, 0, 0, "-", "graph_visuals"], [38, 0, 0, "-", "graph_worker"], [40, 0, 0, "-", "linear_algebra"], [41, 0, 0, "-", "logger"], [42, 0, 0, "-", "parameter_container"], [43, 0, 0, "-", "planner"], [44, 0, 0, "-", "planner_helpers"], [45, 0, 0, "-", "types"]], "planner.action_processor": [[32, 1, 1, "", "ActionProcessor"], [32, 1, 1, "", "SpotFloatingActionProcessor"], [32, 1, 1, "", "SpotWholebodyActionProcessor"]], "planner.action_processor.ActionProcessor": [[32, 2, 1, "", "__call__"], [32, 4, 1, "", "actuated_pos"], [32, 2, 1, "", "get_action_trajectories"], [32, 2, 1, "", "get_actuated_states"], [32, 2, 1, "", "get_end_actions"], [32, 2, 1, "", "get_start_actions"]], "planner.action_processor.SpotFloatingActionProcessor": [[32, 4, 1, "", "arm_action_ixs"], [32, 2, 1, "", "base_action_to_egocentric"], [32, 2, 1, "", "clip_base_actions"], [32, 2, 1, "", "get_end_actions"]], "planner.action_processor.SpotWholebodyActionProcessor": [[32, 4, 1, "", "arm_action_ixs"], [32, 4, 1, "", "arm_state_ixs"], [32, 2, 1, "", "get_action_trajectories"], [32, 2, 1, "", "get_actuated_states"], [32, 2, 1, "", "get_start_actions"]], "planner.action_sampler": [[33, 1, 1, "", "ActionSampler"]], "planner.action_sampler.ActionSampler": [[33, 2, 1, "", "__call__"], [33, 2, 1, "", "continuation_directions"], [33, 2, 1, "", "directions_actions"], [33, 2, 1, "", "goal_directions"], [33, 2, 1, "", "initialize"], [33, 2, 1, "", "proximity_directions"], [33, 2, 1, "", "random_directions"]], "planner.clipping_method": [[34, 3, 1, "", "box_scaling"], [34, 3, 1, "", "clip_actions"]], "planner.data_collection": [[35, 3, 1, "", "find_latest_model_path"], [35, 3, 1, "", "load_model"], [35, 3, 1, "", "load_tensor"], [35, 3, 1, "", "save_model"], [35, 3, 1, "", "save_tensor"]], "planner.graph": [[36, 1, 1, "", "Graph"], [36, 3, 1, "", "sample_feasible_states"], [36, 3, 1, "", "sample_random_goal_states"], [36, 3, 1, "", "sample_random_start_states"], [36, 3, 1, "", "sample_random_states"], [36, 3, 1, "", "sample_random_sub_goal_states"], [36, 3, 1, "", "sample_related_sub_goal_states"]], "planner.graph.Graph": [[36, 2, 1, "", "activate_all_nodes"], [36, 2, 1, "", "add_child_ids_to_node"], [36, 2, 1, "", "add_nodes"], [36, 2, 1, "", "add_total_rewards"], [36, 2, 1, "", "calculate_distance_rewards"], [36, 2, 1, "", "calculate_proximity_rewards"], [36, 2, 1, "", "calculate_reachability_rewards"], [36, 2, 1, "", "change_sub_goal_states"], [36, 2, 1, "", "check_for_early_termination"], [36, 2, 1, "", "deactivate_nodes"], [36, 2, 1, "", "destroy"], [36, 2, 1, "", "get_active_main_ids"], [36, 2, 1, "", "get_best_id"], [36, 2, 1, "", "get_root_ids"], [36, 2, 1, "", "is_better_than"], [36, 2, 1, "", "is_worse_than"], [36, 2, 1, "", "load"], [36, 2, 1, "", "number_of_nodes"], [36, 2, 1, "", "reachability_cache"], [36, 2, 1, "", "reset"], [36, 2, 1, "", "reset_sub_goal_states"], [36, 2, 1, "", "save"], [36, 2, 1, "", "set_goal_state"], [36, 2, 1, "", "set_start_states"], [36, 2, 1, "", "shortest_path_to"], [36, 2, 1, "", "sorted_progress_ids"]], "planner.graph_visuals": [[37, 3, 1, "", "color_gradient"], [37, 3, 1, "", "display_3d_graph"], [37, 3, 1, "", "display_colormap_point_cloud"], [37, 3, 1, "", "display_point_cloud"], [37, 3, 1, "", "display_segments"], [37, 3, 1, "", "display_segments_by_category"], [37, 3, 1, "", "rgba_palette"]], "planner.graph_worker": [[38, 1, 1, "", "CommonGoalWorkerInterface"], [38, 1, 1, "", "ExplorerWorker"], [38, 1, 1, "", "GraphWorker"], [38, 1, 1, "", "ParallelGoalsWorker"], [38, 1, 1, "", "RelatedGoalWorker"], [38, 1, 1, "", "RolloutWorker"], [38, 1, 1, "", "SingleGoalWorker"], [38, 3, 1, "", "inspect_action_type"], [38, 3, 1, "", "pareto_distribution"]], "planner.graph_worker.GraphWorker": [[38, 2, 1, "", "callback_and_progress_check"], [38, 2, 1, "", "get_progress_info"], [38, 2, 1, "", "node_extension"], [38, 2, 1, "", "node_pruning"], [38, 2, 1, "", "node_replacement"], [38, 2, 1, "", "node_selection"], [38, 2, 1, "", "percentage_range"]], "planner.graph_worker.ParallelGoalsWorker": [[38, 2, 1, "", "reset_finished_workers"], [38, 2, 1, "", "update_extension_lengths"], [38, 2, 1, "", "update_pareto_parameters"], [38, 2, 1, "", "work"]], "planner.linear_algebra": [[40, 3, 1, "", "einsum_ij_ij_i"], [40, 3, 1, "", "einsum_ij_kj_ki"], [40, 3, 1, "", "einsum_ijk_ik_ij"], [40, 3, 1, "", "einsum_ijk_ikl_ijl"], [40, 3, 1, "", "einsum_ijk_ilk_ijl"], [40, 3, 1, "", "einsum_ikj_ik_ij"], [40, 3, 1, "", "einsum_ikj_ikl_ijl"], [40, 3, 1, "", "einsum_jk_ikl_ijl"], [40, 3, 1, "", "gram_schmidt"], [40, 3, 1, "", "max_scaling"], [40, 3, 1, "", "normalize"], [40, 3, 1, "", "normalize_multiple"], [40, 3, 1, "", "project_v_on_u"], [40, 3, 1, "", "project_vectors_on_eigenspace"], [40, 3, 1, "", "transformation_matrix"], [40, 3, 1, "", "truncpareto_cdf"]], "planner.logger": [[41, 1, 1, "", "Logger"]], "planner.logger.Logger": [[41, 2, 1, "", "create_distance_log"], [41, 2, 1, "", "create_reward_log"], [41, 2, 1, "", "get_log_name"], [41, 2, 1, "", "log_action_sampler"], [41, 2, 1, "", "log_node_extension"], [41, 2, 1, "", "log_node_pruning"], [41, 2, 1, "", "log_node_selection"], [41, 2, 1, "", "log_params"], [41, 2, 1, "", "log_search"], [41, 2, 1, "", "simple_path_statistics"], [41, 2, 1, "", "simple_progress_statistics"]], "planner.parameter_container": [[42, 1, 1, "", "ParameterContainer"], [42, 3, 1, "", "parse_hardware_parameters"]], "planner.parameter_container.ParameterContainer": [[42, 2, 1, "", "__contains__"], [42, 2, 1, "", "__delattr__"], [42, 2, 1, "", "__getattr__"], [42, 2, 1, "", "__setattr__"], [42, 2, 1, "", "__str__"], [42, 2, 1, "", "autofill"], [42, 5, 1, "", "cache_folder"], [42, 2, 1, "", "concat_list_of_arrays"], [42, 5, 1, "", "data_folder"], [42, 5, 1, "", "device"], [42, 5, 1, "", "examples_directory"], [42, 5, 1, "", "graph_cache_folder"], [42, 2, 1, "", "list_of_yaml_arrays_to_tensor"], [42, 2, 1, "", "load_base"], [42, 2, 1, "", "load_eigenspaces"], [42, 5, 1, "", "policy_filepath"], [42, 2, 1, "", "process_scaling"], [42, 2, 1, "", "reset_seed"], [42, 2, 1, "", "reward_distance_scaling_sqrt"], [42, 2, 1, "", "run_autofill_rule"], [42, 2, 1, "", "set_seed"], [42, 5, 1, "", "state_cache_folder"], [42, 5, 1, "", "trajectory_cache_folder"], [42, 2, 1, "", "update"], [42, 5, 1, "", "xml_folder"]], "planner.planner": [[43, 1, 1, "", "Planner"]], "planner.planner.Planner": [[43, 2, 1, "", "path_data"], [43, 2, 1, "", "path_trajectory"], [43, 2, 1, "", "plot_search_results"], [43, 2, 1, "", "search"], [43, 2, 1, "", "shortest_path_data"], [43, 2, 1, "", "shortest_path_trajectory"]], "planner.planner_helpers": [[44, 3, 1, "", "is_object_out_of_reach"], [44, 3, 1, "", "is_object_tilted"], [44, 3, 1, "", "torso_too_close_to_object"]], "planner.types": [[45, 6, 1, "", "ACTION_TYPE_DIRECTIONAL_MAP"], [45, 1, 1, "", "ActionMode"], [45, 1, 1, "", "ActionType"], [45, 1, 1, "", "ClippingType"], [45, 1, 1, "", "ControlType"], [45, 1, 1, "", "SelectionType"], [45, 3, 1, "", "convert_dtype"], [45, 3, 1, "", "set_default_device_and_dtype"]], "planner.types.ActionMode": [[45, 4, 1, "", "ABSOLUTE_ACTION"], [45, 4, 1, "", "RELATIVE_TO_PREVIOUS_END_ACTION"], [45, 2, 1, "", "__str__"]], "planner.types.ActionType": [[45, 4, 1, "", "CONTINUATION"], [45, 4, 1, "", "EXPERT"], [45, 4, 1, "", "GOAL"], [45, 4, 1, "", "NON_EXPERT"], [45, 4, 1, "", "PROXIMITY"], [45, 4, 1, "", "RANGED"], [45, 2, 1, "", "__str__"]], "planner.types.ClippingType": [[45, 4, 1, "", "SCALE"], [45, 2, 1, "", "__str__"]], "planner.types.ControlType": [[45, 4, 1, "", "FIRST_ORDER_HOLD"], [45, 2, 1, "", "__str__"]], "planner.types.SelectionType": [[45, 4, 1, "", "LAST"], [45, 2, 1, "", "__str__"]], "predictive_sampling": [[46, 1, 1, "", "PredictiveSampling"], [46, 1, 1, "", "PredictiveSamplingConfig"]], "predictive_sampling.PredictiveSampling": [[46, 2, 1, "", "action"], [46, 2, 1, "", "update_action"]], "predictive_sampling.PredictiveSamplingConfig": [[46, 4, 1, "", "noise_ramp"]], "scenes": [[48, 0, 0, "-", "scene_composer"], [49, 0, 0, "-", "scene_generator"], [50, 0, 0, "-", "scene_registry"], [47, 6, 1, "", "spot_sensors"]], "scenes.scene_composer": [[48, 1, 1, "", "ModelElement"], [48, 1, 1, "", "Scene"], [48, 1, 1, "", "SpotRobot"], [48, 3, 1, "", "make_default_header_includes"], [48, 1, 1, "", "mjBodyWrapper"], [48, 3, 1, "", "override"]], "scenes.scene_composer.ModelElement": [[48, 2, 1, "", "__getitem__"], [48, 2, 1, "", "autoload"], [48, 2, 1, "", "from_file"], [48, 2, 1, "", "from_string"], [48, 4, 1, "", "header_includes"], [48, 2, 1, "", "load"], [48, 4, 1, "", "name"], [48, 2, 1, "", "to_xml_file"], [48, 2, 1, "", "to_xml_string"], [48, 4, 1, "", "xml_content"]], "scenes.scene_composer.Scene": [[48, 4, 1, "", "contacts"], [48, 4, 1, "", "elements"], [48, 2, 1, "", "load"], [48, 4, 1, "", "sensors"], [48, 4, 1, "", "xml_dir"]], "scenes.scene_composer.SpotRobot": [[48, 2, 1, "", "load"], [48, 4, 1, "", "name"], [48, 4, 1, "", "xml_dir"]], "scenes.scene_composer.mjBodyWrapper": [[48, 2, 1, "", "__getattr__"], [48, 2, 1, "", "__setattr__"], [48, 2, 1, "", "attach"]], "scenes.scene_registry": [[50, 6, 1, "", "ASSET_DIR"], [50, 6, 1, "", "COMPONENTS_DIR"], [50, 6, 1, "", "OUTPUT_DIR"], [50, 1, 1, "", "SceneRegistry"], [50, 6, 1, "", "XML_DIR"], [50, 6, 1, "", "scene_registry"]], "scenes.scene_registry.SceneRegistry": [[50, 2, 1, "", "__getitem__"], [50, 2, 1, "", "add"], [50, 2, 1, "", "generate"], [50, 2, 1, "", "generate_all"]], "spot_box": [[51, 6, 1, "", "RESET_OBJECT_POSE"], [51, 1, 1, "", "SpotBox"], [51, 1, 1, "", "SpotBoxConfig"], [51, 6, 1, "", "Z_AXIS"]], "spot_box.SpotBox": [[51, 5, 1, "", "actuator_ctrlrange"], [51, 2, 1, "", "reset"], [51, 2, 1, "", "reward"]], "spot_box.SpotBoxConfig": [[51, 4, 1, "", "goal_position"], [51, 4, 1, "", "orientation_threshold"], [51, 4, 1, "", "w_gripper_proximity"], [51, 4, 1, "", "w_orientation"], [51, 4, 1, "", "w_torso_proximity"]], "spot_hand_navigation": [[52, 1, 1, "", "SpotHandNavigation"], [52, 1, 1, "", "SpotHandNavigationConfig"]], "spot_hand_navigation.SpotHandNavigation": [[52, 5, 1, "", "actuator_ctrlrange"], [52, 2, 1, "", "reset"], [52, 2, 1, "", "reward"]], "spot_hand_navigation.SpotHandNavigationConfig": [[52, 4, 1, "", "goal_position"]], "spot_navigation": [[53, 1, 1, "", "SpotNavigation"], [53, 1, 1, "", "SpotNavigationConfig"]], "spot_navigation.SpotNavigation": [[53, 5, 1, "", "actuator_ctrlrange"], [53, 2, 1, "", "reset"], [53, 2, 1, "", "reward"]], "spot_navigation.SpotNavigationConfig": [[53, 4, 1, "", "goal_position"]], "spot_tire": [[54, 6, 1, "", "RESET_OBJECT_POSE"], [54, 1, 1, "", "SpotTire"], [54, 1, 1, "", "SpotTireConfig"], [54, 6, 1, "", "TIRE_GOAL"], [54, 6, 1, "", "TIRE_HEIGHT"], [54, 6, 1, "", "Z_AXIS"]], "spot_tire.SpotTire": [[54, 5, 1, "", "actuator_ctrlrange"], [54, 2, 1, "", "reset"], [54, 2, 1, "", "reward"]], "spot_tire.SpotTireConfig": [[54, 4, 1, "", "fall_penalty"], [54, 4, 1, "", "goal_position"], [54, 4, 1, "", "goal_tire_pos"], [54, 4, 1, "", "gripper_goal_altitude"], [54, 4, 1, "", "gripper_goal_offset"], [54, 4, 1, "", "tire_fallen_threshold"], [54, 4, 1, "", "torso_goal_offset"], [54, 4, 1, "", "w_gripper_proximity"], [54, 4, 1, "", "w_leg_proximity"], [54, 4, 1, "", "w_tire_angular_velocity"], [54, 4, 1, "", "w_tire_linear_velocity"], [54, 4, 1, "", "w_torso_proximity"]], "tasks": [[55, 0, 0, "-", "acrobot"], [56, 0, 0, "-", "cartpole"], [57, 0, 0, "-", "cost_functions"], [58, 0, 0, "-", "cylinder_push"], [59, 3, 1, "", "get_registered_tasks"], [60, 0, 0, "-", "mujoco_task"], [59, 3, 1, "", "register_task"], [61, 0, 0, "-", "spot_base"], [62, 0, 0, "-", "spot_position_control"], [63, 0, 0, "-", "task"]], "tasks.acrobot": [[55, 1, 1, "", "Acrobot"], [55, 1, 1, "", "AcrobotConfig"], [55, 6, 1, "", "MODEL_PATH"]], "tasks.acrobot.Acrobot": [[55, 2, 1, "", "reset"]], "tasks.acrobot.AcrobotConfig": [[55, 4, 1, "", "cutoff_time"], [55, 4, 1, "", "p_vertical"], [55, 4, 1, "", "w_control"], [55, 4, 1, "", "w_velocity"], [55, 4, 1, "", "w_vertical"]], "tasks.cartpole": [[56, 1, 1, "", "Cartpole"], [56, 1, 1, "", "CartpoleConfig"], [56, 6, 1, "", "MODEL_PATH"]], "tasks.cartpole.Cartpole": [[56, 2, 1, "", "is_terminated"], [56, 2, 1, "", "reset"]], "tasks.cartpole.CartpoleConfig": [[56, 4, 1, "", "cutoff_time"], [56, 4, 1, "", "p_centered"], [56, 4, 1, "", "p_vertical"], [56, 4, 1, "", "w_centered"], [56, 4, 1, "", "w_control"], [56, 4, 1, "", "w_velocity"], [56, 4, 1, "", "w_vertical"]], "tasks.cost_functions": [[57, 3, 1, "", "quadratic_norm"], [57, 3, 1, "", "smooth_l1_norm"]], "tasks.cylinder_push": [[58, 1, 1, "", "CylinderPush"], [58, 1, 1, "", "CylinderPushConfig"], [58, 6, 1, "", "MODEL_PATH"]], "tasks.cylinder_push.CylinderPush": [[58, 2, 1, "", "reset"]], "tasks.cylinder_push.CylinderPushConfig": [[58, 4, 1, "", "cart_goal_position"], [58, 4, 1, "", "cutoff_time"], [58, 4, 1, "", "pusher_goal_offset"], [58, 4, 1, "", "w_cart_position"], [58, 4, 1, "", "w_pusher_proximity"], [58, 4, 1, "", "w_pusher_velocity"]], "tasks.mujoco_task": [[60, 1, 1, "", "MujocoTask"]], "tasks.mujoco_task.MujocoTask": [[60, 5, 1, "", "actuator_ctrlrange"], [60, 2, 1, "", "create_visualization"], [60, 5, 1, "", "default_idle_command"], [60, 5, 1, "", "dt"], [60, 2, 1, "", "is_terminated"], [60, 2, 1, "", "make_models"], [60, 5, 1, "", "nu"], [60, 2, 1, "", "reset"], [60, 2, 1, "", "rollout"], [60, 2, 1, "", "sim_step"]], "tasks.spot_base": [[61, 6, 1, "", "ConfigT"], [61, 6, 1, "", "DEFAULT_SPOT_ROLLOUT_CUTOFF_TIME"], [61, 6, 1, "", "GOAL_POSITIONS"], [61, 1, 1, "", "SpotBase"], [61, 1, 1, "", "SpotBaseConfig"]], "tasks.spot_base.SpotBase": [[61, 5, 1, "", "default_idle_command"], [61, 2, 1, "", "make_models"], [61, 2, 1, "", "rollout"], [61, 2, 1, "", "sim_step"]], "tasks.spot_base.SpotBaseConfig": [[61, 4, 1, "", "cutoff_time"], [61, 4, 1, "", "fall_penalty"], [61, 4, 1, "", "spot_fallen_threshold"], [61, 4, 1, "", "w_goal"], [61, 4, 1, "", "w_proximity"], [61, 4, 1, "", "w_vel"]], "tasks.spot_position_control": [[62, 6, 1, "", "MODEL_PATH"], [62, 1, 1, "", "SpotPositionControl"], [62, 1, 1, "", "SpotPositionControlConfig"]], "tasks.spot_position_control.SpotPositionControl": [[62, 2, 1, "", "reset"]], "tasks.spot_position_control.SpotPositionControlConfig": [[62, 4, 1, "", "default_command"], [62, 4, 1, "", "w_arms"], [62, 4, 1, "", "w_forward"], [62, 4, 1, "", "w_legs"]], "tasks.task": [[63, 6, 1, "", "ConfigT"], [63, 6, 1, "", "ModelT"], [63, 1, 1, "", "Task"], [63, 1, 1, "", "TaskConfig"]], "tasks.task.Task": [[63, 5, 1, "", "actuator_ctrlrange"], [63, 5, 1, "", "additional_task_info"], [63, 2, 1, "", "create_visualization"], [63, 5, 1, "", "dt"], [63, 2, 1, "", "is_terminated"], [63, 2, 1, "", "make_models"], [63, 2, 1, "", "reset"], [63, 2, 1, "", "reward"], [63, 2, 1, "", "rollout"], [63, 2, 1, "", "sim_step"]], "viser_app": [[64, 0, 0, "-", "app"], [65, 0, 0, "-", "gui"], [67, 0, 0, "-", "io"], [68, 0, 0, "-", "json_serializer"], [69, 0, 0, "-", "profiler"]], "viser_app.app": [[64, 1, 1, "", "ControlProcess"], [64, 6, 1, "", "JACTA_MANIPULATION_PATH"], [64, 1, 1, "", "SimulationProcess"], [64, 1, 1, "", "ViserApp"]], "viser_app.app.ControlProcess": [[64, 2, 1, "", "control_loop"], [64, 2, 1, "", "remove"], [64, 2, 1, "", "set_profiler_recording"], [64, 2, 1, "", "terminate"], [64, 2, 1, "", "write_controls"], [64, 2, 1, "", "write_traces"]], "viser_app.app.SimulationProcess": [[64, 2, 1, "", "reset"], [64, 2, 1, "", "write_states"]], "viser_app.app.ViserApp": [[64, 2, 1, "", "config_download_callback"], [64, 2, 1, "", "control_cycle_callback"], [64, 2, 1, "", "control_selection_callback"], [64, 2, 1, "", "enable_profiling_callback"], [64, 2, 1, "", "setup_context"], [64, 2, 1, "", "setup_controller"], [64, 2, 1, "", "setup_physics"], [64, 2, 1, "", "setup_task"], [64, 2, 1, "", "setup_visualization"], [64, 2, 1, "", "simulation_cycle_callback"], [64, 2, 1, "", "simulation_reset_callback"], [64, 2, 1, "", "task_selection_callback"]], "viser_app.gui": [[65, 6, 1, "", "DEFAULT_SLIDER_STEP_FLOAT"], [65, 6, 1, "", "DEFAULT_SLIDER_STEP_INT"], [65, 6, 1, "", "GOAL_RADIUS"], [65, 3, 1, "", "create_gui_elements"], [65, 3, 1, "", "slider"]], "viser_app.io": [[67, 1, 1, "", "HardwareIOContext"], [67, 1, 1, "", "IOContext"], [67, 1, 1, "", "SimulationIOContext"]], "viser_app.json_serializer": [[68, 1, 1, "", "ConfigEncoder"], [68, 3, 1, "", "decode_config"]], "viser_app.profiler": [[69, 1, 1, "", "ViserProfiler"], [69, 1, 1, "", "ViserProfilerConfig"]], "viser_app.profiler.ViserProfiler": [[69, 2, 1, "", "benchmark_wrapper"]], "visuals": [[71, 0, 0, "-", "meshcat_visualizer"], [72, 0, 0, "-", "mujoco_visualizer"], [73, 0, 0, "-", "quaternion_operations"]], "visuals.meshcat_visualizer": [[71, 1, 1, "", "MeshPhysicalMaterial"], [71, 1, 1, "", "MeshToonMaterial"], [71, 1, 1, "", "Plane"], [71, 1, 1, "", "SetPropertyCapital"], [71, 3, 1, "", "add_box"], [71, 3, 1, "", "add_capsule"], [71, 3, 1, "", "add_cylinder"], [71, 3, 1, "", "add_ellipsoid"], [71, 3, 1, "", "add_ground"], [71, 3, 1, "", "add_mesh"], [71, 3, 1, "", "add_mesh_by_name"], [71, 3, 1, "", "add_object"], [71, 3, 1, "", "add_plane"], [71, 3, 1, "", "add_sphere"], [71, 3, 1, "", "close_window"], [71, 3, 1, "", "rgb_float_to_hex"], [71, 3, 1, "", "rgb_int_to_hex"], [71, 3, 1, "", "rgba_overwrite"], [71, 3, 1, "", "set_color"], [71, 3, 1, "", "set_object"], [71, 3, 1, "", "set_property_capital"], [71, 3, 1, "", "setup_visualizer"]], "visuals.meshcat_visualizer.SetPropertyCapital": [[71, 2, 1, "", "lower"]], "visuals.mujoco_visualizer": [[72, 6, 1, "", "DEFAULT_COLORS"], [72, 1, 1, "", "MujocoRenderer"], [72, 6, 1, "", "RGBA"], [72, 6, 1, "", "Trajectory"]], "visuals.mujoco_visualizer.MujocoRenderer": [[72, 2, 1, "", "add_marker"], [72, 2, 1, "", "animate_marker"], [72, 2, 1, "", "extract_joint_positions"], [72, 5, 1, "", "framerate"], [72, 2, 1, "", "get_html"], [72, 2, 1, "", "init_ee_position"], [72, 2, 1, "", "init_points"], [72, 2, 1, "", "initialize_candidate_trajectories"], [72, 2, 1, "", "initialize_markers"], [72, 2, 1, "", "load_model"], [72, 2, 1, "", "play"], [72, 2, 1, "", "render"], [72, 2, 1, "", "reset"], [72, 2, 1, "", "save"], [72, 2, 1, "", "set_marker"], [72, 2, 1, "", "set_model"], [72, 2, 1, "", "show"], [72, 2, 1, "", "show_box_goal"], [72, 2, 1, "", "show_goal"], [72, 2, 1, "", "show_trajectory"], [72, 2, 1, "", "update_candidate_trajectories"], [72, 2, 1, "", "update_ee_position"], [72, 2, 1, "", "update_markers"], [72, 2, 1, "", "update_points"], [72, 2, 1, "", "wait_for_input"]], "visuals.quaternion_operations": [[73, 3, 1, "", "action_inverse"], [73, 3, 1, "", "left_action"], [73, 3, 1, "", "pose_to_transformation_matrix"], [73, 3, 1, "", "project_action"], [73, 3, 1, "", "quaternion_inverse"], [73, 3, 1, "", "quaternion_to_quaternion_map_jacobian"], [73, 3, 1, "", "quaternion_to_transformation_matrix"], [73, 3, 1, "", "right_action"], [73, 3, 1, "", "rotation_matrix"], [73, 3, 1, "", "skew_symmetric"], [73, 3, 1, "", "vector_projection"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property", "6": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"]}, "titleterms": {"benchmark": [0, 1, 2], "modul": [0, 2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73], "content": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73], "submodul": [1, 5, 9, 15, 19, 22, 24, 39, 47, 59, 66, 70], "profil": [2, 69], "cmae": 3, "control": [4, 5, 6], "packag": [5, 47, 59], "sampling_bas": 6, "cross_entropy_method": 7, "dynam": [8, 9, 10, 11, 12, 13], "action_trajectori": 8, "locomotion_pl": 10, "mujoco_dynam": 11, "todo": 11, "slecleach": 11, "add": 11, "support": 11, "acceler": 11, "base": [11, 14], "sensor": 11, "mujoco_util": 12, "state_help": 13, "environ": [14, 15, 16], "tire_state_cache_gener": 16, "expert": [17, 18, 19, 20, 21, 22, 23], "expert_sampl": 18, "subpackag": 19, "network": [20, 26], "primit": [21, 22, 23], "spot_standing_box": 23, "learn": [24, 25, 26, 27, 28], "learner": 25, "normal": 27, "replay_buff": 28, "mppi": 29, "particle_filt": 30, "path_resolv": 31, "planner": [32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "action_processor": 32, "action_sampl": 33, "clipping_method": 34, "data_collect": 35, "graph": 36, "graph_visu": 37, "graph_work": 38, "linear_algebra": 40, "logger": 41, "parameter_contain": 42, "planner_help": 44, "type": 45, "predictive_sampl": 46, "scene": [47, 48, 49, 50], "scene_compos": 48, "scene_gener": 49, "scene_registri": 50, "spot_box": 51, "spot_hand_navig": 52, "spot_navig": 53, "spot_tir": 54, "task": [55, 56, 57, 58, 59, 60, 61, 62, 63], "acrobot": 55, "cartpol": 56, "cost_funct": 57, "cylinder_push": 58, "mujoco_task": 60, "spot_bas": 61, "spot_position_control": 62, "viser_app": [64, 65, 66, 67, 68, 69], "app": 64, "gui": 65, "io": 67, "json_seri": 68, "visual": [70, 71, 72, 73], "meshcat_visu": 71, "mujoco_visu": 72, "quaternion_oper": 73, "jacta": 74, "manipul": 74}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"benchmarking.benchmarking": [[0, "module-benchmarking.benchmarking"]], "Module Contents": [[0, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [20, "module-contents"], [21, "module-contents"], [23, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [48, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [57, "module-contents"], [58, "module-contents"], [60, "module-contents"], [61, "module-contents"], [62, "module-contents"], [63, "module-contents"], [64, "module-contents"], [65, "module-contents"], [67, "module-contents"], [68, "module-contents"], [69, "module-contents"], [71, "module-contents"], [72, "module-contents"], [73, "module-contents"]], "benchmarking": [[1, "module-benchmarking"]], "Submodules": [[1, "submodules"], [5, "submodules"], [9, "submodules"], [15, "submodules"], [19, "submodules"], [22, "submodules"], [24, "submodules"], [39, "submodules"], [47, "submodules"], [59, "submodules"], [66, "submodules"], [70, "submodules"]], "benchmarking.profiling": [[2, "module-benchmarking.profiling"]], "cmaes": [[3, "module-cmaes"]], "controllers.controller": [[4, "module-controllers.controller"]], "controllers": [[5, "module-controllers"]], "Package Contents": [[5, "package-contents"], [47, "package-contents"], [59, "package-contents"]], "controllers.sampling_base": [[6, "module-controllers.sampling_base"]], "cross_entropy_method": [[7, "module-cross_entropy_method"]], "dynamics.action_trajectory": [[8, "module-dynamics.action_trajectory"]], "dynamics": [[9, "module-dynamics"]], "dynamics.locomotion_plant": [[10, "module-dynamics.locomotion_plant"]], "dynamics.mujoco_dynamics": [[11, "module-dynamics.mujoco_dynamics"]], "TODO: slecleach add support for acceleration-based sensors": [[11, "todo-slecleach-add-support-for-acceleration-based-sensors"]], "dynamics.mujoco_utils": [[12, "module-dynamics.mujoco_utils"]], "dynamics.state_helpers": [[13, "module-dynamics.state_helpers"]], "environments.base": [[14, "module-environments.base"]], "environments": [[15, "module-environments"]], "environments.tire_state_cache_generator": [[16, "module-environments.tire_state_cache_generator"]], "experts.expert": [[17, "module-experts.expert"]], "experts.expert_sampler": [[18, "module-experts.expert_sampler"]], "experts": [[19, "module-experts"]], "Subpackages": [[19, "subpackages"]], "experts.network": [[20, "module-experts.network"]], "experts.primitive": [[21, "module-experts.primitive"]], "experts.primitives": [[22, "module-experts.primitives"]], "experts.primitives.spot_standing_box": [[23, "module-experts.primitives.spot_standing_box"]], "learning": [[24, "module-learning"]], "learning.learner": [[25, "module-learning.learner"]], "learning.networks": [[26, "module-learning.networks"]], "learning.normalizer": [[27, "module-learning.normalizer"]], "learning.replay_buffer": [[28, "module-learning.replay_buffer"]], "mppi": [[29, "module-mppi"]], "particle_filter": [[30, "module-particle_filter"]], "path_resolvers": [[31, "module-path_resolvers"]], "planner.action_processor": [[32, "module-planner.action_processor"]], "planner.action_sampler": [[33, "module-planner.action_sampler"]], "planner.clipping_method": [[34, "module-planner.clipping_method"]], "planner.data_collection": [[35, "module-planner.data_collection"]], "planner.graph": [[36, "module-planner.graph"]], "planner.graph_visuals": [[37, "module-planner.graph_visuals"]], "planner.graph_worker": [[38, "module-planner.graph_worker"]], "planner": [[39, "module-planner"]], "planner.linear_algebra": [[40, "module-planner.linear_algebra"]], "planner.logger": [[41, "module-planner.logger"]], "planner.parameter_container": [[42, "module-planner.parameter_container"]], "planner.planner": [[43, "module-planner.planner"]], "planner.planner_helpers": [[44, "module-planner.planner_helpers"]], "planner.types": [[45, "module-planner.types"]], "predictive_sampling": [[46, "module-predictive_sampling"]], "scenes": [[47, "module-scenes"]], "scenes.scene_composer": [[48, "module-scenes.scene_composer"]], "scenes.scene_generator": [[49, "module-scenes.scene_generator"]], "scenes.scene_registry": [[50, "module-scenes.scene_registry"]], "spot_box": [[51, "module-spot_box"]], "spot_hand_navigation": [[52, "module-spot_hand_navigation"]], "spot_navigation": [[53, "module-spot_navigation"]], "spot_tire": [[54, "module-spot_tire"]], "tasks.acrobot": [[55, "module-tasks.acrobot"]], "tasks.cartpole": [[56, "module-tasks.cartpole"]], "tasks.cost_functions": [[57, "module-tasks.cost_functions"]], "tasks.cylinder_push": [[58, "module-tasks.cylinder_push"]], "tasks": [[59, "module-tasks"]], "tasks.mujoco_task": [[60, "module-tasks.mujoco_task"]], "tasks.spot_base": [[61, "module-tasks.spot_base"]], "tasks.spot_position_control": [[62, "module-tasks.spot_position_control"]], "tasks.task": [[63, "module-tasks.task"]], "viser_app.app": [[64, "module-viser_app.app"]], "viser_app.gui": [[65, "module-viser_app.gui"]], "viser_app": [[66, "module-viser_app"]], "viser_app.io": [[67, "module-viser_app.io"]], "viser_app.json_serializer": [[68, "module-viser_app.json_serializer"]], "viser_app.profiler": [[69, "module-viser_app.profiler"]], "visuals": [[70, "module-visuals"]], "visuals.meshcat_visualizer": [[71, "module-visuals.meshcat_visualizer"]], "visuals.mujoco_visualizer": [[72, "module-visuals.mujoco_visualizer"]], "visuals.quaternion_operations": [[73, "module-visuals.quaternion_operations"]], "jacta-manipulation": [[74, "jacta-manipulation"]]}, "indexentries": {"benchmark (class in benchmarking.benchmarking)": [[0, "benchmarking.benchmarking.Benchmark"]], "benchmarking.benchmarking": [[0, "module-benchmarking.benchmarking"]], "module": [[0, "module-benchmarking.benchmarking"], [1, "module-benchmarking"], [2, "module-benchmarking.profiling"], [3, "module-cmaes"], [4, "module-controllers.controller"], [5, "module-controllers"], [6, "module-controllers.sampling_base"], [7, "module-cross_entropy_method"], [8, "module-dynamics.action_trajectory"], [9, "module-dynamics"], [10, "module-dynamics.locomotion_plant"], [11, "module-dynamics.mujoco_dynamics"], [12, "module-dynamics.mujoco_utils"], [13, "module-dynamics.state_helpers"], [14, "module-environments.base"], [15, "module-environments"], [16, "module-environments.tire_state_cache_generator"], [17, "module-experts.expert"], [18, "module-experts.expert_sampler"], [19, "module-experts"], [20, "module-experts.network"], [21, "module-experts.primitive"], [22, "module-experts.primitives"], [23, "module-experts.primitives.spot_standing_box"], [24, "module-learning"], [25, "module-learning.learner"], [26, "module-learning.networks"], [27, "module-learning.normalizer"], [28, "module-learning.replay_buffer"], [29, "module-mppi"], [30, "module-particle_filter"], [31, "module-path_resolvers"], [32, "module-planner.action_processor"], [33, "module-planner.action_sampler"], [34, "module-planner.clipping_method"], [35, "module-planner.data_collection"], [36, "module-planner.graph"], [37, "module-planner.graph_visuals"], [38, "module-planner.graph_worker"], [39, "module-planner"], [40, "module-planner.linear_algebra"], [41, "module-planner.logger"], [42, "module-planner.parameter_container"], [43, "module-planner.planner"], [44, "module-planner.planner_helpers"], [45, "module-planner.types"], [46, "module-predictive_sampling"], [47, "module-scenes"], [48, "module-scenes.scene_composer"], [49, "module-scenes.scene_generator"], [50, "module-scenes.scene_registry"], [51, "module-spot_box"], [52, "module-spot_hand_navigation"], [53, "module-spot_navigation"], [54, "module-spot_tire"], [55, "module-tasks.acrobot"], [56, "module-tasks.cartpole"], [57, "module-tasks.cost_functions"], [58, "module-tasks.cylinder_push"], [59, "module-tasks"], [60, "module-tasks.mujoco_task"], [61, "module-tasks.spot_base"], [62, "module-tasks.spot_position_control"], [63, "module-tasks.task"], [64, "module-viser_app.app"], [65, "module-viser_app.gui"], [66, "module-viser_app"], [67, "module-viser_app.io"], [68, "module-viser_app.json_serializer"], [69, "module-viser_app.profiler"], [70, "module-visuals"], [71, "module-visuals.meshcat_visualizer"], [72, "module-visuals.mujoco_visualizer"], [73, "module-visuals.quaternion_operations"]], "print_results() (benchmarking.benchmarking.benchmark method)": [[0, "benchmarking.benchmarking.Benchmark.print_results"]], "visualize_results() (benchmarking.benchmarking.benchmark method)": [[0, "benchmarking.benchmarking.Benchmark.visualize_results"]], "benchmarking": [[1, "module-benchmarking"]], "benchmarking.profiling": [[2, "module-benchmarking.profiling"]], "run_example() (in module benchmarking.profiling)": [[2, "benchmarking.profiling.run_example"]], "cmaes (class in cmaes)": [[3, "cmaes.CMAES"]], "cmaesconfig (class in cmaes)": [[3, "cmaes.CMAESConfig"]], "action() (cmaes.cmaes method)": [[3, "cmaes.CMAES.action"]], "cmaes": [[3, "module-cmaes"]], "max_iter (cmaes.cmaesconfig attribute)": [[3, "cmaes.CMAESConfig.max_iter"]], "update_action() (cmaes.cmaes method)": [[3, "cmaes.CMAES.update_action"]], "controller (class in controllers.controller)": [[4, "controllers.controller.Controller"]], "controllerconfig (class in controllers.controller)": [[4, "controllers.controller.ControllerConfig"]], "action() (controllers.controller.controller method)": [[4, "controllers.controller.Controller.action"]], "controllers.controller": [[4, "module-controllers.controller"]], "controls (controllers.controller.controller property)": [[4, "controllers.controller.Controller.controls"]], "make_models() (controllers.controller.controller method)": [[4, "controllers.controller.Controller.make_models"]], "reset() (controllers.controller.controller method)": [[4, "controllers.controller.Controller.reset"]], "rollout_times (controllers.controller.controller property)": [[4, "controllers.controller.Controller.rollout_times"]], "set_default_controls() (controllers.controller.controller method)": [[4, "controllers.controller.Controller.set_default_controls"]], "update_action() (controllers.controller.controller method)": [[4, "controllers.controller.Controller.update_action"]], "controllers": [[5, "module-controllers"]], "get_registered_controllers() (in module controllers)": [[5, "controllers.get_registered_controllers"]], "register_controller() (in module controllers)": [[5, "controllers.register_controller"]], "max_num_traces (in module controllers.sampling_base)": [[6, "controllers.sampling_base.MAX_NUM_TRACES"]], "samplingbase (class in controllers.sampling_base)": [[6, "controllers.sampling_base.SamplingBase"]], "samplingbaseconfig (class in controllers.sampling_base)": [[6, "controllers.sampling_base.SamplingBaseConfig"]], "action() (controllers.sampling_base.samplingbase method)": [[6, "controllers.sampling_base.SamplingBase.action"]], "control_freq (controllers.sampling_base.samplingbaseconfig attribute)": [[6, "controllers.sampling_base.SamplingBaseConfig.control_freq"]], "controllers.sampling_base": [[6, "module-controllers.sampling_base"]], "controls (controllers.sampling_base.samplingbase property)": [[6, "controllers.sampling_base.SamplingBase.controls"]], "make_models() (controllers.sampling_base.samplingbase method)": [[6, "controllers.sampling_base.SamplingBase.make_models"]], "make_spline() (in module controllers.sampling_base)": [[6, "controllers.sampling_base.make_spline"]], "num_nodes (controllers.sampling_base.samplingbaseconfig attribute)": [[6, "controllers.sampling_base.SamplingBaseConfig.num_nodes"]], "num_rollouts (controllers.sampling_base.samplingbaseconfig attribute)": [[6, "controllers.sampling_base.SamplingBaseConfig.num_rollouts"]], "reset() (controllers.sampling_base.samplingbase method)": [[6, "controllers.sampling_base.SamplingBase.reset"]], "rollout_times (controllers.sampling_base.samplingbase property)": [[6, "controllers.sampling_base.SamplingBase.rollout_times"]], "set_default_controls() (controllers.sampling_base.samplingbase method)": [[6, "controllers.sampling_base.SamplingBase.set_default_controls"]], "spline (controllers.sampling_base.samplingbase property)": [[6, "controllers.sampling_base.SamplingBase.spline"]], "spline_order (controllers.sampling_base.samplingbaseconfig attribute)": [[6, "controllers.sampling_base.SamplingBaseConfig.spline_order"]], "spline_timesteps (controllers.sampling_base.samplingbase property)": [[6, "controllers.sampling_base.SamplingBase.spline_timesteps"]], "update_action() (controllers.sampling_base.samplingbase method)": [[6, "controllers.sampling_base.SamplingBase.update_action"]], "update_spline() (controllers.sampling_base.samplingbase method)": [[6, "controllers.sampling_base.SamplingBase.update_spline"]], "update_traces() (controllers.sampling_base.samplingbase method)": [[6, "controllers.sampling_base.SamplingBase.update_traces"]], "use_noise_ramp (controllers.sampling_base.samplingbaseconfig attribute)": [[6, "controllers.sampling_base.SamplingBaseConfig.use_noise_ramp"]], "crossentropyconfig (class in cross_entropy_method)": [[7, "cross_entropy_method.CrossEntropyConfig"]], "crossentropymethod (class in cross_entropy_method)": [[7, "cross_entropy_method.CrossEntropyMethod"]], "action() (cross_entropy_method.crossentropymethod method)": [[7, "cross_entropy_method.CrossEntropyMethod.action"]], "cross_entropy_method": [[7, "module-cross_entropy_method"]], "horizon (cross_entropy_method.crossentropyconfig attribute)": [[7, "cross_entropy_method.CrossEntropyConfig.horizon"]], "noise_ramp (cross_entropy_method.crossentropyconfig attribute)": [[7, "cross_entropy_method.CrossEntropyConfig.noise_ramp"]], "num_elites (cross_entropy_method.crossentropyconfig attribute)": [[7, "cross_entropy_method.CrossEntropyConfig.num_elites"]], "num_rollouts (cross_entropy_method.crossentropyconfig attribute)": [[7, "cross_entropy_method.CrossEntropyConfig.num_rollouts"]], "sigma_max (cross_entropy_method.crossentropyconfig attribute)": [[7, "cross_entropy_method.CrossEntropyConfig.sigma_max"]], "update_action() (cross_entropy_method.crossentropymethod method)": [[7, "cross_entropy_method.CrossEntropyMethod.update_action"]], "create_action_trajectories() (in module dynamics.action_trajectory)": [[8, "dynamics.action_trajectory.create_action_trajectories"]], "create_action_trajectory() (in module dynamics.action_trajectory)": [[8, "dynamics.action_trajectory.create_action_trajectory"]], "dynamics.action_trajectory": [[8, "module-dynamics.action_trajectory"]], "dynamics": [[9, "module-dynamics"]], "locomotionplant (class in dynamics.locomotion_plant)": [[10, "dynamics.locomotion_plant.LocomotionPlant"]], "dynamics() (dynamics.locomotion_plant.locomotionplant method)": [[10, "dynamics.locomotion_plant.LocomotionPlant.dynamics"]], "dynamics.locomotion_plant": [[10, "module-dynamics.locomotion_plant"]], "get_sensor() (dynamics.locomotion_plant.locomotionplant method)": [[10, "dynamics.locomotion_plant.LocomotionPlant.get_sensor"]], "isaac_to_mujoco() (in module dynamics.locomotion_plant)": [[10, "dynamics.locomotion_plant.isaac_to_mujoco"]], "isaac_to_mujoco_ixs (in module dynamics.locomotion_plant)": [[10, "dynamics.locomotion_plant.isaac_to_mujoco_ixs"]], "load_policy() (dynamics.locomotion_plant.locomotionplant method)": [[10, "dynamics.locomotion_plant.LocomotionPlant.load_policy"]], "mujoco_to_isaac() (in module dynamics.locomotion_plant)": [[10, "dynamics.locomotion_plant.mujoco_to_isaac"]], "mujoco_to_isaac_ixs (in module dynamics.locomotion_plant)": [[10, "dynamics.locomotion_plant.mujoco_to_isaac_ixs"]], "process_observations() (dynamics.locomotion_plant.locomotionplant method)": [[10, "dynamics.locomotion_plant.LocomotionPlant.process_observations"]], "process_output() (dynamics.locomotion_plant.locomotionplant method)": [[10, "dynamics.locomotion_plant.LocomotionPlant.process_output"]], "run_policy() (dynamics.locomotion_plant.locomotionplant method)": [[10, "dynamics.locomotion_plant.LocomotionPlant.run_policy"]], "mujocoplant (class in dynamics.mujoco_dynamics)": [[11, "dynamics.mujoco_dynamics.MujocoPlant"]], "decompose_state_dimensions() (in module dynamics.mujoco_dynamics)": [[11, "dynamics.mujoco_dynamics.decompose_state_dimensions"]], "dynamics() (dynamics.mujoco_dynamics.mujocoplant method)": [[11, "dynamics.mujoco_dynamics.MujocoPlant.dynamics"]], "dynamics.mujoco_dynamics": [[11, "module-dynamics.mujoco_dynamics"]], "get_action() (dynamics.mujoco_dynamics.mujocoplant method)": [[11, "dynamics.mujoco_dynamics.MujocoPlant.get_action"]], "get_collision_free() (dynamics.mujoco_dynamics.mujocoplant method)": [[11, "dynamics.mujoco_dynamics.MujocoPlant.get_collision_free"]], "get_gradients() (dynamics.mujoco_dynamics.mujocoplant method)": [[11, "dynamics.mujoco_dynamics.MujocoPlant.get_gradients"]], "get_joint_dimensions() (in module dynamics.mujoco_dynamics)": [[11, "dynamics.mujoco_dynamics.get_joint_dimensions"]], "get_mass() (dynamics.mujoco_dynamics.mujocoplant method)": [[11, "dynamics.mujoco_dynamics.MujocoPlant.get_mass"]], "get_quat_indices() (dynamics.mujoco_dynamics.mujocoplant method)": [[11, "dynamics.mujoco_dynamics.MujocoPlant.get_quat_indices"]], "get_sensor() (dynamics.mujoco_dynamics.mujocoplant method)": [[11, "dynamics.mujoco_dynamics.MujocoPlant.get_sensor"]], "get_state() (dynamics.mujoco_dynamics.mujocoplant method)": [[11, "dynamics.mujoco_dynamics.MujocoPlant.get_state"]], "initialize() (dynamics.mujoco_dynamics.mujocoplant method)": [[11, "dynamics.mujoco_dynamics.MujocoPlant.initialize"]], "normalize_state() (dynamics.mujoco_dynamics.mujocoplant method)": [[11, "dynamics.mujoco_dynamics.MujocoPlant.normalize_state"]], "scale_distances() (in module dynamics.mujoco_dynamics)": [[11, "dynamics.mujoco_dynamics.scale_distances"]], "scaled_distances_to() (dynamics.mujoco_dynamics.mujocoplant method)": [[11, "dynamics.mujoco_dynamics.MujocoPlant.scaled_distances_to"]], "set_action() (dynamics.mujoco_dynamics.mujocoplant method)": [[11, "dynamics.mujoco_dynamics.MujocoPlant.set_action"]], "set_state() (dynamics.mujoco_dynamics.mujocoplant method)": [[11, "dynamics.mujoco_dynamics.MujocoPlant.set_state"]], "state_addition() (dynamics.mujoco_dynamics.mujocoplant method)": [[11, "dynamics.mujoco_dynamics.MujocoPlant.state_addition"]], "state_difference() (dynamics.mujoco_dynamics.mujocoplant method)": [[11, "dynamics.mujoco_dynamics.MujocoPlant.state_difference"]], "update_sensor() (dynamics.mujoco_dynamics.mujocoplant method)": [[11, "dynamics.mujoco_dynamics.MujocoPlant.update_sensor"]], "dynamics.mujoco_utils": [[12, "module-dynamics.mujoco_utils"]], "get_body_name() (in module dynamics.mujoco_utils)": [[12, "dynamics.mujoco_utils.get_body_name"]], "get_geom_name() (in module dynamics.mujoco_utils)": [[12, "dynamics.mujoco_utils.get_geom_name"]], "get_geometry_rgba() (in module dynamics.mujoco_utils)": [[12, "dynamics.mujoco_utils.get_geometry_rgba"]], "get_mesh_data() (in module dynamics.mujoco_utils)": [[12, "dynamics.mujoco_utils.get_mesh_data"]], "commandarray (class in dynamics.state_helpers)": [[13, "dynamics.state_helpers.CommandArray"]], "sensorarray (class in dynamics.state_helpers)": [[13, "dynamics.state_helpers.SensorArray"]], "statearray (class in dynamics.state_helpers)": [[13, "dynamics.state_helpers.StateArray"]], "arm (dynamics.state_helpers.commandarray attribute)": [[13, "dynamics.state_helpers.CommandArray.arm"]], "arm (dynamics.state_helpers.statearray attribute)": [[13, "dynamics.state_helpers.StateArray.arm"]], "arm_vel (dynamics.state_helpers.statearray attribute)": [[13, "dynamics.state_helpers.StateArray.arm_vel"]], "as_dict() (dynamics.state_helpers.commandarray class method)": [[13, "dynamics.state_helpers.CommandArray.as_dict"]], "base_ang_vel (dynamics.state_helpers.statearray attribute)": [[13, "dynamics.state_helpers.StateArray.base_ang_vel"]], "base_height (dynamics.state_helpers.commandarray attribute)": [[13, "dynamics.state_helpers.CommandArray.base_height"]], "base_lin_vel (dynamics.state_helpers.statearray attribute)": [[13, "dynamics.state_helpers.StateArray.base_lin_vel"]], "base_pitch (dynamics.state_helpers.commandarray attribute)": [[13, "dynamics.state_helpers.CommandArray.base_pitch"]], "base_quat (dynamics.state_helpers.statearray attribute)": [[13, "dynamics.state_helpers.StateArray.base_quat"]], "base_roll (dynamics.state_helpers.commandarray attribute)": [[13, "dynamics.state_helpers.CommandArray.base_roll"]], "create() (dynamics.state_helpers.commandarray class method)": [[13, "dynamics.state_helpers.CommandArray.create"]], "dynamics.state_helpers": [[13, "module-dynamics.state_helpers"]], "fl_leg (dynamics.state_helpers.commandarray attribute)": [[13, "dynamics.state_helpers.CommandArray.fl_leg"]], "fl_leg (dynamics.state_helpers.statearray attribute)": [[13, "dynamics.state_helpers.StateArray.fl_leg"]], "fl_leg_vel (dynamics.state_helpers.statearray attribute)": [[13, "dynamics.state_helpers.StateArray.fl_leg_vel"]], "fngr_object (dynamics.state_helpers.sensorarray attribute)": [[13, "dynamics.state_helpers.SensorArray.fngr_object"]], "fr_leg (dynamics.state_helpers.commandarray attribute)": [[13, "dynamics.state_helpers.CommandArray.fr_leg"]], "fr_leg (dynamics.state_helpers.statearray attribute)": [[13, "dynamics.state_helpers.StateArray.fr_leg"]], "fr_leg_vel (dynamics.state_helpers.statearray attribute)": [[13, "dynamics.state_helpers.StateArray.fr_leg_vel"]], "hl_leg (dynamics.state_helpers.commandarray attribute)": [[13, "dynamics.state_helpers.CommandArray.hl_leg"]], "hl_leg (dynamics.state_helpers.statearray attribute)": [[13, "dynamics.state_helpers.StateArray.hl_leg"]], "hl_leg_vel (dynamics.state_helpers.statearray attribute)": [[13, "dynamics.state_helpers.StateArray.hl_leg_vel"]], "hr_leg (dynamics.state_helpers.commandarray attribute)": [[13, "dynamics.state_helpers.CommandArray.hr_leg"]], "hr_leg (dynamics.state_helpers.statearray attribute)": [[13, "dynamics.state_helpers.StateArray.hr_leg"]], "hr_leg_vel (dynamics.state_helpers.statearray attribute)": [[13, "dynamics.state_helpers.StateArray.hr_leg_vel"]], "lateral_vel (dynamics.state_helpers.commandarray attribute)": [[13, "dynamics.state_helpers.CommandArray.lateral_vel"]], "legs (dynamics.state_helpers.commandarray attribute)": [[13, "dynamics.state_helpers.CommandArray.legs"]], "legs (dynamics.state_helpers.statearray attribute)": [[13, "dynamics.state_helpers.StateArray.legs"]], "legs_vel (dynamics.state_helpers.statearray attribute)": [[13, "dynamics.state_helpers.StateArray.legs_vel"]], "non_velocities (dynamics.state_helpers.commandarray attribute)": [[13, "dynamics.state_helpers.CommandArray.non_velocities"]], "object_ang_vel (dynamics.state_helpers.statearray attribute)": [[13, "dynamics.state_helpers.StateArray.object_ang_vel"]], "object_lin_vel (dynamics.state_helpers.statearray attribute)": [[13, "dynamics.state_helpers.StateArray.object_lin_vel"]], "object_pos (dynamics.state_helpers.statearray attribute)": [[13, "dynamics.state_helpers.StateArray.object_pos"]], "object_quat (dynamics.state_helpers.statearray attribute)": [[13, "dynamics.state_helpers.StateArray.object_quat"]], "object_y_axis (dynamics.state_helpers.sensorarray attribute)": [[13, "dynamics.state_helpers.SensorArray.object_y_axis"]], "set_defaults() (dynamics.state_helpers.commandarray class method)": [[13, "dynamics.state_helpers.CommandArray.set_defaults"]], "size (dynamics.state_helpers.commandarray attribute)": [[13, "dynamics.state_helpers.CommandArray.size"]], "size (dynamics.state_helpers.statearray attribute)": [[13, "dynamics.state_helpers.StateArray.size"]], "slice_union() (in module dynamics.state_helpers)": [[13, "dynamics.state_helpers.slice_union"]], "trace_body (dynamics.state_helpers.sensorarray attribute)": [[13, "dynamics.state_helpers.SensorArray.trace_body"]], "trace_gripper (dynamics.state_helpers.sensorarray attribute)": [[13, "dynamics.state_helpers.SensorArray.trace_gripper"]], "update() (dynamics.state_helpers.commandarray class method)": [[13, "dynamics.state_helpers.CommandArray.update"]], "velocities (dynamics.state_helpers.commandarray attribute)": [[13, "dynamics.state_helpers.CommandArray.velocities"]], "yaw_vel (dynamics.state_helpers.commandarray attribute)": [[13, "dynamics.state_helpers.CommandArray.yaw_vel"]], "dexterityenv (class in environments.base)": [[14, "environments.base.DexterityEnv"]], "__post_init__() (environments.base.dexterityenv method)": [[14, "environments.base.DexterityEnv.__post_init__"]], "action_space (environments.base.dexterityenv property)": [[14, "environments.base.DexterityEnv.action_space"]], "check_failure() (environments.base.dexterityenv method)": [[14, "environments.base.DexterityEnv.check_failure"]], "check_success() (environments.base.dexterityenv method)": [[14, "environments.base.DexterityEnv.check_success"]], "close() (environments.base.dexterityenv method)": [[14, "environments.base.DexterityEnv.close"]], "environments.base": [[14, "module-environments.base"]], "get_metrics() (environments.base.dexterityenv method)": [[14, "environments.base.DexterityEnv.get_metrics"]], "metrics_keys (environments.base.dexterityenv property)": [[14, "environments.base.DexterityEnv.metrics_keys"]], "params (environments.base.dexterityenv attribute)": [[14, "environments.base.DexterityEnv.params"]], "post_physics_step() (environments.base.dexterityenv method)": [[14, "environments.base.DexterityEnv.post_physics_step"]], "preserve_reset_obs() (environments.base.dexterityenv method)": [[14, "environments.base.DexterityEnv.preserve_reset_obs"]], "process_resets() (environments.base.dexterityenv method)": [[14, "environments.base.DexterityEnv.process_resets"]], "reset() (environments.base.dexterityenv method)": [[14, "environments.base.DexterityEnv.reset"]], "reset_ixs() (environments.base.dexterityenv method)": [[14, "environments.base.DexterityEnv.reset_ixs"]], "reset_states() (environments.base.dexterityenv method)": [[14, "environments.base.DexterityEnv.reset_states"]], "scale_actions() (environments.base.dexterityenv method)": [[14, "environments.base.DexterityEnv.scale_actions"]], "set_current_states() (environments.base.dexterityenv method)": [[14, "environments.base.DexterityEnv.set_current_states"]], "set_goal_states() (environments.base.dexterityenv method)": [[14, "environments.base.DexterityEnv.set_goal_states"]], "set_previous_end_actions() (environments.base.dexterityenv method)": [[14, "environments.base.DexterityEnv.set_previous_end_actions"]], "set_start_states() (environments.base.dexterityenv method)": [[14, "environments.base.DexterityEnv.set_start_states"]], "setup_action_processor() (environments.base.dexterityenv method)": [[14, "environments.base.DexterityEnv.setup_action_processor"]], "setup_buffers() (environments.base.dexterityenv method)": [[14, "environments.base.DexterityEnv.setup_buffers"]], "setup_plant() (environments.base.dexterityenv method)": [[14, "environments.base.DexterityEnv.setup_plant"]], "step() (environments.base.dexterityenv method)": [[14, "environments.base.DexterityEnv.step"]], "step_sim() (environments.base.dexterityenv method)": [[14, "environments.base.DexterityEnv.step_sim"]], "task_rewards() (environments.base.dexterityenv method)": [[14, "environments.base.DexterityEnv.task_rewards"]], "uniform_random_action() (environments.base.dexterityenv method)": [[14, "environments.base.DexterityEnv.uniform_random_action"]], "update_info() (environments.base.dexterityenv method)": [[14, "environments.base.DexterityEnv.update_info"]], "update_joint_targets() (environments.base.dexterityenv method)": [[14, "environments.base.DexterityEnv.update_joint_targets"]], "update_obs() (environments.base.dexterityenv method)": [[14, "environments.base.DexterityEnv.update_obs"]], "update_rewards() (environments.base.dexterityenv method)": [[14, "environments.base.DexterityEnv.update_rewards"]], "update_terminations() (environments.base.dexterityenv method)": [[14, "environments.base.DexterityEnv.update_terminations"]], "environments": [[15, "module-environments"]], "spotarmik (class in environments.tire_state_cache_generator)": [[16, "environments.tire_state_cache_generator.SpotArmIK"]], "tiregeneratorconfig (class in environments.tire_state_cache_generator)": [[16, "environments.tire_state_cache_generator.TireGeneratorConfig"]], "tirestatecachegenerator (class in environments.tire_state_cache_generator)": [[16, "environments.tire_state_cache_generator.TireStateCacheGenerator"]], "__post_init__() (environments.tire_state_cache_generator.spotarmik method)": [[16, "environments.tire_state_cache_generator.SpotArmIK.__post_init__"]], "__post_init__() (environments.tire_state_cache_generator.tirestatecachegenerator method)": [[16, "environments.tire_state_cache_generator.TireStateCacheGenerator.__post_init__"]], "actuated_pos (environments.tire_state_cache_generator.spotarmik attribute)": [[16, "environments.tire_state_cache_generator.SpotArmIK.actuated_pos"]], "angular_velocity_range (environments.tire_state_cache_generator.tiregeneratorconfig attribute)": [[16, "environments.tire_state_cache_generator.TireGeneratorConfig.angular_velocity_range"]], "cache_size (environments.tire_state_cache_generator.tiregeneratorconfig attribute)": [[16, "environments.tire_state_cache_generator.TireGeneratorConfig.cache_size"]], "config (environments.tire_state_cache_generator.tirestatecachegenerator attribute)": [[16, "environments.tire_state_cache_generator.TireStateCacheGenerator.config"]], "damping (environments.tire_state_cache_generator.spotarmik attribute)": [[16, "environments.tire_state_cache_generator.SpotArmIK.damping"]], "default_base_pose (environments.tire_state_cache_generator.tirestatecachegenerator property)": [[16, "environments.tire_state_cache_generator.TireStateCacheGenerator.default_base_pose"]], "default_velocities (environments.tire_state_cache_generator.tirestatecachegenerator property)": [[16, "environments.tire_state_cache_generator.TireStateCacheGenerator.default_velocities"]], "distance_range (environments.tire_state_cache_generator.tiregeneratorconfig attribute)": [[16, "environments.tire_state_cache_generator.TireGeneratorConfig.distance_range"]], "enable_orientation_control (environments.tire_state_cache_generator.spotarmik attribute)": [[16, "environments.tire_state_cache_generator.SpotArmIK.enable_orientation_control"]], "enable_rendering (environments.tire_state_cache_generator.tiregeneratorconfig attribute)": [[16, "environments.tire_state_cache_generator.TireGeneratorConfig.enable_rendering"]], "environments.tire_state_cache_generator": [[16, "module-environments.tire_state_cache_generator"]], "generate_cache() (environments.tire_state_cache_generator.tirestatecachegenerator method)": [[16, "environments.tire_state_cache_generator.TireStateCacheGenerator.generate_cache"]], "integration_dt (environments.tire_state_cache_generator.spotarmik attribute)": [[16, "environments.tire_state_cache_generator.SpotArmIK.integration_dt"]], "linear_velocity_range (environments.tire_state_cache_generator.tiregeneratorconfig attribute)": [[16, "environments.tire_state_cache_generator.TireGeneratorConfig.linear_velocity_range"]], "max_iterations (environments.tire_state_cache_generator.spotarmik attribute)": [[16, "environments.tire_state_cache_generator.SpotArmIK.max_iterations"]], "max_no_progress_steps (environments.tire_state_cache_generator.spotarmik attribute)": [[16, "environments.tire_state_cache_generator.SpotArmIK.max_no_progress_steps"]], "object_z (environments.tire_state_cache_generator.tiregeneratorconfig attribute)": [[16, "environments.tire_state_cache_generator.TireGeneratorConfig.object_z"]], "orientation_tolerance (environments.tire_state_cache_generator.spotarmik attribute)": [[16, "environments.tire_state_cache_generator.SpotArmIK.orientation_tolerance"]], "params (environments.tire_state_cache_generator.spotarmik attribute)": [[16, "environments.tire_state_cache_generator.SpotArmIK.params"]], "position_tolerance (environments.tire_state_cache_generator.spotarmik attribute)": [[16, "environments.tire_state_cache_generator.SpotArmIK.position_tolerance"]], "progress_threshold (environments.tire_state_cache_generator.spotarmik attribute)": [[16, "environments.tire_state_cache_generator.SpotArmIK.progress_threshold"]], "radius_range (environments.tire_state_cache_generator.tiregeneratorconfig attribute)": [[16, "environments.tire_state_cache_generator.TireGeneratorConfig.radius_range"]], "randomize_velocity (environments.tire_state_cache_generator.tiregeneratorconfig attribute)": [[16, "environments.tire_state_cache_generator.TireGeneratorConfig.randomize_velocity"]], "set_floating_spot_cache() (environments.tire_state_cache_generator.tirestatecachegenerator method)": [[16, "environments.tire_state_cache_generator.TireStateCacheGenerator.set_floating_spot_cache"]], "solve() (environments.tire_state_cache_generator.spotarmik method)": [[16, "environments.tire_state_cache_generator.SpotArmIK.solve"]], "task_name (environments.tire_state_cache_generator.tirestatecachegenerator attribute)": [[16, "environments.tire_state_cache_generator.TireStateCacheGenerator.task_name"]], "expert (class in experts.expert)": [[17, "experts.expert.Expert"]], "experts.expert": [[17, "module-experts.expert"]], "expertsampler (class in experts.expert_sampler)": [[18, "experts.expert_sampler.ExpertSampler"]], "experts.expert_sampler": [[18, "module-experts.expert_sampler"]], "experts": [[19, "module-experts"]], "networksampler (class in experts.network)": [[20, "experts.network.NetworkSampler"]], "experts.network": [[20, "module-experts.network"]], "primitivesampler (class in experts.primitive)": [[21, "experts.primitive.PrimitiveSampler"]], "compute_low_level_actions() (experts.primitive.primitivesampler method)": [[21, "experts.primitive.PrimitiveSampler.compute_low_level_actions"]], "experts.primitive": [[21, "module-experts.primitive"]], "reset() (experts.primitive.primitivesampler method)": [[21, "experts.primitive.PrimitiveSampler.reset"]], "experts.primitives": [[22, "module-experts.primitives"]], "compute_grasp_actions() (in module experts.primitives.spot_standing_box)": [[23, "experts.primitives.spot_standing_box.compute_grasp_actions"]], "compute_grasp_pose_for_handle_top() (in module experts.primitives.spot_standing_box)": [[23, "experts.primitives.spot_standing_box.compute_grasp_pose_for_handle_top"]], "experts.primitives.spot_standing_box": [[23, "module-experts.primitives.spot_standing_box"]], "spot_ik_mujoco() (in module experts.primitives.spot_standing_box)": [[23, "experts.primitives.spot_standing_box.spot_ik_mujoco"]], "learning": [[24, "module-learning"]], "learner (class in learning.learner)": [[25, "learning.learner.Learner"]], "__post_init__() (learning.learner.learner method)": [[25, "learning.learner.Learner.__post_init__"]], "actor_actions() (learning.learner.learner method)": [[25, "learning.learner.Learner.actor_actions"]], "eval_agent() (learning.learner.learner method)": [[25, "learning.learner.Learner.eval_agent"]], "graph (learning.learner.learner attribute)": [[25, "learning.learner.Learner.graph"]], "graph_rollout() (learning.learner.learner method)": [[25, "learning.learner.Learner.graph_rollout"]], "learning.learner": [[25, "module-learning.learner"]], "load_cloud (learning.learner.learner attribute)": [[25, "learning.learner.Learner.load_cloud"]], "load_local (learning.learner.learner attribute)": [[25, "learning.learner.Learner.load_local"]], "load_models() (learning.learner.learner method)": [[25, "learning.learner.Learner.load_models"]], "params (learning.learner.learner attribute)": [[25, "learning.learner.Learner.params"]], "policy_rollout() (learning.learner.learner method)": [[25, "learning.learner.Learner.policy_rollout"]], "preprocess_sample() (learning.learner.learner method)": [[25, "learning.learner.Learner.preprocess_sample"]], "relative_distances_to() (learning.learner.learner method)": [[25, "learning.learner.Learner.relative_distances_to"]], "replay_buffer (learning.learner.learner attribute)": [[25, "learning.learner.Learner.replay_buffer"]], "reset() (learning.learner.learner method)": [[25, "learning.learner.Learner.reset"]], "reward_function() (learning.learner.learner method)": [[25, "learning.learner.Learner.reward_function"]], "save_cloud (learning.learner.learner attribute)": [[25, "learning.learner.Learner.save_cloud"]], "save_local (learning.learner.learner attribute)": [[25, "learning.learner.Learner.save_local"]], "save_models() (learning.learner.learner method)": [[25, "learning.learner.Learner.save_models"]], "set_demonstration_injection() (learning.learner.learner method)": [[25, "learning.learner.Learner.set_demonstration_injection"]], "train() (learning.learner.learner method)": [[25, "learning.learner.Learner.train"]], "train_actor_critic() (learning.learner.learner method)": [[25, "learning.learner.Learner.train_actor_critic"]], "update_norm() (learning.learner.learner method)": [[25, "learning.learner.Learner.update_norm"]], "verbose (learning.learner.learner attribute)": [[25, "learning.learner.Learner.verbose"]], "actor (class in learning.networks)": [[26, "learning.networks.Actor"]], "critic (class in learning.networks)": [[26, "learning.networks.Critic"]], "criticnetwork (class in learning.networks)": [[26, "learning.networks.CriticNetwork"]], "ddp (class in learning.networks)": [[26, "learning.networks.DDP"]], "__call__() (learning.networks.actor method)": [[26, "learning.networks.Actor.__call__"]], "backward_step() (learning.networks.actor method)": [[26, "learning.networks.Actor.backward_step"]], "backward_step() (learning.networks.critic method)": [[26, "learning.networks.Critic.backward_step"]], "eval() (learning.networks.actor method)": [[26, "learning.networks.Actor.eval"]], "learning.networks": [[26, "module-learning.networks"]], "load() (learning.networks.actor method)": [[26, "learning.networks.Actor.load"]], "load() (learning.networks.critic method)": [[26, "learning.networks.Critic.load"]], "save() (learning.networks.actor method)": [[26, "learning.networks.Actor.save"]], "save() (learning.networks.critic method)": [[26, "learning.networks.Critic.save"]], "soft_update() (in module learning.networks)": [[26, "learning.networks.soft_update"]], "target() (learning.networks.actor method)": [[26, "learning.networks.Actor.target"]], "target() (learning.networks.critic method)": [[26, "learning.networks.Critic.target"]], "train() (learning.networks.actor method)": [[26, "learning.networks.Actor.train"]], "update_target() (learning.networks.actor method)": [[26, "learning.networks.Actor.update_target"]], "update_target() (learning.networks.critic method)": [[26, "learning.networks.Critic.update_target"]], "normalizer (class in learning.normalizer)": [[27, "learning.normalizer.Normalizer"]], "learning.normalizer": [[27, "module-learning.normalizer"]], "load() (learning.normalizer.normalizer method)": [[27, "learning.normalizer.Normalizer.load"]], "normalize() (learning.normalizer.normalizer method)": [[27, "learning.normalizer.Normalizer.normalize"]], "normalize_obs() (learning.normalizer.normalizer method)": [[27, "learning.normalizer.Normalizer.normalize_obs"]], "save() (learning.normalizer.normalizer method)": [[27, "learning.normalizer.Normalizer.save"]], "update() (learning.normalizer.normalizer method)": [[27, "learning.normalizer.Normalizer.update"]], "replaybuffer (class in learning.replay_buffer)": [[28, "learning.replay_buffer.ReplayBuffer"]], "trajectoryreplaybuffer (class in learning.replay_buffer)": [[28, "learning.replay_buffer.TrajectoryReplayBuffer"]], "__getitem__() (learning.replay_buffer.replaybuffer method)": [[28, "learning.replay_buffer.ReplayBuffer.__getitem__"]], "__post_init__() (learning.replay_buffer.replaybuffer method)": [[28, "learning.replay_buffer.ReplayBuffer.__post_init__"]], "extend() (learning.replay_buffer.replaybuffer method)": [[28, "learning.replay_buffer.ReplayBuffer.extend"]], "learning.replay_buffer": [[28, "module-learning.replay_buffer"]], "reset() (learning.replay_buffer.replaybuffer method)": [[28, "learning.replay_buffer.ReplayBuffer.reset"]], "sample() (learning.replay_buffer.replaybuffer method)": [[28, "learning.replay_buffer.ReplayBuffer.sample"]], "sample() (learning.replay_buffer.trajectoryreplaybuffer method)": [[28, "learning.replay_buffer.TrajectoryReplayBuffer.sample"]], "sampler_class (learning.replay_buffer.replaybuffer attribute)": [[28, "learning.replay_buffer.ReplayBuffer.sampler_class"]], "setup_buffer() (learning.replay_buffer.replaybuffer method)": [[28, "learning.replay_buffer.ReplayBuffer.setup_buffer"]], "setup_buffer() (learning.replay_buffer.trajectoryreplaybuffer method)": [[28, "learning.replay_buffer.TrajectoryReplayBuffer.setup_buffer"]], "setup_sampler() (learning.replay_buffer.replaybuffer method)": [[28, "learning.replay_buffer.ReplayBuffer.setup_sampler"]], "setup_storage() (learning.replay_buffer.replaybuffer method)": [[28, "learning.replay_buffer.ReplayBuffer.setup_storage"]], "storage_class (learning.replay_buffer.replaybuffer attribute)": [[28, "learning.replay_buffer.ReplayBuffer.storage_class"]], "mppi (class in mppi)": [[29, "mppi.MPPI"]], "mppiconfig (class in mppi)": [[29, "mppi.MPPIConfig"]], "action() (mppi.mppi method)": [[29, "mppi.MPPI.action"]], "mppi": [[29, "module-mppi"]], "temperature (mppi.mppiconfig attribute)": [[29, "mppi.MPPIConfig.temperature"]], "update_action() (mppi.mppi method)": [[29, "mppi.MPPI.update_action"]], "particlefilter (class in particle_filter)": [[30, "particle_filter.ParticleFilter"]], "particlefilterconfig (class in particle_filter)": [[30, "particle_filter.ParticleFilterConfig"]], "action() (particle_filter.particlefilter method)": [[30, "particle_filter.ParticleFilter.action"]], "particle_filter": [[30, "module-particle_filter"]], "temperature (particle_filter.particlefilterconfig attribute)": [[30, "particle_filter.ParticleFilterConfig.temperature"]], "update_action() (particle_filter.particlefilter method)": [[30, "particle_filter.ParticleFilter.update_action"]], "get_package_path() (in module path_resolvers)": [[31, "path_resolvers.get_package_path"]], "path_resolvers": [[31, "module-path_resolvers"]], "actionprocessor (class in planner.action_processor)": [[32, "planner.action_processor.ActionProcessor"]], "spotfloatingactionprocessor (class in planner.action_processor)": [[32, "planner.action_processor.SpotFloatingActionProcessor"]], "spotwholebodyactionprocessor (class in planner.action_processor)": [[32, "planner.action_processor.SpotWholebodyActionProcessor"]], "__call__() (planner.action_processor.actionprocessor method)": [[32, "planner.action_processor.ActionProcessor.__call__"]], "actuated_pos (planner.action_processor.actionprocessor attribute)": [[32, "planner.action_processor.ActionProcessor.actuated_pos"]], "arm_action_ixs (planner.action_processor.spotfloatingactionprocessor attribute)": [[32, "planner.action_processor.SpotFloatingActionProcessor.arm_action_ixs"]], "arm_action_ixs (planner.action_processor.spotwholebodyactionprocessor attribute)": [[32, "planner.action_processor.SpotWholebodyActionProcessor.arm_action_ixs"]], "arm_state_ixs (planner.action_processor.spotwholebodyactionprocessor attribute)": [[32, "planner.action_processor.SpotWholebodyActionProcessor.arm_state_ixs"]], "base_action_to_egocentric() (planner.action_processor.spotfloatingactionprocessor method)": [[32, "planner.action_processor.SpotFloatingActionProcessor.base_action_to_egocentric"]], "clip_base_actions() (planner.action_processor.spotfloatingactionprocessor method)": [[32, "planner.action_processor.SpotFloatingActionProcessor.clip_base_actions"]], "get_action_trajectories() (planner.action_processor.actionprocessor method)": [[32, "planner.action_processor.ActionProcessor.get_action_trajectories"]], "get_action_trajectories() (planner.action_processor.spotwholebodyactionprocessor method)": [[32, "planner.action_processor.SpotWholebodyActionProcessor.get_action_trajectories"]], "get_actuated_states() (planner.action_processor.actionprocessor method)": [[32, "planner.action_processor.ActionProcessor.get_actuated_states"]], "get_actuated_states() (planner.action_processor.spotwholebodyactionprocessor method)": [[32, "planner.action_processor.SpotWholebodyActionProcessor.get_actuated_states"]], "get_end_actions() (planner.action_processor.actionprocessor method)": [[32, "planner.action_processor.ActionProcessor.get_end_actions"]], "get_end_actions() (planner.action_processor.spotfloatingactionprocessor method)": [[32, "planner.action_processor.SpotFloatingActionProcessor.get_end_actions"]], "get_start_actions() (planner.action_processor.actionprocessor method)": [[32, "planner.action_processor.ActionProcessor.get_start_actions"]], "get_start_actions() (planner.action_processor.spotwholebodyactionprocessor method)": [[32, "planner.action_processor.SpotWholebodyActionProcessor.get_start_actions"]], "planner.action_processor": [[32, "module-planner.action_processor"]], "actionsampler (class in planner.action_sampler)": [[33, "planner.action_sampler.ActionSampler"]], "__call__() (planner.action_sampler.actionsampler method)": [[33, "planner.action_sampler.ActionSampler.__call__"]], "continuation_directions() (planner.action_sampler.actionsampler method)": [[33, "planner.action_sampler.ActionSampler.continuation_directions"]], "directions_actions() (planner.action_sampler.actionsampler method)": [[33, "planner.action_sampler.ActionSampler.directions_actions"]], "goal_directions() (planner.action_sampler.actionsampler method)": [[33, "planner.action_sampler.ActionSampler.goal_directions"]], "initialize() (planner.action_sampler.actionsampler method)": [[33, "planner.action_sampler.ActionSampler.initialize"]], "planner.action_sampler": [[33, "module-planner.action_sampler"]], "proximity_directions() (planner.action_sampler.actionsampler method)": [[33, "planner.action_sampler.ActionSampler.proximity_directions"]], "random_directions() (planner.action_sampler.actionsampler method)": [[33, "planner.action_sampler.ActionSampler.random_directions"]], "box_scaling() (in module planner.clipping_method)": [[34, "planner.clipping_method.box_scaling"]], "clip_actions() (in module planner.clipping_method)": [[34, "planner.clipping_method.clip_actions"]], "planner.clipping_method": [[34, "module-planner.clipping_method"]], "find_latest_model_path() (in module planner.data_collection)": [[35, "planner.data_collection.find_latest_model_path"]], "load_model() (in module planner.data_collection)": [[35, "planner.data_collection.load_model"]], "load_tensor() (in module planner.data_collection)": [[35, "planner.data_collection.load_tensor"]], "planner.data_collection": [[35, "module-planner.data_collection"]], "save_model() (in module planner.data_collection)": [[35, "planner.data_collection.save_model"]], "save_tensor() (in module planner.data_collection)": [[35, "planner.data_collection.save_tensor"]], "graph (class in planner.graph)": [[36, "planner.graph.Graph"]], "activate_all_nodes() (planner.graph.graph method)": [[36, "planner.graph.Graph.activate_all_nodes"]], "add_child_ids_to_node() (planner.graph.graph method)": [[36, "planner.graph.Graph.add_child_ids_to_node"]], "add_nodes() (planner.graph.graph method)": [[36, "planner.graph.Graph.add_nodes"]], "add_total_rewards() (planner.graph.graph method)": [[36, "planner.graph.Graph.add_total_rewards"]], "calculate_distance_rewards() (planner.graph.graph method)": [[36, "planner.graph.Graph.calculate_distance_rewards"]], "calculate_proximity_rewards() (planner.graph.graph method)": [[36, "planner.graph.Graph.calculate_proximity_rewards"]], "calculate_reachability_rewards() (planner.graph.graph method)": [[36, "planner.graph.Graph.calculate_reachability_rewards"]], "change_sub_goal_states() (planner.graph.graph method)": [[36, "planner.graph.Graph.change_sub_goal_states"]], "check_for_early_termination() (planner.graph.graph method)": [[36, "planner.graph.Graph.check_for_early_termination"]], "deactivate_nodes() (planner.graph.graph method)": [[36, "planner.graph.Graph.deactivate_nodes"]], "destroy() (planner.graph.graph method)": [[36, "planner.graph.Graph.destroy"]], "get_active_main_ids() (planner.graph.graph method)": [[36, "planner.graph.Graph.get_active_main_ids"]], "get_best_id() (planner.graph.graph method)": [[36, "planner.graph.Graph.get_best_id"]], "get_root_ids() (planner.graph.graph method)": [[36, "planner.graph.Graph.get_root_ids"]], "is_better_than() (planner.graph.graph method)": [[36, "planner.graph.Graph.is_better_than"]], "is_worse_than() (planner.graph.graph method)": [[36, "planner.graph.Graph.is_worse_than"]], "load() (planner.graph.graph method)": [[36, "planner.graph.Graph.load"]], "number_of_nodes() (planner.graph.graph method)": [[36, "planner.graph.Graph.number_of_nodes"]], "planner.graph": [[36, "module-planner.graph"]], "reachability_cache() (planner.graph.graph method)": [[36, "planner.graph.Graph.reachability_cache"]], "reset() (planner.graph.graph method)": [[36, "planner.graph.Graph.reset"]], "reset_sub_goal_states() (planner.graph.graph method)": [[36, "planner.graph.Graph.reset_sub_goal_states"]], "sample_feasible_states() (in module planner.graph)": [[36, "planner.graph.sample_feasible_states"]], "sample_random_goal_states() (in module planner.graph)": [[36, "planner.graph.sample_random_goal_states"]], "sample_random_start_states() (in module planner.graph)": [[36, "planner.graph.sample_random_start_states"]], "sample_random_states() (in module planner.graph)": [[36, "planner.graph.sample_random_states"]], "sample_random_sub_goal_states() (in module planner.graph)": [[36, "planner.graph.sample_random_sub_goal_states"]], "sample_related_sub_goal_states() (in module planner.graph)": [[36, "planner.graph.sample_related_sub_goal_states"]], "save() (planner.graph.graph method)": [[36, "planner.graph.Graph.save"]], "set_goal_state() (planner.graph.graph method)": [[36, "planner.graph.Graph.set_goal_state"]], "set_start_states() (planner.graph.graph method)": [[36, "planner.graph.Graph.set_start_states"]], "shortest_path_to() (planner.graph.graph method)": [[36, "planner.graph.Graph.shortest_path_to"]], "sorted_progress_ids() (planner.graph.graph method)": [[36, "planner.graph.Graph.sorted_progress_ids"]], "color_gradient() (in module planner.graph_visuals)": [[37, "planner.graph_visuals.color_gradient"]], "display_3d_graph() (in module planner.graph_visuals)": [[37, "planner.graph_visuals.display_3d_graph"]], "display_colormap_point_cloud() (in module planner.graph_visuals)": [[37, "planner.graph_visuals.display_colormap_point_cloud"]], "display_point_cloud() (in module planner.graph_visuals)": [[37, "planner.graph_visuals.display_point_cloud"]], "display_segments() (in module planner.graph_visuals)": [[37, "planner.graph_visuals.display_segments"]], "display_segments_by_category() (in module planner.graph_visuals)": [[37, "planner.graph_visuals.display_segments_by_category"]], "planner.graph_visuals": [[37, "module-planner.graph_visuals"]], "rgba_palette() (in module planner.graph_visuals)": [[37, "planner.graph_visuals.rgba_palette"]], "commongoalworkerinterface (class in planner.graph_worker)": [[38, "planner.graph_worker.CommonGoalWorkerInterface"]], "explorerworker (class in planner.graph_worker)": [[38, "planner.graph_worker.ExplorerWorker"]], "graphworker (class in planner.graph_worker)": [[38, "planner.graph_worker.GraphWorker"]], "parallelgoalsworker (class in planner.graph_worker)": [[38, "planner.graph_worker.ParallelGoalsWorker"]], "relatedgoalworker (class in planner.graph_worker)": [[38, "planner.graph_worker.RelatedGoalWorker"]], "rolloutworker (class in planner.graph_worker)": [[38, "planner.graph_worker.RolloutWorker"]], "singlegoalworker (class in planner.graph_worker)": [[38, "planner.graph_worker.SingleGoalWorker"]], "callback_and_progress_check() (planner.graph_worker.graphworker method)": [[38, "planner.graph_worker.GraphWorker.callback_and_progress_check"]], "get_progress_info() (planner.graph_worker.graphworker method)": [[38, "planner.graph_worker.GraphWorker.get_progress_info"]], "inspect_action_type() (in module planner.graph_worker)": [[38, "planner.graph_worker.inspect_action_type"]], "node_extension() (planner.graph_worker.graphworker method)": [[38, "planner.graph_worker.GraphWorker.node_extension"]], "node_pruning() (planner.graph_worker.graphworker method)": [[38, "planner.graph_worker.GraphWorker.node_pruning"]], "node_replacement() (planner.graph_worker.graphworker method)": [[38, "planner.graph_worker.GraphWorker.node_replacement"]], "node_selection() (planner.graph_worker.graphworker method)": [[38, "planner.graph_worker.GraphWorker.node_selection"]], "pareto_distribution() (in module planner.graph_worker)": [[38, "planner.graph_worker.pareto_distribution"]], "percentage_range() (planner.graph_worker.graphworker method)": [[38, "planner.graph_worker.GraphWorker.percentage_range"]], "planner.graph_worker": [[38, "module-planner.graph_worker"]], "reset_finished_workers() (planner.graph_worker.parallelgoalsworker method)": [[38, "planner.graph_worker.ParallelGoalsWorker.reset_finished_workers"]], "update_extension_lengths() (planner.graph_worker.parallelgoalsworker method)": [[38, "planner.graph_worker.ParallelGoalsWorker.update_extension_lengths"]], "update_pareto_parameters() (planner.graph_worker.parallelgoalsworker method)": [[38, "planner.graph_worker.ParallelGoalsWorker.update_pareto_parameters"]], "work() (planner.graph_worker.parallelgoalsworker method)": [[38, "planner.graph_worker.ParallelGoalsWorker.work"]], "planner": [[39, "module-planner"]], "einsum_ij_ij_i() (in module planner.linear_algebra)": [[40, "planner.linear_algebra.einsum_ij_ij_i"]], "einsum_ij_kj_ki() (in module planner.linear_algebra)": [[40, "planner.linear_algebra.einsum_ij_kj_ki"]], "einsum_ijk_ik_ij() (in module planner.linear_algebra)": [[40, "planner.linear_algebra.einsum_ijk_ik_ij"]], "einsum_ijk_ikl_ijl() (in module planner.linear_algebra)": [[40, "planner.linear_algebra.einsum_ijk_ikl_ijl"]], "einsum_ijk_ilk_ijl() (in module planner.linear_algebra)": [[40, "planner.linear_algebra.einsum_ijk_ilk_ijl"]], "einsum_ikj_ik_ij() (in module planner.linear_algebra)": [[40, "planner.linear_algebra.einsum_ikj_ik_ij"]], "einsum_ikj_ikl_ijl() (in module planner.linear_algebra)": [[40, "planner.linear_algebra.einsum_ikj_ikl_ijl"]], "einsum_jk_ikl_ijl() (in module planner.linear_algebra)": [[40, "planner.linear_algebra.einsum_jk_ikl_ijl"]], "gram_schmidt() (in module planner.linear_algebra)": [[40, "planner.linear_algebra.gram_schmidt"]], "max_scaling() (in module planner.linear_algebra)": [[40, "planner.linear_algebra.max_scaling"]], "normalize() (in module planner.linear_algebra)": [[40, "planner.linear_algebra.normalize"]], "normalize_multiple() (in module planner.linear_algebra)": [[40, "planner.linear_algebra.normalize_multiple"]], "planner.linear_algebra": [[40, "module-planner.linear_algebra"]], "project_v_on_u() (in module planner.linear_algebra)": [[40, "planner.linear_algebra.project_v_on_u"]], "project_vectors_on_eigenspace() (in module planner.linear_algebra)": [[40, "planner.linear_algebra.project_vectors_on_eigenspace"]], "transformation_matrix() (in module planner.linear_algebra)": [[40, "planner.linear_algebra.transformation_matrix"]], "truncpareto_cdf() (in module planner.linear_algebra)": [[40, "planner.linear_algebra.truncpareto_cdf"]], "logger (class in planner.logger)": [[41, "planner.logger.Logger"]], "create_distance_log() (planner.logger.logger method)": [[41, "planner.logger.Logger.create_distance_log"]], "create_reward_log() (planner.logger.logger method)": [[41, "planner.logger.Logger.create_reward_log"]], "get_log_name() (planner.logger.logger method)": [[41, "planner.logger.Logger.get_log_name"]], "log_action_sampler() (planner.logger.logger method)": [[41, "planner.logger.Logger.log_action_sampler"]], "log_node_extension() (planner.logger.logger method)": [[41, "planner.logger.Logger.log_node_extension"]], "log_node_pruning() (planner.logger.logger method)": [[41, "planner.logger.Logger.log_node_pruning"]], "log_node_selection() (planner.logger.logger method)": [[41, "planner.logger.Logger.log_node_selection"]], "log_params() (planner.logger.logger method)": [[41, "planner.logger.Logger.log_params"]], "log_search() (planner.logger.logger method)": [[41, "planner.logger.Logger.log_search"]], "planner.logger": [[41, "module-planner.logger"]], "simple_path_statistics() (planner.logger.logger method)": [[41, "planner.logger.Logger.simple_path_statistics"]], "simple_progress_statistics() (planner.logger.logger method)": [[41, "planner.logger.Logger.simple_progress_statistics"]], "parametercontainer (class in planner.parameter_container)": [[42, "planner.parameter_container.ParameterContainer"]], "__contains__() (planner.parameter_container.parametercontainer method)": [[42, "planner.parameter_container.ParameterContainer.__contains__"]], "__delattr__() (planner.parameter_container.parametercontainer method)": [[42, "planner.parameter_container.ParameterContainer.__delattr__"]], "__getattr__() (planner.parameter_container.parametercontainer method)": [[42, "planner.parameter_container.ParameterContainer.__getattr__"]], "__setattr__() (planner.parameter_container.parametercontainer method)": [[42, "planner.parameter_container.ParameterContainer.__setattr__"]], "__str__() (planner.parameter_container.parametercontainer method)": [[42, "planner.parameter_container.ParameterContainer.__str__"]], "autofill() (planner.parameter_container.parametercontainer method)": [[42, "planner.parameter_container.ParameterContainer.autofill"]], "cache_folder (planner.parameter_container.parametercontainer property)": [[42, "planner.parameter_container.ParameterContainer.cache_folder"]], "concat_list_of_arrays() (planner.parameter_container.parametercontainer method)": [[42, "planner.parameter_container.ParameterContainer.concat_list_of_arrays"]], "data_folder (planner.parameter_container.parametercontainer property)": [[42, "planner.parameter_container.ParameterContainer.data_folder"]], "device (planner.parameter_container.parametercontainer property)": [[42, "planner.parameter_container.ParameterContainer.device"]], "examples_directory (planner.parameter_container.parametercontainer property)": [[42, "planner.parameter_container.ParameterContainer.examples_directory"]], "graph_cache_folder (planner.parameter_container.parametercontainer property)": [[42, "planner.parameter_container.ParameterContainer.graph_cache_folder"]], "list_of_yaml_arrays_to_tensor() (planner.parameter_container.parametercontainer method)": [[42, "planner.parameter_container.ParameterContainer.list_of_yaml_arrays_to_tensor"]], "load_base() (planner.parameter_container.parametercontainer method)": [[42, "planner.parameter_container.ParameterContainer.load_base"]], "load_eigenspaces() (planner.parameter_container.parametercontainer method)": [[42, "planner.parameter_container.ParameterContainer.load_eigenspaces"]], "parse_hardware_parameters() (in module planner.parameter_container)": [[42, "planner.parameter_container.parse_hardware_parameters"]], "planner.parameter_container": [[42, "module-planner.parameter_container"]], "policy_filepath (planner.parameter_container.parametercontainer property)": [[42, "planner.parameter_container.ParameterContainer.policy_filepath"]], "process_scaling() (planner.parameter_container.parametercontainer method)": [[42, "planner.parameter_container.ParameterContainer.process_scaling"]], "reset_seed() (planner.parameter_container.parametercontainer method)": [[42, "planner.parameter_container.ParameterContainer.reset_seed"]], "reward_distance_scaling_sqrt() (planner.parameter_container.parametercontainer method)": [[42, "planner.parameter_container.ParameterContainer.reward_distance_scaling_sqrt"]], "run_autofill_rule() (planner.parameter_container.parametercontainer method)": [[42, "planner.parameter_container.ParameterContainer.run_autofill_rule"]], "set_seed() (planner.parameter_container.parametercontainer method)": [[42, "planner.parameter_container.ParameterContainer.set_seed"]], "state_cache_folder (planner.parameter_container.parametercontainer property)": [[42, "planner.parameter_container.ParameterContainer.state_cache_folder"]], "trajectory_cache_folder (planner.parameter_container.parametercontainer property)": [[42, "planner.parameter_container.ParameterContainer.trajectory_cache_folder"]], "update() (planner.parameter_container.parametercontainer method)": [[42, "planner.parameter_container.ParameterContainer.update"]], "xml_folder (planner.parameter_container.parametercontainer property)": [[42, "planner.parameter_container.ParameterContainer.xml_folder"]], "planner (class in planner.planner)": [[43, "planner.planner.Planner"]], "path_data() (planner.planner.planner method)": [[43, "planner.planner.Planner.path_data"]], "path_trajectory() (planner.planner.planner method)": [[43, "planner.planner.Planner.path_trajectory"]], "planner.planner": [[43, "module-planner.planner"]], "plot_search_results() (planner.planner.planner method)": [[43, "planner.planner.Planner.plot_search_results"]], "search() (planner.planner.planner method)": [[43, "planner.planner.Planner.search"]], "shortest_path_data() (planner.planner.planner method)": [[43, "planner.planner.Planner.shortest_path_data"]], "shortest_path_trajectory() (planner.planner.planner method)": [[43, "planner.planner.Planner.shortest_path_trajectory"]], "is_object_out_of_reach() (in module planner.planner_helpers)": [[44, "planner.planner_helpers.is_object_out_of_reach"]], "is_object_tilted() (in module planner.planner_helpers)": [[44, "planner.planner_helpers.is_object_tilted"]], "planner.planner_helpers": [[44, "module-planner.planner_helpers"]], "torso_too_close_to_object() (in module planner.planner_helpers)": [[44, "planner.planner_helpers.torso_too_close_to_object"]], "absolute_action (planner.types.actionmode attribute)": [[45, "planner.types.ActionMode.ABSOLUTE_ACTION"]], "action_type_directional_map (in module planner.types)": [[45, "planner.types.ACTION_TYPE_DIRECTIONAL_MAP"]], "actionmode (class in planner.types)": [[45, "planner.types.ActionMode"]], "actiontype (class in planner.types)": [[45, "planner.types.ActionType"]], "continuation (planner.types.actiontype attribute)": [[45, "planner.types.ActionType.CONTINUATION"]], "clippingtype (class in planner.types)": [[45, "planner.types.ClippingType"]], "controltype (class in planner.types)": [[45, "planner.types.ControlType"]], "expert (planner.types.actiontype attribute)": [[45, "planner.types.ActionType.EXPERT"]], "first_order_hold (planner.types.controltype attribute)": [[45, "planner.types.ControlType.FIRST_ORDER_HOLD"]], "goal (planner.types.actiontype attribute)": [[45, "planner.types.ActionType.GOAL"]], "last (planner.types.selectiontype attribute)": [[45, "planner.types.SelectionType.LAST"]], "non_expert (planner.types.actiontype attribute)": [[45, "planner.types.ActionType.NON_EXPERT"]], "proximity (planner.types.actiontype attribute)": [[45, "planner.types.ActionType.PROXIMITY"]], "ranged (planner.types.actiontype attribute)": [[45, "planner.types.ActionType.RANGED"]], "relative_to_previous_end_action (planner.types.actionmode attribute)": [[45, "planner.types.ActionMode.RELATIVE_TO_PREVIOUS_END_ACTION"]], "scale (planner.types.clippingtype attribute)": [[45, "planner.types.ClippingType.SCALE"]], "selectiontype (class in planner.types)": [[45, "planner.types.SelectionType"]], "__str__() (planner.types.actionmode method)": [[45, "planner.types.ActionMode.__str__"]], "__str__() (planner.types.actiontype method)": [[45, "planner.types.ActionType.__str__"]], "__str__() (planner.types.clippingtype method)": [[45, "planner.types.ClippingType.__str__"]], "__str__() (planner.types.controltype method)": [[45, "planner.types.ControlType.__str__"]], "__str__() (planner.types.selectiontype method)": [[45, "planner.types.SelectionType.__str__"]], "convert_dtype() (in module planner.types)": [[45, "planner.types.convert_dtype"]], "planner.types": [[45, "module-planner.types"]], "set_default_device_and_dtype() (in module planner.types)": [[45, "planner.types.set_default_device_and_dtype"]], "predictivesampling (class in predictive_sampling)": [[46, "predictive_sampling.PredictiveSampling"]], "predictivesamplingconfig (class in predictive_sampling)": [[46, "predictive_sampling.PredictiveSamplingConfig"]], "action() (predictive_sampling.predictivesampling method)": [[46, "predictive_sampling.PredictiveSampling.action"]], "noise_ramp (predictive_sampling.predictivesamplingconfig attribute)": [[46, "predictive_sampling.PredictiveSamplingConfig.noise_ramp"]], "predictive_sampling": [[46, "module-predictive_sampling"]], "update_action() (predictive_sampling.predictivesampling method)": [[46, "predictive_sampling.PredictiveSampling.update_action"]], "scenes": [[47, "module-scenes"]], "spot_sensors (in module scenes)": [[47, "scenes.spot_sensors"]], "modelelement (class in scenes.scene_composer)": [[48, "scenes.scene_composer.ModelElement"]], "scene (class in scenes.scene_composer)": [[48, "scenes.scene_composer.Scene"]], "spotrobot (class in scenes.scene_composer)": [[48, "scenes.scene_composer.SpotRobot"]], "__getattr__() (scenes.scene_composer.mjbodywrapper method)": [[48, "scenes.scene_composer.mjBodyWrapper.__getattr__"]], "__getitem__() (scenes.scene_composer.modelelement method)": [[48, "scenes.scene_composer.ModelElement.__getitem__"]], "__setattr__() (scenes.scene_composer.mjbodywrapper method)": [[48, "scenes.scene_composer.mjBodyWrapper.__setattr__"]], "attach() (scenes.scene_composer.mjbodywrapper method)": [[48, "scenes.scene_composer.mjBodyWrapper.attach"]], "autoload() (scenes.scene_composer.modelelement static method)": [[48, "scenes.scene_composer.ModelElement.autoload"]], "contacts (scenes.scene_composer.scene attribute)": [[48, "scenes.scene_composer.Scene.contacts"]], "elements (scenes.scene_composer.scene attribute)": [[48, "scenes.scene_composer.Scene.elements"]], "from_file() (scenes.scene_composer.modelelement class method)": [[48, "scenes.scene_composer.ModelElement.from_file"]], "from_string() (scenes.scene_composer.modelelement class method)": [[48, "scenes.scene_composer.ModelElement.from_string"]], "header_includes (scenes.scene_composer.modelelement attribute)": [[48, "scenes.scene_composer.ModelElement.header_includes"]], "load() (scenes.scene_composer.modelelement method)": [[48, "scenes.scene_composer.ModelElement.load"]], "load() (scenes.scene_composer.scene method)": [[48, "scenes.scene_composer.Scene.load"]], "load() (scenes.scene_composer.spotrobot method)": [[48, "scenes.scene_composer.SpotRobot.load"]], "make_default_header_includes() (in module scenes.scene_composer)": [[48, "scenes.scene_composer.make_default_header_includes"]], "mjbodywrapper (class in scenes.scene_composer)": [[48, "scenes.scene_composer.mjBodyWrapper"]], "name (scenes.scene_composer.modelelement attribute)": [[48, "scenes.scene_composer.ModelElement.name"]], "name (scenes.scene_composer.spotrobot attribute)": [[48, "scenes.scene_composer.SpotRobot.name"]], "override() (in module scenes.scene_composer)": [[48, "scenes.scene_composer.override"]], "scenes.scene_composer": [[48, "module-scenes.scene_composer"]], "sensors (scenes.scene_composer.scene attribute)": [[48, "scenes.scene_composer.Scene.sensors"]], "to_xml_file() (scenes.scene_composer.modelelement method)": [[48, "scenes.scene_composer.ModelElement.to_xml_file"]], "to_xml_string() (scenes.scene_composer.modelelement method)": [[48, "scenes.scene_composer.ModelElement.to_xml_string"]], "xml_content (scenes.scene_composer.modelelement attribute)": [[48, "scenes.scene_composer.ModelElement.xml_content"]], "xml_dir (scenes.scene_composer.scene attribute)": [[48, "scenes.scene_composer.Scene.xml_dir"]], "xml_dir (scenes.scene_composer.spotrobot attribute)": [[48, "scenes.scene_composer.SpotRobot.xml_dir"]], "scenes.scene_generator": [[49, "module-scenes.scene_generator"]], "asset_dir (in module scenes.scene_registry)": [[50, "scenes.scene_registry.ASSET_DIR"]], "components_dir (in module scenes.scene_registry)": [[50, "scenes.scene_registry.COMPONENTS_DIR"]], "output_dir (in module scenes.scene_registry)": [[50, "scenes.scene_registry.OUTPUT_DIR"]], "sceneregistry (class in scenes.scene_registry)": [[50, "scenes.scene_registry.SceneRegistry"]], "xml_dir (in module scenes.scene_registry)": [[50, "scenes.scene_registry.XML_DIR"]], "__getitem__() (scenes.scene_registry.sceneregistry method)": [[50, "scenes.scene_registry.SceneRegistry.__getitem__"]], "add() (scenes.scene_registry.sceneregistry method)": [[50, "scenes.scene_registry.SceneRegistry.add"]], "generate() (scenes.scene_registry.sceneregistry method)": [[50, "scenes.scene_registry.SceneRegistry.generate"]], "generate_all() (scenes.scene_registry.sceneregistry method)": [[50, "scenes.scene_registry.SceneRegistry.generate_all"]], "scene_registry (in module scenes.scene_registry)": [[50, "scenes.scene_registry.scene_registry"]], "scenes.scene_registry": [[50, "module-scenes.scene_registry"]], "reset_object_pose (in module spot_box)": [[51, "spot_box.RESET_OBJECT_POSE"]], "spotbox (class in spot_box)": [[51, "spot_box.SpotBox"]], "spotboxconfig (class in spot_box)": [[51, "spot_box.SpotBoxConfig"]], "z_axis (in module spot_box)": [[51, "spot_box.Z_AXIS"]], "actuator_ctrlrange (spot_box.spotbox property)": [[51, "spot_box.SpotBox.actuator_ctrlrange"]], "goal_position (spot_box.spotboxconfig attribute)": [[51, "spot_box.SpotBoxConfig.goal_position"]], "orientation_threshold (spot_box.spotboxconfig attribute)": [[51, "spot_box.SpotBoxConfig.orientation_threshold"]], "reset() (spot_box.spotbox method)": [[51, "spot_box.SpotBox.reset"]], "reward() (spot_box.spotbox method)": [[51, "spot_box.SpotBox.reward"]], "spot_box": [[51, "module-spot_box"]], "w_gripper_proximity (spot_box.spotboxconfig attribute)": [[51, "spot_box.SpotBoxConfig.w_gripper_proximity"]], "w_orientation (spot_box.spotboxconfig attribute)": [[51, "spot_box.SpotBoxConfig.w_orientation"]], "w_torso_proximity (spot_box.spotboxconfig attribute)": [[51, "spot_box.SpotBoxConfig.w_torso_proximity"]], "spothandnavigation (class in spot_hand_navigation)": [[52, "spot_hand_navigation.SpotHandNavigation"]], "spothandnavigationconfig (class in spot_hand_navigation)": [[52, "spot_hand_navigation.SpotHandNavigationConfig"]], "actuator_ctrlrange (spot_hand_navigation.spothandnavigation property)": [[52, "spot_hand_navigation.SpotHandNavigation.actuator_ctrlrange"]], "goal_position (spot_hand_navigation.spothandnavigationconfig attribute)": [[52, "spot_hand_navigation.SpotHandNavigationConfig.goal_position"]], "reset() (spot_hand_navigation.spothandnavigation method)": [[52, "spot_hand_navigation.SpotHandNavigation.reset"]], "reward() (spot_hand_navigation.spothandnavigation method)": [[52, "spot_hand_navigation.SpotHandNavigation.reward"]], "spot_hand_navigation": [[52, "module-spot_hand_navigation"]], "spotnavigation (class in spot_navigation)": [[53, "spot_navigation.SpotNavigation"]], "spotnavigationconfig (class in spot_navigation)": [[53, "spot_navigation.SpotNavigationConfig"]], "actuator_ctrlrange (spot_navigation.spotnavigation property)": [[53, "spot_navigation.SpotNavigation.actuator_ctrlrange"]], "goal_position (spot_navigation.spotnavigationconfig attribute)": [[53, "spot_navigation.SpotNavigationConfig.goal_position"]], "reset() (spot_navigation.spotnavigation method)": [[53, "spot_navigation.SpotNavigation.reset"]], "reward() (spot_navigation.spotnavigation method)": [[53, "spot_navigation.SpotNavigation.reward"]], "spot_navigation": [[53, "module-spot_navigation"]], "reset_object_pose (in module spot_tire)": [[54, "spot_tire.RESET_OBJECT_POSE"]], "spottire (class in spot_tire)": [[54, "spot_tire.SpotTire"]], "spottireconfig (class in spot_tire)": [[54, "spot_tire.SpotTireConfig"]], "tire_goal (in module spot_tire)": [[54, "spot_tire.TIRE_GOAL"]], "tire_height (in module spot_tire)": [[54, "spot_tire.TIRE_HEIGHT"]], "z_axis (in module spot_tire)": [[54, "spot_tire.Z_AXIS"]], "actuator_ctrlrange (spot_tire.spottire property)": [[54, "spot_tire.SpotTire.actuator_ctrlrange"]], "fall_penalty (spot_tire.spottireconfig attribute)": [[54, "spot_tire.SpotTireConfig.fall_penalty"]], "goal_position (spot_tire.spottireconfig attribute)": [[54, "spot_tire.SpotTireConfig.goal_position"]], "goal_tire_pos (spot_tire.spottireconfig attribute)": [[54, "spot_tire.SpotTireConfig.goal_tire_pos"]], "gripper_goal_altitude (spot_tire.spottireconfig attribute)": [[54, "spot_tire.SpotTireConfig.gripper_goal_altitude"]], "gripper_goal_offset (spot_tire.spottireconfig attribute)": [[54, "spot_tire.SpotTireConfig.gripper_goal_offset"]], "reset() (spot_tire.spottire method)": [[54, "spot_tire.SpotTire.reset"]], "reward() (spot_tire.spottire method)": [[54, "spot_tire.SpotTire.reward"]], "spot_tire": [[54, "module-spot_tire"]], "tire_fallen_threshold (spot_tire.spottireconfig attribute)": [[54, "spot_tire.SpotTireConfig.tire_fallen_threshold"]], "torso_goal_offset (spot_tire.spottireconfig attribute)": [[54, "spot_tire.SpotTireConfig.torso_goal_offset"]], "w_gripper_proximity (spot_tire.spottireconfig attribute)": [[54, "spot_tire.SpotTireConfig.w_gripper_proximity"]], "w_leg_proximity (spot_tire.spottireconfig attribute)": [[54, "spot_tire.SpotTireConfig.w_leg_proximity"]], "w_tire_angular_velocity (spot_tire.spottireconfig attribute)": [[54, "spot_tire.SpotTireConfig.w_tire_angular_velocity"]], "w_tire_linear_velocity (spot_tire.spottireconfig attribute)": [[54, "spot_tire.SpotTireConfig.w_tire_linear_velocity"]], "w_torso_proximity (spot_tire.spottireconfig attribute)": [[54, "spot_tire.SpotTireConfig.w_torso_proximity"]], "acrobot (class in tasks.acrobot)": [[55, "tasks.acrobot.Acrobot"]], "acrobotconfig (class in tasks.acrobot)": [[55, "tasks.acrobot.AcrobotConfig"]], "model_path (in module tasks.acrobot)": [[55, "tasks.acrobot.MODEL_PATH"]], "cutoff_time (tasks.acrobot.acrobotconfig attribute)": [[55, "tasks.acrobot.AcrobotConfig.cutoff_time"]], "p_vertical (tasks.acrobot.acrobotconfig attribute)": [[55, "tasks.acrobot.AcrobotConfig.p_vertical"]], "reset() (tasks.acrobot.acrobot method)": [[55, "tasks.acrobot.Acrobot.reset"]], "tasks.acrobot": [[55, "module-tasks.acrobot"]], "w_control (tasks.acrobot.acrobotconfig attribute)": [[55, "tasks.acrobot.AcrobotConfig.w_control"]], "w_velocity (tasks.acrobot.acrobotconfig attribute)": [[55, "tasks.acrobot.AcrobotConfig.w_velocity"]], "w_vertical (tasks.acrobot.acrobotconfig attribute)": [[55, "tasks.acrobot.AcrobotConfig.w_vertical"]], "cartpole (class in tasks.cartpole)": [[56, "tasks.cartpole.Cartpole"]], "cartpoleconfig (class in tasks.cartpole)": [[56, "tasks.cartpole.CartpoleConfig"]], "model_path (in module tasks.cartpole)": [[56, "tasks.cartpole.MODEL_PATH"]], "cutoff_time (tasks.cartpole.cartpoleconfig attribute)": [[56, "tasks.cartpole.CartpoleConfig.cutoff_time"]], "is_terminated() (tasks.cartpole.cartpole method)": [[56, "tasks.cartpole.Cartpole.is_terminated"]], "p_centered (tasks.cartpole.cartpoleconfig attribute)": [[56, "tasks.cartpole.CartpoleConfig.p_centered"]], "p_vertical (tasks.cartpole.cartpoleconfig attribute)": [[56, "tasks.cartpole.CartpoleConfig.p_vertical"]], "reset() (tasks.cartpole.cartpole method)": [[56, "tasks.cartpole.Cartpole.reset"]], "tasks.cartpole": [[56, "module-tasks.cartpole"]], "w_centered (tasks.cartpole.cartpoleconfig attribute)": [[56, "tasks.cartpole.CartpoleConfig.w_centered"]], "w_control (tasks.cartpole.cartpoleconfig attribute)": [[56, "tasks.cartpole.CartpoleConfig.w_control"]], "w_velocity (tasks.cartpole.cartpoleconfig attribute)": [[56, "tasks.cartpole.CartpoleConfig.w_velocity"]], "w_vertical (tasks.cartpole.cartpoleconfig attribute)": [[56, "tasks.cartpole.CartpoleConfig.w_vertical"]], "quadratic_norm() (in module tasks.cost_functions)": [[57, "tasks.cost_functions.quadratic_norm"]], "smooth_l1_norm() (in module tasks.cost_functions)": [[57, "tasks.cost_functions.smooth_l1_norm"]], "tasks.cost_functions": [[57, "module-tasks.cost_functions"]], "cylinderpush (class in tasks.cylinder_push)": [[58, "tasks.cylinder_push.CylinderPush"]], "cylinderpushconfig (class in tasks.cylinder_push)": [[58, "tasks.cylinder_push.CylinderPushConfig"]], "model_path (in module tasks.cylinder_push)": [[58, "tasks.cylinder_push.MODEL_PATH"]], "cart_goal_position (tasks.cylinder_push.cylinderpushconfig attribute)": [[58, "tasks.cylinder_push.CylinderPushConfig.cart_goal_position"]], "cutoff_time (tasks.cylinder_push.cylinderpushconfig attribute)": [[58, "tasks.cylinder_push.CylinderPushConfig.cutoff_time"]], "pusher_goal_offset (tasks.cylinder_push.cylinderpushconfig attribute)": [[58, "tasks.cylinder_push.CylinderPushConfig.pusher_goal_offset"]], "reset() (tasks.cylinder_push.cylinderpush method)": [[58, "tasks.cylinder_push.CylinderPush.reset"]], "tasks.cylinder_push": [[58, "module-tasks.cylinder_push"]], "w_cart_position (tasks.cylinder_push.cylinderpushconfig attribute)": [[58, "tasks.cylinder_push.CylinderPushConfig.w_cart_position"]], "w_pusher_proximity (tasks.cylinder_push.cylinderpushconfig attribute)": [[58, "tasks.cylinder_push.CylinderPushConfig.w_pusher_proximity"]], "w_pusher_velocity (tasks.cylinder_push.cylinderpushconfig attribute)": [[58, "tasks.cylinder_push.CylinderPushConfig.w_pusher_velocity"]], "get_registered_tasks() (in module tasks)": [[59, "tasks.get_registered_tasks"]], "register_task() (in module tasks)": [[59, "tasks.register_task"]], "tasks": [[59, "module-tasks"]], "mujocotask (class in tasks.mujoco_task)": [[60, "tasks.mujoco_task.MujocoTask"]], "actuator_ctrlrange (tasks.mujoco_task.mujocotask property)": [[60, "tasks.mujoco_task.MujocoTask.actuator_ctrlrange"]], "create_visualization() (tasks.mujoco_task.mujocotask method)": [[60, "tasks.mujoco_task.MujocoTask.create_visualization"]], "default_idle_command (tasks.mujoco_task.mujocotask property)": [[60, "tasks.mujoco_task.MujocoTask.default_idle_command"]], "dt (tasks.mujoco_task.mujocotask property)": [[60, "tasks.mujoco_task.MujocoTask.dt"]], "is_terminated() (tasks.mujoco_task.mujocotask method)": [[60, "tasks.mujoco_task.MujocoTask.is_terminated"]], "make_models() (tasks.mujoco_task.mujocotask method)": [[60, "tasks.mujoco_task.MujocoTask.make_models"]], "nu (tasks.mujoco_task.mujocotask property)": [[60, "tasks.mujoco_task.MujocoTask.nu"]], "reset() (tasks.mujoco_task.mujocotask method)": [[60, "tasks.mujoco_task.MujocoTask.reset"]], "rollout() (tasks.mujoco_task.mujocotask method)": [[60, "tasks.mujoco_task.MujocoTask.rollout"]], "sim_step() (tasks.mujoco_task.mujocotask method)": [[60, "tasks.mujoco_task.MujocoTask.sim_step"]], "tasks.mujoco_task": [[60, "module-tasks.mujoco_task"]], "configt (in module tasks.spot_base)": [[61, "tasks.spot_base.ConfigT"]], "default_spot_rollout_cutoff_time (in module tasks.spot_base)": [[61, "tasks.spot_base.DEFAULT_SPOT_ROLLOUT_CUTOFF_TIME"]], "goal_positions (in module tasks.spot_base)": [[61, "tasks.spot_base.GOAL_POSITIONS"]], "spotbase (class in tasks.spot_base)": [[61, "tasks.spot_base.SpotBase"]], "spotbaseconfig (class in tasks.spot_base)": [[61, "tasks.spot_base.SpotBaseConfig"]], "cutoff_time (tasks.spot_base.spotbaseconfig attribute)": [[61, "tasks.spot_base.SpotBaseConfig.cutoff_time"]], "default_idle_command (tasks.spot_base.spotbase property)": [[61, "tasks.spot_base.SpotBase.default_idle_command"]], "fall_penalty (tasks.spot_base.spotbaseconfig attribute)": [[61, "tasks.spot_base.SpotBaseConfig.fall_penalty"]], "make_models() (tasks.spot_base.spotbase method)": [[61, "tasks.spot_base.SpotBase.make_models"]], "rollout() (tasks.spot_base.spotbase method)": [[61, "tasks.spot_base.SpotBase.rollout"]], "sim_step() (tasks.spot_base.spotbase method)": [[61, "tasks.spot_base.SpotBase.sim_step"]], "spot_fallen_threshold (tasks.spot_base.spotbaseconfig attribute)": [[61, "tasks.spot_base.SpotBaseConfig.spot_fallen_threshold"]], "tasks.spot_base": [[61, "module-tasks.spot_base"]], "w_goal (tasks.spot_base.spotbaseconfig attribute)": [[61, "tasks.spot_base.SpotBaseConfig.w_goal"]], "w_proximity (tasks.spot_base.spotbaseconfig attribute)": [[61, "tasks.spot_base.SpotBaseConfig.w_proximity"]], "w_vel (tasks.spot_base.spotbaseconfig attribute)": [[61, "tasks.spot_base.SpotBaseConfig.w_vel"]], "model_path (in module tasks.spot_position_control)": [[62, "tasks.spot_position_control.MODEL_PATH"]], "spotpositioncontrol (class in tasks.spot_position_control)": [[62, "tasks.spot_position_control.SpotPositionControl"]], "spotpositioncontrolconfig (class in tasks.spot_position_control)": [[62, "tasks.spot_position_control.SpotPositionControlConfig"]], "default_command (tasks.spot_position_control.spotpositioncontrolconfig attribute)": [[62, "tasks.spot_position_control.SpotPositionControlConfig.default_command"]], "reset() (tasks.spot_position_control.spotpositioncontrol method)": [[62, "tasks.spot_position_control.SpotPositionControl.reset"]], "tasks.spot_position_control": [[62, "module-tasks.spot_position_control"]], "w_arms (tasks.spot_position_control.spotpositioncontrolconfig attribute)": [[62, "tasks.spot_position_control.SpotPositionControlConfig.w_arms"]], "w_forward (tasks.spot_position_control.spotpositioncontrolconfig attribute)": [[62, "tasks.spot_position_control.SpotPositionControlConfig.w_forward"]], "w_legs (tasks.spot_position_control.spotpositioncontrolconfig attribute)": [[62, "tasks.spot_position_control.SpotPositionControlConfig.w_legs"]], "configt (in module tasks.task)": [[63, "tasks.task.ConfigT"]], "modelt (in module tasks.task)": [[63, "tasks.task.ModelT"]], "task (class in tasks.task)": [[63, "tasks.task.Task"]], "taskconfig (class in tasks.task)": [[63, "tasks.task.TaskConfig"]], "actuator_ctrlrange (tasks.task.task property)": [[63, "tasks.task.Task.actuator_ctrlrange"]], "additional_task_info (tasks.task.task property)": [[63, "tasks.task.Task.additional_task_info"]], "create_visualization() (tasks.task.task method)": [[63, "tasks.task.Task.create_visualization"]], "dt (tasks.task.task property)": [[63, "tasks.task.Task.dt"]], "is_terminated() (tasks.task.task method)": [[63, "tasks.task.Task.is_terminated"]], "make_models() (tasks.task.task method)": [[63, "tasks.task.Task.make_models"]], "reset() (tasks.task.task method)": [[63, "tasks.task.Task.reset"]], "reward() (tasks.task.task method)": [[63, "tasks.task.Task.reward"]], "rollout() (tasks.task.task method)": [[63, "tasks.task.Task.rollout"]], "sim_step() (tasks.task.task method)": [[63, "tasks.task.Task.sim_step"]], "tasks.task": [[63, "module-tasks.task"]], "controlprocess (class in viser_app.app)": [[64, "viser_app.app.ControlProcess"]], "jacta_manipulation_path (in module viser_app.app)": [[64, "viser_app.app.JACTA_MANIPULATION_PATH"]], "simulationprocess (class in viser_app.app)": [[64, "viser_app.app.SimulationProcess"]], "viserapp (class in viser_app.app)": [[64, "viser_app.app.ViserApp"]], "config_download_callback() (viser_app.app.viserapp method)": [[64, "viser_app.app.ViserApp.config_download_callback"]], "control_cycle_callback() (viser_app.app.viserapp method)": [[64, "viser_app.app.ViserApp.control_cycle_callback"]], "control_loop() (viser_app.app.controlprocess method)": [[64, "viser_app.app.ControlProcess.control_loop"]], "control_selection_callback() (viser_app.app.viserapp method)": [[64, "viser_app.app.ViserApp.control_selection_callback"]], "enable_profiling_callback() (viser_app.app.viserapp method)": [[64, "viser_app.app.ViserApp.enable_profiling_callback"]], "remove() (viser_app.app.controlprocess method)": [[64, "viser_app.app.ControlProcess.remove"]], "reset() (viser_app.app.simulationprocess method)": [[64, "viser_app.app.SimulationProcess.reset"]], "set_profiler_recording() (viser_app.app.controlprocess method)": [[64, "viser_app.app.ControlProcess.set_profiler_recording"]], "setup_context() (viser_app.app.viserapp method)": [[64, "viser_app.app.ViserApp.setup_context"]], "setup_controller() (viser_app.app.viserapp method)": [[64, "viser_app.app.ViserApp.setup_controller"]], "setup_physics() (viser_app.app.viserapp method)": [[64, "viser_app.app.ViserApp.setup_physics"]], "setup_task() (viser_app.app.viserapp method)": [[64, "viser_app.app.ViserApp.setup_task"]], "setup_visualization() (viser_app.app.viserapp method)": [[64, "viser_app.app.ViserApp.setup_visualization"]], "simulation_cycle_callback() (viser_app.app.viserapp method)": [[64, "viser_app.app.ViserApp.simulation_cycle_callback"]], "simulation_reset_callback() (viser_app.app.viserapp method)": [[64, "viser_app.app.ViserApp.simulation_reset_callback"]], "task_selection_callback() (viser_app.app.viserapp method)": [[64, "viser_app.app.ViserApp.task_selection_callback"]], "terminate() (viser_app.app.controlprocess method)": [[64, "viser_app.app.ControlProcess.terminate"]], "viser_app.app": [[64, "module-viser_app.app"]], "write_controls() (viser_app.app.controlprocess method)": [[64, "viser_app.app.ControlProcess.write_controls"]], "write_states() (viser_app.app.simulationprocess method)": [[64, "viser_app.app.SimulationProcess.write_states"]], "write_traces() (viser_app.app.controlprocess method)": [[64, "viser_app.app.ControlProcess.write_traces"]], "default_slider_step_float (in module viser_app.gui)": [[65, "viser_app.gui.DEFAULT_SLIDER_STEP_FLOAT"]], "default_slider_step_int (in module viser_app.gui)": [[65, "viser_app.gui.DEFAULT_SLIDER_STEP_INT"]], "goal_radius (in module viser_app.gui)": [[65, "viser_app.gui.GOAL_RADIUS"]], "create_gui_elements() (in module viser_app.gui)": [[65, "viser_app.gui.create_gui_elements"]], "slider() (in module viser_app.gui)": [[65, "viser_app.gui.slider"]], "viser_app.gui": [[65, "module-viser_app.gui"]], "viser_app": [[66, "module-viser_app"]], "hardwareiocontext (class in viser_app.io)": [[67, "viser_app.io.HardwareIOContext"]], "iocontext (class in viser_app.io)": [[67, "viser_app.io.IOContext"]], "simulationiocontext (class in viser_app.io)": [[67, "viser_app.io.SimulationIOContext"]], "viser_app.io": [[67, "module-viser_app.io"]], "configencoder (class in viser_app.json_serializer)": [[68, "viser_app.json_serializer.ConfigEncoder"]], "decode_config() (in module viser_app.json_serializer)": [[68, "viser_app.json_serializer.decode_config"]], "viser_app.json_serializer": [[68, "module-viser_app.json_serializer"]], "viserprofiler (class in viser_app.profiler)": [[69, "viser_app.profiler.ViserProfiler"]], "viserprofilerconfig (class in viser_app.profiler)": [[69, "viser_app.profiler.ViserProfilerConfig"]], "benchmark_wrapper() (viser_app.profiler.viserprofiler method)": [[69, "viser_app.profiler.ViserProfiler.benchmark_wrapper"]], "viser_app.profiler": [[69, "module-viser_app.profiler"]], "visuals": [[70, "module-visuals"]], "meshphysicalmaterial (class in visuals.meshcat_visualizer)": [[71, "visuals.meshcat_visualizer.MeshPhysicalMaterial"]], "meshtoonmaterial (class in visuals.meshcat_visualizer)": [[71, "visuals.meshcat_visualizer.MeshToonMaterial"]], "plane (class in visuals.meshcat_visualizer)": [[71, "visuals.meshcat_visualizer.Plane"]], "setpropertycapital (class in visuals.meshcat_visualizer)": [[71, "visuals.meshcat_visualizer.SetPropertyCapital"]], "add_box() (in module visuals.meshcat_visualizer)": [[71, "visuals.meshcat_visualizer.add_box"]], "add_capsule() (in module visuals.meshcat_visualizer)": [[71, "visuals.meshcat_visualizer.add_capsule"]], "add_cylinder() (in module visuals.meshcat_visualizer)": [[71, "visuals.meshcat_visualizer.add_cylinder"]], "add_ellipsoid() (in module visuals.meshcat_visualizer)": [[71, "visuals.meshcat_visualizer.add_ellipsoid"]], "add_ground() (in module visuals.meshcat_visualizer)": [[71, "visuals.meshcat_visualizer.add_ground"]], "add_mesh() (in module visuals.meshcat_visualizer)": [[71, "visuals.meshcat_visualizer.add_mesh"]], "add_mesh_by_name() (in module visuals.meshcat_visualizer)": [[71, "visuals.meshcat_visualizer.add_mesh_by_name"]], "add_object() (in module visuals.meshcat_visualizer)": [[71, "visuals.meshcat_visualizer.add_object"]], "add_plane() (in module visuals.meshcat_visualizer)": [[71, "visuals.meshcat_visualizer.add_plane"]], "add_sphere() (in module visuals.meshcat_visualizer)": [[71, "visuals.meshcat_visualizer.add_sphere"]], "close_window() (in module visuals.meshcat_visualizer)": [[71, "visuals.meshcat_visualizer.close_window"]], "lower() (visuals.meshcat_visualizer.setpropertycapital method)": [[71, "visuals.meshcat_visualizer.SetPropertyCapital.lower"]], "rgb_float_to_hex() (in module visuals.meshcat_visualizer)": [[71, "visuals.meshcat_visualizer.rgb_float_to_hex"]], "rgb_int_to_hex() (in module visuals.meshcat_visualizer)": [[71, "visuals.meshcat_visualizer.rgb_int_to_hex"]], "rgba_overwrite() (in module visuals.meshcat_visualizer)": [[71, "visuals.meshcat_visualizer.rgba_overwrite"]], "set_color() (in module visuals.meshcat_visualizer)": [[71, "visuals.meshcat_visualizer.set_color"]], "set_object() (in module visuals.meshcat_visualizer)": [[71, "visuals.meshcat_visualizer.set_object"]], "set_property_capital() (in module visuals.meshcat_visualizer)": [[71, "visuals.meshcat_visualizer.set_property_capital"]], "setup_visualizer() (in module visuals.meshcat_visualizer)": [[71, "visuals.meshcat_visualizer.setup_visualizer"]], "visuals.meshcat_visualizer": [[71, "module-visuals.meshcat_visualizer"]], "default_colors (in module visuals.mujoco_visualizer)": [[72, "visuals.mujoco_visualizer.DEFAULT_COLORS"]], "mujocorenderer (class in visuals.mujoco_visualizer)": [[72, "visuals.mujoco_visualizer.MujocoRenderer"]], "rgba (in module visuals.mujoco_visualizer)": [[72, "visuals.mujoco_visualizer.RGBA"]], "trajectory (in module visuals.mujoco_visualizer)": [[72, "visuals.mujoco_visualizer.Trajectory"]], "add_marker() (visuals.mujoco_visualizer.mujocorenderer method)": [[72, "visuals.mujoco_visualizer.MujocoRenderer.add_marker"]], "animate_marker() (visuals.mujoco_visualizer.mujocorenderer method)": [[72, "visuals.mujoco_visualizer.MujocoRenderer.animate_marker"]], "extract_joint_positions() (visuals.mujoco_visualizer.mujocorenderer method)": [[72, "visuals.mujoco_visualizer.MujocoRenderer.extract_joint_positions"]], "framerate (visuals.mujoco_visualizer.mujocorenderer property)": [[72, "visuals.mujoco_visualizer.MujocoRenderer.framerate"]], "get_html() (visuals.mujoco_visualizer.mujocorenderer method)": [[72, "visuals.mujoco_visualizer.MujocoRenderer.get_html"]], "init_ee_position() (visuals.mujoco_visualizer.mujocorenderer method)": [[72, "visuals.mujoco_visualizer.MujocoRenderer.init_ee_position"]], "init_points() (visuals.mujoco_visualizer.mujocorenderer method)": [[72, "visuals.mujoco_visualizer.MujocoRenderer.init_points"]], "initialize_candidate_trajectories() (visuals.mujoco_visualizer.mujocorenderer method)": [[72, "visuals.mujoco_visualizer.MujocoRenderer.initialize_candidate_trajectories"]], "initialize_markers() (visuals.mujoco_visualizer.mujocorenderer method)": [[72, "visuals.mujoco_visualizer.MujocoRenderer.initialize_markers"]], "load_model() (visuals.mujoco_visualizer.mujocorenderer method)": [[72, "visuals.mujoco_visualizer.MujocoRenderer.load_model"]], "play() (visuals.mujoco_visualizer.mujocorenderer method)": [[72, "visuals.mujoco_visualizer.MujocoRenderer.play"]], "render() (visuals.mujoco_visualizer.mujocorenderer method)": [[72, "visuals.mujoco_visualizer.MujocoRenderer.render"]], "reset() (visuals.mujoco_visualizer.mujocorenderer method)": [[72, "visuals.mujoco_visualizer.MujocoRenderer.reset"]], "save() (visuals.mujoco_visualizer.mujocorenderer method)": [[72, "visuals.mujoco_visualizer.MujocoRenderer.save"]], "set_marker() (visuals.mujoco_visualizer.mujocorenderer method)": [[72, "visuals.mujoco_visualizer.MujocoRenderer.set_marker"]], "set_model() (visuals.mujoco_visualizer.mujocorenderer method)": [[72, "visuals.mujoco_visualizer.MujocoRenderer.set_model"]], "show() (visuals.mujoco_visualizer.mujocorenderer method)": [[72, "visuals.mujoco_visualizer.MujocoRenderer.show"]], "show_box_goal() (visuals.mujoco_visualizer.mujocorenderer method)": [[72, "visuals.mujoco_visualizer.MujocoRenderer.show_box_goal"]], "show_goal() (visuals.mujoco_visualizer.mujocorenderer method)": [[72, "visuals.mujoco_visualizer.MujocoRenderer.show_goal"]], "show_trajectory() (visuals.mujoco_visualizer.mujocorenderer method)": [[72, "visuals.mujoco_visualizer.MujocoRenderer.show_trajectory"]], "update_candidate_trajectories() (visuals.mujoco_visualizer.mujocorenderer method)": [[72, "visuals.mujoco_visualizer.MujocoRenderer.update_candidate_trajectories"]], "update_ee_position() (visuals.mujoco_visualizer.mujocorenderer method)": [[72, "visuals.mujoco_visualizer.MujocoRenderer.update_ee_position"]], "update_markers() (visuals.mujoco_visualizer.mujocorenderer method)": [[72, "visuals.mujoco_visualizer.MujocoRenderer.update_markers"]], "update_points() (visuals.mujoco_visualizer.mujocorenderer method)": [[72, "visuals.mujoco_visualizer.MujocoRenderer.update_points"]], "visuals.mujoco_visualizer": [[72, "module-visuals.mujoco_visualizer"]], "wait_for_input() (visuals.mujoco_visualizer.mujocorenderer method)": [[72, "visuals.mujoco_visualizer.MujocoRenderer.wait_for_input"]], "action_inverse() (in module visuals.quaternion_operations)": [[73, "visuals.quaternion_operations.action_inverse"]], "left_action() (in module visuals.quaternion_operations)": [[73, "visuals.quaternion_operations.left_action"]], "pose_to_transformation_matrix() (in module visuals.quaternion_operations)": [[73, "visuals.quaternion_operations.pose_to_transformation_matrix"]], "project_action() (in module visuals.quaternion_operations)": [[73, "visuals.quaternion_operations.project_action"]], "quaternion_inverse() (in module visuals.quaternion_operations)": [[73, "visuals.quaternion_operations.quaternion_inverse"]], "quaternion_to_quaternion_map_jacobian() (in module visuals.quaternion_operations)": [[73, "visuals.quaternion_operations.quaternion_to_quaternion_map_jacobian"]], "quaternion_to_transformation_matrix() (in module visuals.quaternion_operations)": [[73, "visuals.quaternion_operations.quaternion_to_transformation_matrix"]], "right_action() (in module visuals.quaternion_operations)": [[73, "visuals.quaternion_operations.right_action"]], "rotation_matrix() (in module visuals.quaternion_operations)": [[73, "visuals.quaternion_operations.rotation_matrix"]], "skew_symmetric() (in module visuals.quaternion_operations)": [[73, "visuals.quaternion_operations.skew_symmetric"]], "vector_projection() (in module visuals.quaternion_operations)": [[73, "visuals.quaternion_operations.vector_projection"]], "visuals.quaternion_operations": [[73, "module-visuals.quaternion_operations"]]}})